{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/insight.js","path":"js/insight.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/logo.png","path":"css/images/logo.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/avatar.png","path":"css/images/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","path":"css/images/thumb-default-small.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/whale.png","path":"css/images/whale.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","path":"libs/justified-gallery/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","path":"libs/justified-gallery/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/styles.css","path":"libs/open-sans/styles.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","path":"libs/source-code-pro/styles.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/favicon.ico","path":"css/images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","path":"libs/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","path":"libs/lightgallery/css/lg-fb-comment-box.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","path":"libs/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","path":"libs/lightgallery/css/lg-fb-comment-box.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","path":"libs/lightgallery/css/lg-fb-comment-box.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","path":"libs/lightgallery/css/lg-transitions.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","path":"libs/lightgallery/css/lightgallery.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","path":"libs/lightgallery/css/lg-transitions.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","path":"libs/lightgallery/css/lg-transitions.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","path":"libs/lightgallery/css/lightgallery.css.map","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","path":"libs/lightgallery/fonts/lg.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","path":"libs/lightgallery/css/lightgallery.min.css","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","path":"libs/lightgallery/fonts/lg.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","path":"libs/lightgallery/fonts/lg.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","path":"libs/lightgallery/fonts/lg.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","path":"libs/lightgallery/img/loading.gif","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","path":"libs/lightgallery/img/video-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","path":"libs/lightgallery/img/vimeo-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","path":"libs/lightgallery/img/youtube-play.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","path":"libs/lightgallery/js/lg-autoplay.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","path":"libs/lightgallery/js/lg-autoplay.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","path":"libs/lightgallery/js/lg-fullscreen.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","path":"libs/lightgallery/js/lg-fullscreen.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","path":"libs/lightgallery/js/lg-hash.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","path":"libs/lightgallery/js/lg-hash.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","path":"libs/lightgallery/js/lg-pager.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","path":"libs/lightgallery/js/lg-pager.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","path":"libs/lightgallery/js/lg-share.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","path":"libs/lightgallery/js/lg-share.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","path":"libs/lightgallery/js/lg-thumbnail.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","path":"libs/lightgallery/js/lg-thumbnail.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","path":"libs/lightgallery/js/lg-video.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","path":"libs/lightgallery/js/lg-video.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","path":"libs/lightgallery/js/lg-zoom.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","path":"libs/lightgallery/js/lg-zoom.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","path":"libs/lightgallery/js/lightgallery.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","path":"libs/lightgallery/js/lightgallery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","path":"libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","path":"libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","path":"libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","path":"libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","path":"libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","path":"libs/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","path":"libs/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","path":"libs/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","path":"libs/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","path":"libs/jquery/2.1.3/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","path":"libs/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","path":"libs/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/profile_pic.jpg","path":"css/images/profile_pic.jpg","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/images/profile_pic.png","path":"css/images/profile_pic.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"fbaa8154c2fd3a8f1b1e5c7c14b155a4f55a9f66","modified":1489197076000},{"_id":"themes/icarus/LICENSE","hash":"df00918fa95de563927fd92b26f14c7affdc3052","modified":1489077013000},{"_id":"themes/icarus/README.md","hash":"25c75503f044b817297995a96621c92ce037a098","modified":1489077013000},{"_id":"themes/icarus/.DS_Store","hash":"b71975f008908ea64b717e5cda1940ffcd91470d","modified":1489285713000},{"_id":"themes/icarus/_config.yml","hash":"4213746c3935f9e3153376aebf6f94aba473ce1e","modified":1490005852000},{"_id":"themes/icarus/package.json","hash":"1bc52ef10a33df23e56bd73c927f605019c87d41","modified":1489077013000},{"_id":"source/_posts/automatic-deployment-with-git.md","hash":"5c2841770180cb68a0e8026dec8a5bf3e90f488d","modified":1490003598000},{"_id":"source/_posts/HTTPS-with-Letsencrypt.md","hash":"560df0254644cbe5945fc200a68a874a708adcfc","modified":1489894241000},{"_id":"source/_posts/.DS_Store","hash":"c2b9b68c6039f1f4bc51d84c5c443a93bf59f722","modified":1489911160000},{"_id":"source/_posts/bitcoin-blockchain.md","hash":"4eb8f5ee2bcfc728b133bc366f7737bdc1a9940d","modified":1489911656000},{"_id":"source/_posts/coursera-downloader.md","hash":"b0107bacdc4488c755c46ca7f263d3aeb7197ceb","modified":1490961254000},{"_id":"source/_posts/get-list-of-hdfs-files-python.md","hash":"e493aec3ac509dc3be88a8287b4628ee1fd981bf","modified":1506421571000},{"_id":"source/_posts/hexo-user-notes.md","hash":"a08268d27430a75b1cd3bb0dc758fb1d277e1a41","modified":1489893029000},{"_id":"source/_posts/image-hosting-and-https.md","hash":"753d372b861b39aafed7e810e8dd27da96efe568","modified":1489911428000},{"_id":"source/_posts/blockchain-and-supply-chain.md","hash":"69938a1b6a01ee3cedb82216a4e03db33e4aeb36","modified":1489911566000},{"_id":"source/_posts/deploy-hexo-blog-to-VPS.md","hash":"1fba799fd3ff4e5114d575ef0eaa7592182dbc75","modified":1501682490000},{"_id":"source/_posts/install-hadoop-on-Mac-Sierra.md","hash":"433f705c79fa9bd8b72e57c1d09238df0b74b27f","modified":1490960694000},{"_id":"source/_posts/hexo-icarus-settings.md","hash":"b335d843e84b1cdbd268109fb4e15b9a9c73bec3","modified":1489910919000},{"_id":"source/_posts/push-to-github-with-multiple-accounts.md","hash":"7aba04d64c1c6e6dcaab0b20467d599a79476580","modified":1518097181000},{"_id":"source/_posts/setup-hexo-locally-on-mac-OS.md","hash":"b64a17100e272eb4d77d0d8175c30a766e7946e0","modified":1490006590000},{"_id":"source/_posts/spark-zsh-no-matches-found-local.md","hash":"150ca48b0bed55da0b8ab9fb5a90afb84fdac507","modified":1490006047000},{"_id":"source/_posts/speed-up-oh-my-zsh.md","hash":"62a921220dd9deb5bde9e5521ae56f53f63e682b","modified":1506421266000},{"_id":"source/_posts/rebuild-personal-website-and-blog.md","hash":"a55d09052f958ce8fd1c2cf473cb204da11fdc97","modified":1489911523000},{"_id":"source/_posts/tcp-ip.md","hash":"4c9f0511ff13ff0e36fb524f939df7b47e48bf3a","modified":1501683330000},{"_id":"source/_posts/understand-blockchain-01.md","hash":"bdf3f267cec8ea86822928ca938ab413b4081334","modified":1489911194000},{"_id":"source/_posts/区块链真的必要吗.md","hash":"428e76a47629ca3b767f6e789f8107901c9b259f","modified":1489930020000},{"_id":"source/about/index.md","hash":"8299f6d56e19543e69bbf8dcbb85c527df3f0664","modified":1506422023000},{"_id":"source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1489077013000},{"_id":"source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1489077013000},{"_id":"themes/icarus/_source/.DS_Store","hash":"08d5f02e78a8b24e4e434dbc57495ed0fc0d00c8","modified":1489195741000},{"_id":"themes/icarus/languages/en.yml","hash":"ade241498b85503a8953a1deca963222f47067a7","modified":1489077013000},{"_id":"themes/icarus/languages/fr.yml","hash":"cb3e597cbec7e8f458858c457bafd1f3a225083d","modified":1489077013000},{"_id":"themes/icarus/languages/es.yml","hash":"d7432219be5bee4cb569331378ade61b749688e0","modified":1489077013000},{"_id":"themes/icarus/languages/id.yml","hash":"70ec9ab2ac04cf882e81377ca5ad15bf8adceca8","modified":1489077013000},{"_id":"themes/icarus/languages/ja.yml","hash":"ff972961e5f468a695d80d21b62c3e9032cdf561","modified":1489077013000},{"_id":"themes/icarus/languages/ko.yml","hash":"7c4ad4577dc0577ad2ca1c0410507f5e5fadf530","modified":1489077013000},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"3c5d5293575593705b9a2dfa9d97b017eb4bc8c3","modified":1489077013000},{"_id":"themes/icarus/languages/ru.yml","hash":"d1aab2b0c939d0c6020f881d664b660a01ee7327","modified":1489077013000},{"_id":"themes/icarus/languages/tr.yml","hash":"8b7eb6aec264db50dbabea89f680acca256f4cd1","modified":1489077013000},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"3dc8ec524805afd090438be717908750da439204","modified":1489077013000},{"_id":"themes/icarus/layout/archive.ejs","hash":"c1ecf667f40f34d61ab33eed46bab143eb1af36d","modified":1489077013000},{"_id":"themes/icarus/layout/categories.ejs","hash":"aa95629b770cff8cca9d663aeb6b17928f070de5","modified":1489077013000},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"d8d96a0a17c20af11919ce036e87379a6b163db9","modified":1489077013000},{"_id":"themes/icarus/layout/category.ejs","hash":"1d407f9176db84e83062c52ad4755aaea9e74401","modified":1489077013000},{"_id":"themes/icarus/layout/page.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1489077013000},{"_id":"themes/icarus/layout/.DS_Store","hash":"77a817ec46dc19029a35b00f1ac422f19b0b2c72","modified":1489235297000},{"_id":"themes/icarus/layout/index.ejs","hash":"43e971ebc35657b18e08a049559790348a16666f","modified":1489077013000},{"_id":"themes/icarus/layout/layout.ejs","hash":"68dce13bc3e8dee1ab50ab80576ab722157e119a","modified":1489800780000},{"_id":"themes/icarus/scripts/meta.js","hash":"1993754a2f3dffa283fa0538eb8f056385b69ad4","modified":1489077013000},{"_id":"themes/icarus/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1489077013000},{"_id":"themes/icarus/layout/post.ejs","hash":"50170783bac99946ae8af483920568de9b2d9801","modified":1489077013000},{"_id":"themes/icarus/layout/tags.ejs","hash":"b0fcea68d7c11e5899bf0375d80997685111653f","modified":1489077013000},{"_id":"themes/icarus/layout/tag.ejs","hash":"f6c220d4e5c231028bc71ddc11aec97d7b5a9943","modified":1489077013000},{"_id":"themes/icarus/source/.DS_Store","hash":"dc10dfb67dcb4ca441e500dd9a1f5cdcd3e60ca2","modified":1489083910000},{"_id":"source/_posts/media/14829172517203.jpg","hash":"fe2e99e948b3b9584d531582f6977373ea72b36e","modified":1482917251000},{"_id":"source/_posts/media/14829171346517.jpg","hash":"d3d1c2fa32a3168c31db19abe2ce1dd10a06da2a","modified":1482917134000},{"_id":"source/_posts/media/14834174393360.jpg","hash":"bef7a4300ec9c9a20316c49004f0c3f33f425669","modified":1483417439000},{"_id":"source/_posts/media/14834176626345.jpg","hash":"7d167acb1c4e5844f72957001a19f64bd5a680b4","modified":1483417662000},{"_id":"source/_posts/media/14834271525238.jpg","hash":"394177a4cb3ddbf9ee3144334d6785ea0c752031","modified":1483427152000},{"_id":"source/_posts/media/14835023341875.png","hash":"f045ff0849daeb0ad9e199b5fbab7069328088ff","modified":1483502334000},{"_id":"source/_posts/media/14872108408581.jpg","hash":"e5c53c0923a2a7fc624810cefc808a3b5560fec3","modified":1487210840000},{"_id":"source/_posts/media/14872143106349.png","hash":"5b26c7cba2adb887cf8a532a1b4140fa9c50276c","modified":1487214310000},{"_id":"source/_posts/media/14874925093236.png","hash":"cebb0a25436a3e919febf616a3dd65b582271406","modified":1487492509000},{"_id":"source/_posts/media/14872143238335.png","hash":"4b5c14d3be9d736a1bc53e6661cfe735811ff32e","modified":1487214323000},{"_id":"source/_posts/media/14872147436908.gif","hash":"f2c8e3bd427546fd412b6030f16032e45a3e4381","modified":1487214743000},{"_id":"source/_posts/media/14875567718974.jpg","hash":"bbdd0b0b8642182b8a078107f9f20dd72fb17adc","modified":1487556771000},{"_id":"source/_posts/media/14897373101631.jpg","hash":"f833a415f39b694f8deb6de7f9b0202ac2ffde27","modified":1489737310000},{"_id":"source/_posts/media/14891972108134.jpg","hash":"4c2aba52de41e806289c7fd30e33820fc4bb8fad","modified":1489197210000},{"_id":"source/_posts/media/14897372959318.jpg","hash":"17e5166a2171cfa5ebfdbb9c69c558dd3719d87f","modified":1489737295000},{"_id":"source/_posts/media/14898921653620.jpg","hash":"c36ac7525ae57c8e53b6889179d455d9c93c54f0","modified":1489892165000},{"_id":"themes/icarus/_source/categories/index.md","hash":"55bee2cb88da438a2e8b1f29b1d7e954c07a9e60","modified":1489077013000},{"_id":"themes/icarus/_source/about/index.md","hash":"2847759c65295fdc47685cc32e10ae30b2f022ae","modified":1489077013000},{"_id":"themes/icarus/_source/tags/index.md","hash":"e999413d6392c34156b5c6e9273f9069f9e6d92d","modified":1489077013000},{"_id":"themes/icarus/layout/comment/duoshuo.ejs","hash":"ce46d7410a99b57704da32e9d09071cef6c9fa93","modified":1489077013000},{"_id":"themes/icarus/layout/comment/counter.ejs","hash":"59abd552086c26cb0a6fd86d18ce380c3b1b3c55","modified":1489077013000},{"_id":"themes/icarus/layout/comment/disqus.ejs","hash":"1b32a90f400dc580f4b8298de75b94429ca6de68","modified":1489077013000},{"_id":"themes/icarus/layout/comment/facebook.ejs","hash":"5ee16430a4435c2fead0275ff83fc98092d73d4c","modified":1489077013000},{"_id":"themes/icarus/layout/comment/index.ejs","hash":"0913444317759c3ff0588ca3aa4a6a89b6595307","modified":1489077013000},{"_id":"themes/icarus/layout/comment/scripts.ejs","hash":"305aa07646ab03e00d8239a811f4ec6f75751e1e","modified":1489077013000},{"_id":"themes/icarus/layout/comment/isso.ejs","hash":"4f8b81ff5bb418ec11ce080d515f247bfe436014","modified":1489077013000},{"_id":"themes/icarus/layout/common/article.ejs","hash":"a996bdae70430a5f5b1cef452a9e0d78a21f34cf","modified":1490005907000},{"_id":"themes/icarus/layout/common/head.ejs","hash":"44f30945882afd27c89da2173da501fb1b531488","modified":1489077013000},{"_id":"themes/icarus/layout/common/header.ejs","hash":"738c6a923b2a6de6a81c4892c8a47e03d8b34f88","modified":1489077013000},{"_id":"themes/icarus/layout/comment/youyan.ejs","hash":"6fe807992832939caf6c3e7651d052df9520d88e","modified":1489077013000},{"_id":"themes/icarus/layout/common/footer.ejs","hash":"79ad7f2c8ab0662acfc754ad314522720d010533","modified":1489286644000},{"_id":"themes/icarus/layout/common/profile.ejs","hash":"500f05cd15633b004a967ca4802dae9120a2d613","modified":1489200546000},{"_id":"themes/icarus/layout/common/sidebar.ejs","hash":"6e80fa52d23c9c39bfa357a1e00c26fc8b851b82","modified":1489077013000},{"_id":"themes/icarus/layout/common/scripts.ejs","hash":"c0a1a9e53f89440c42c325d5bd8c7234652c8937","modified":1489077013000},{"_id":"themes/icarus/layout/common/.DS_Store","hash":"b23b477f2ae40596f80e1b691ec002c66835f2c6","modified":1489195825000},{"_id":"themes/icarus/layout/common/timeline.ejs","hash":"6420e34e0332c9b6670011519f341340db989343","modified":1489077013000},{"_id":"themes/icarus/layout/common/thumbnail.ejs","hash":"1b70f8a98cd8650b159bda858dbee38dbdb7f0c5","modified":1489077013000},{"_id":"themes/icarus/layout/plugin/baidu-analytics.ejs","hash":"6a7bee18e666e627e62541a5e30906f87ba1bfe8","modified":1489077013000},{"_id":"themes/icarus/layout/plugin/google-analytics.ejs","hash":"349f08b6521a16e79046b1f94f04317ac74f556e","modified":1489077013000},{"_id":"themes/icarus/layout/search/index-mobile.ejs","hash":"50a727ac1dfe3073eb6fa6699ba01e66f4ac41c0","modified":1489077013000},{"_id":"themes/icarus/layout/plugin/scripts.ejs","hash":"4fdb85e6730530f2d262041b41d1ead1b87dfd88","modified":1489077013000},{"_id":"themes/icarus/layout/search/baidu.ejs","hash":"3e603a702d20c53fd3bcbeb570a16a86d54781ce","modified":1489077013000},{"_id":"themes/icarus/layout/search/index.ejs","hash":"24935e32e61d4706454b174ea3bed0726ae7fb34","modified":1489077013000},{"_id":"themes/icarus/layout/search/insight.ejs","hash":"130fe3d33ac71da0b50f7fee6a87979f30938a1b","modified":1489077013000},{"_id":"themes/icarus/layout/search/swiftype.ejs","hash":"379e66d2c13526e72e4120c443f95fccf4edef71","modified":1489077013000},{"_id":"themes/icarus/layout/share/addtoany.ejs","hash":"ac180c4c84b73a04d61b17e7dc18c257e20bf59f","modified":1489077013000},{"_id":"themes/icarus/layout/share/bdshare.ejs","hash":"a1e772c5a6f174d585b0c1e574058f75dc8e2898","modified":1489077013000},{"_id":"themes/icarus/layout/share/default.ejs","hash":"ebfb919dc525b3ed61a6a5ee05ee71410eedc541","modified":1489077013000},{"_id":"themes/icarus/layout/share/index.ejs","hash":"2a2c0095b95b11e5692bd8ad6a2337aa644189a2","modified":1489077013000},{"_id":"themes/icarus/layout/share/jiathis.ejs","hash":"21ebaa51e828cba2cefbeeaccb01514643565755","modified":1489077013000},{"_id":"themes/icarus/layout/widget/archive.ejs","hash":"d9ebbb7f6ce2f25df5ae25e4a1fef3c08f7054b9","modified":1489077013000},{"_id":"themes/icarus/layout/widget/category.ejs","hash":"583bda80cf15b3ef11fefbd1b502897dfff40100","modified":1489077013000},{"_id":"themes/icarus/layout/widget/links.ejs","hash":"5e3a4a08ec6c146c14010ca7a03b57fccab6a7f6","modified":1489159963000},{"_id":"themes/icarus/layout/widget/recent_posts.ejs","hash":"2ca923465275fb38a7ac7d67211d6e94a977e957","modified":1489077013000},{"_id":"themes/icarus/layout/widget/tag.ejs","hash":"3b8ae5953990436893da9d68f910ebe592005659","modified":1489077013000},{"_id":"themes/icarus/layout/widget/tagcloud.ejs","hash":"ca8c7bf555fb6ce4904f2c59160548405c2c8a82","modified":1489077013000},{"_id":"themes/icarus/source/css/.DS_Store","hash":"7bb409d4f608287ef0f2836bc16912b52b00e804","modified":1489766160000},{"_id":"themes/icarus/source/css/_extend.styl","hash":"9a5c72663c0da1b32ecb6a75773a5ccfb8c467ca","modified":1489077013000},{"_id":"themes/icarus/source/css/style.styl","hash":"367fd86ba213ced68052c64cf5895ac146bf7785","modified":1489762696000},{"_id":"themes/icarus/source/css/_variables.styl","hash":"2d3711e9ee47069c17b91e30285833a65d219ac4","modified":1489753561000},{"_id":"themes/icarus/source/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1489765185000},{"_id":"themes/icarus/source/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1489077013000},{"_id":"themes/icarus/source/libs/.DS_Store","hash":"e1fd7351abd3b19a8abe0a99a238a7a32a45c46f","modified":1489234690000},{"_id":"source/_posts/media/14829171046099.jpg","hash":"dba7d0c33b1e201b073fe43f00a23a03bf8d2805","modified":1482917104000},{"_id":"source/_posts/media/14834178266616.jpg","hash":"8305c0e12161f1d8b226aa30273bd806e549b76a","modified":1483417826000},{"_id":"source/_posts/media/14835028794046.jpg","hash":"9661a1d69879488a09803ffd6059ef6567530bc4","modified":1483502879000},{"_id":"source/_posts/media/14835824591159.jpg","hash":"2fd4dd037861faa664e1902f04382458606fc8a7","modified":1483582459000},{"_id":"source/_posts/media/14839406499597.jpg","hash":"67aa19819d036319b1985833931e8f046da1a883","modified":1483940649000},{"_id":"source/_posts/media/14872141052756.jpg","hash":"556de10e26541d587d85c211a95f288d0c52e32c","modified":1487214105000},{"_id":"source/_posts/media/14898915018403.jpg","hash":"6055ab35997a719e8c7008c2aea8be0a5556b8a8","modified":1489891501000},{"_id":"source/_posts/media/14898918353591.jpg","hash":"577b2b05515d9c902bc81c9e533e187e9426ff6b","modified":1489891835000},{"_id":"source/_posts/media/14898931224923.jpg","hash":"a44753524ed943993709b9ae2e82f90a7ddd7e15","modified":1489893122000},{"_id":"source/_posts/media/14898931329803.jpg","hash":"de5945a570ac026a436f1ddfe6a12b82cc0faafb","modified":1489893132000},{"_id":"source/_posts/media/14832797016611.png","hash":"659138f881135ca1c64273fb759c4869c163c563","modified":1483279701000},{"_id":"source/_posts/media/14872125483479.png","hash":"e073af5351956b44b988e72ec9d4781e123dcb2f","modified":1487212548000},{"_id":"themes/icarus/layout/common/post/banner.ejs","hash":"47ced3f03525698c79c6b1c07b48383fb6c496b2","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/category.ejs","hash":"75c9dda2e7ec041943855ca163a6b1c4c8b4f260","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/date.ejs","hash":"45cb0bcad461036cdd1fe2e3fbb5f2f19940025c","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/gallery.ejs","hash":"659f019761116313169148ec61773e7b84abb739","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/nav.ejs","hash":"d7cd611e642327f33dff3963ef869c2b46824a11","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/tag.ejs","hash":"2e966216256321aa0c76fe1b9be689601c76ef31","modified":1489077013000},{"_id":"themes/icarus/layout/common/post/title.ejs","hash":"669ddb46fefa100856588351a7a2d30ad996b755","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/agate.styl","hash":"601eb70448a16b918df132f6fc41e891ae053653","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/arta.styl","hash":"1a5accc115f41d1b669ed708ac6a29abac876599","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/androidstudio.styl","hash":"65d09f1b0e81c6a182f549fd3de51e59823c97ae","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-dark.styl","hash":"bc647b2c1d971d7cc947aa1ed66e9fd115261921","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-dark.styl","hash":"d84382bc8298f96730757391d3e761b7e640f406","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-dark.styl","hash":"df50a85a4b14c7ca6e825d665594b91229d0e460","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-dark.styl","hash":"57c154c6045a038dc7df0a25927853e10bf48c4a","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-heath-dark.styl","hash":"b0cf13b2233e7bc38342032d2d7296591a4c2bcf","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"bb0a8c4ad0dd8e3e7de7122ddf268fc42aa94acb","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-plateau-dark.styl","hash":"09c64f1a7052aec9070c36c0431df25216afaea1","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-dark.styl","hash":"a16c919a1ccf2f845488078fb341381bec46b1f3","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-seaside-dark.styl","hash":"ce233a101daea7124cbfcd34add43ccfe2e1e1c7","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"414b0cfc142f70afe359c16450b651e28bf7325a","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/codepen-embed.styl","hash":"f4dcc84d8e39f9831a5efe80e51923fc3054feb0","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/dark.styl","hash":"71ce56d311cc2f3a605f6e2c495ccd7236878404","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/darkula.styl","hash":"ad0d5728d21645039c9f199e7a56814170ed3bab","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/far.styl","hash":"d9928010ffe71e80b97a5afcba1a4975efdd7372","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/hybrid.styl","hash":"ea8d7ddc258b073308746385f5cb85aabb8bfb83","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/hopscotch.styl","hash":"b374c6550b89b4751aedc8fbc3cf98d95bd70ead","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/index.styl","hash":"903a1f2c6ec62cf76a44f92a2dbb52178a4ce94a","modified":1489248914000},{"_id":"themes/icarus/source/css/_highlight/ir-black.styl","hash":"693078bbd72a2091ed30f506cc55949600b717af","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/monokai-sublime.styl","hash":"25aa2fc1dbe38593e7c7ebe525438a39574d9935","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/obsidian.styl","hash":"55572bbcfee1de6c31ac54681bb00336f5ae826d","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/monokai.styl","hash":"5a4fe9f957fd7a368c21b62a818403db4270452f","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.styl","hash":"77dae9dc41945359d17fe84dbd317f1b40b2ee33","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/rainbow.styl","hash":"ce73b858fc0aba0e57ef9fb136c083082746bc1d","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/railscasts.styl","hash":"acd620f8bb7ff0e3fe5f9a22b4433ceef93a05e6","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/solarized-dark.styl","hash":"702b9299a48c90124e3ac1d45f1591042f2beccc","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/school-book.styl","hash":"d43560fe519a931ce6da7d57416d7aa148441b83","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/sunburst.styl","hash":"a0b5b5129547a23865d400cfa562ea0ac1ee3958","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-blue.styl","hash":"8b3087d4422be6eb800935a22eb11e035341c4ba","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-bright.styl","hash":"0ac6af6ecb446b5b60d6226748e4a6532db34f57","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night.styl","hash":"19b3080d4b066b40d50d7e7f297472482b5801fd","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"fa57b3bb7857a160fc856dbe319b31e30cc5d771","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1489077013000},{"_id":"themes/icarus/source/css/_highlight/zenburn.styl","hash":"fc5ec840435dad80964d04519d3f882ddc03746a","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/archive.styl","hash":"d35088c83ddd7a197d6d94e16a2ce3a7e29fa1dc","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/comment.styl","hash":"784646796184d4f27918c22395288a2fafbf9554","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/article_backup.styl","hash":"512b9252e1799b93a17c4ad847b0586814a030b4","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/article.styl","hash":"49159a9d8a42d8478d66b93cf5c6ad20ee71b480","modified":1489281461000},{"_id":"themes/icarus/source/css/_partial/footer.styl","hash":"484776654e4c1691dc844e6e93786a08855c1c99","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/insight.styl","hash":"19833cd127f26ad90b06c115f8a96a30e0c0e53b","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/profile.styl","hash":"fb0170075dc2a41e01dd11bbfdbccbed544c479a","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/header.styl","hash":"1e351f741144135871a3373fe7e969dc961b65e7","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/timeline.styl","hash":"c813b98f4fc45b64d2e07e5d944745a654c8c943","modified":1489077013000},{"_id":"themes/icarus/source/css/_partial/sidebar.styl","hash":"f528ca7064d9fcecd737b9b71c9c54601365d7d3","modified":1489077013000},{"_id":"themes/icarus/source/css/_util/grid.styl","hash":"93fb6f1e2f40cd7d88ad0d56dd73d3f9a7bc853e","modified":1489077013000},{"_id":"themes/icarus/source/css/_util/mixin.styl","hash":"c8e1ddfc0fe9108bab592c7a73b73ce9344991fd","modified":1489077013000},{"_id":"themes/icarus/source/css/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1489198296000},{"_id":"themes/icarus/source/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1489077013000},{"_id":"themes/icarus/source/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1489077013000},{"_id":"themes/icarus/source/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1489077013000},{"_id":"themes/icarus/source/css/images/whale.png","hash":"5e59a7b7bed8480212a40ee5b0723cbfe9f27c52","modified":1489084199000},{"_id":"themes/icarus/source/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1489077013000},{"_id":"themes/icarus/source/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1489077013000},{"_id":"themes/icarus/source/libs/source-code-pro/.DS_Store","hash":"f373e7b9b6d3b211049d1fdca9ee91d900953168","modified":1489234696000},{"_id":"themes/icarus/source/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1489077013000},{"_id":"themes/icarus/source/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/.DS_Store","hash":"f373e7b9b6d3b211049d1fdca9ee91d900953168","modified":1489234690000},{"_id":"source/_posts/media/14839471054639.png","hash":"9366a84e418767eb817a3575171dd7037d6175b8","modified":1483947105000},{"_id":"themes/icarus/source/css/images/favicon.ico","hash":"72e198149b2809bc8af629da284399985e9023ec","modified":1373527418000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1489077013000},{"_id":"themes/icarus/source/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1489077013000},{"_id":"themes/icarus/source/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1489077013000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1489077013000},{"_id":"themes/icarus/source/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1489077013000},{"_id":"themes/icarus/source/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1489077013000},{"_id":"themes/icarus/source/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1489077013000},{"_id":"themes/icarus/source/css/images/profile_pic.jpg","hash":"711730ef8fb882aebbfb020ac1e6940b5a071166","modified":1471665932000},{"_id":"themes/icarus/source/css/images/profile_pic.png","hash":"970f83840145140e731826c6947d51f735faf6b4","modified":1489195154000},{"_id":"source/_posts/media/14845303553536.jpg","hash":"83afcd865208d4713f883f8fa47e4d2f4ba1ce84","modified":1484530355000},{"_id":"public/content.json","hash":"2a17fa40f7e899959b38c586764157cd7c19ca07","modified":1518097246094},{"_id":"public/post-sitemap.xml","hash":"b7cca09381d2d33dd1485a2f9403c5d72d0e5d76","modified":1518097246435},{"_id":"public/page-sitemap.xml","hash":"fe89df4111c5d9af83696d50be9d23ad072c7ec9","modified":1518097246442},{"_id":"public/category-sitemap.xml","hash":"720783d2e5e9cbdafd451080b298d798f5ade912","modified":1518097246442},{"_id":"public/tag-sitemap.xml","hash":"e46a152504775a7345a0d7da0118913c9a5822b5","modified":1518097246442},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1518097246443},{"_id":"public/sitemap.xml","hash":"4fb5d7e228e84ec07960a8e5afb11c363d43f67f","modified":1518097246443},{"_id":"public/about/index.html","hash":"4d096ba425d5844705b7056ba8bc0b3e68567c1c","modified":1518097246509},{"_id":"public/categories/index.html","hash":"6aeabe33157ef4650b5a0e14a1244510cbc17a77","modified":1518097246572},{"_id":"public/tags/index.html","hash":"b9531649bd13ef33928385615f804a17afc80949","modified":1518097246576},{"_id":"public/2017/09/26/get-list-of-hdfs-files-python/index.html","hash":"ec3f7cd7de90d3483e9595cfb19c49f3f0584963","modified":1518097246577},{"_id":"public/2017/03/31/coursera-downloader/index.html","hash":"8b6ef4e0e8a223aa9561fcc2a2d077f018133a54","modified":1518097246577},{"_id":"public/2017/03/20/spark-zsh-no-matches-found-local/index.html","hash":"e945b05bfc76494c2b479890a3ca0cedd9162510","modified":1518097246577},{"_id":"public/2017/03/20/automatic-deployment-with-git/index.html","hash":"de6a9240a9b1f1bf292f4944de21bce98cccabcd","modified":1518097246578},{"_id":"public/2017/03/17/image-hosting-and-https/index.html","hash":"9466143739b218126d76728ac91acf780ccbc7c7","modified":1518097246578},{"_id":"public/categories/Website-Dev/index.html","hash":"47aa82b16cb7b2083761f9397ab022db3fb88f2f","modified":1518097246579},{"_id":"public/categories/Blockchain/index.html","hash":"20b6b5531082ead3794ce31f80956cce8819258d","modified":1518097246579},{"_id":"public/categories/Scraping/index.html","hash":"01ba1e1bedd61364140f84d0c493a9646038ff9f","modified":1518097246580},{"_id":"public/categories/Spark/index.html","hash":"29d846e50900cda68503df4e8181e8d623308304","modified":1518097246580},{"_id":"public/categories/Hexo/index.html","hash":"187567128a1434e4fa2fda25bf773bd453fa86d0","modified":1518097246581},{"_id":"public/categories/Hadoop/index.html","hash":"998429cb17094c207bc35da02ed7f18f604f8ea2","modified":1518097246581},{"_id":"public/categories/Others/index.html","hash":"01ccb1fda435707fe7bae6a265288e6a7606c0bf","modified":1518097246582},{"_id":"public/archives/page/3/index.html","hash":"9434f77482bc1f67642e8b528194bba98e6170b4","modified":1518097246582},{"_id":"public/archives/2017/page/3/index.html","hash":"ca5df8d6937177968aebb8b3bd7f8b5df03f1677","modified":1518097246582},{"_id":"public/archives/2017/01/index.html","hash":"b68e7f0804b7bfd989ade8c03da532076cd59e27","modified":1518097246582},{"_id":"public/archives/2017/02/index.html","hash":"90d6241471621c7a27230b40d64010dadd811efe","modified":1518097246583},{"_id":"public/archives/2017/03/page/2/index.html","hash":"4d3af637d55c9d81fb31da1f4aa0f689f3621177","modified":1518097246583},{"_id":"public/archives/2017/07/index.html","hash":"873e4db8340092c46c44945edba1b105ed6e4de8","modified":1518097246583},{"_id":"public/archives/2017/08/index.html","hash":"1f9a5a746c0048fef1bf009a3310e5e9926bc1b3","modified":1518097246584},{"_id":"public/archives/2017/09/index.html","hash":"e0a6478bf1d9111d7b90d24dc9e4f066df0c02f4","modified":1518097246584},{"_id":"public/tags/website-dev/index.html","hash":"a8923917527132ba7576d8b5965bfbeff8f04309","modified":1518097246584},{"_id":"public/tags/blockchain/index.html","hash":"bb243ce09d1acdff848a4f96326b53d3bf04ae6f","modified":1518097246584},{"_id":"public/tags/web-scraping/index.html","hash":"348e0a312b11bfcb3d8191904626de7b95ce910e","modified":1518097246584},{"_id":"public/tags/spark/index.html","hash":"09f6d0a9d4a4d5e3b0c7ea9080060d755b5907f7","modified":1518097246585},{"_id":"public/tags/hadoop/index.html","hash":"2ba9cb84646e056aa0a9c55c89c463a5bb3cc81d","modified":1518097246585},{"_id":"public/tags/python/index.html","hash":"f1c1bf09ab1557fbb9e43a61f2c399a65c6dee90","modified":1518097246585},{"_id":"public/tags/hexo/index.html","hash":"6ec1c63997d38ecf9bd615938f9029e398e6471a","modified":1518097246585},{"_id":"public/tags/shell/index.html","hash":"336ecac57c8b226a5ab6e334f480f54e744e31d0","modified":1518097246586},{"_id":"public/tags/network/index.html","hash":"67db54f7c45dd69cd7a576987c1712127e76612f","modified":1518097246586},{"_id":"public/2017/08/17/speed-up-oh-my-zsh/index.html","hash":"1479af4b4874885ff9b147bcddb4478d3f0c4207","modified":1518097246586},{"_id":"public/2017/07/31/tcp-ip/index.html","hash":"525ed4414d6039ddd750c833d546c65ab20cc7c9","modified":1518097246586},{"_id":"public/2017/03/29/install-hadoop-on-Mac-Sierra/index.html","hash":"0ae96513cbf4b6a720597556d9220d5a1c61a027","modified":1518097246587},{"_id":"public/2017/03/20/deploy-hexo-blog-to-VPS/index.html","hash":"9cd04c3feefa0c310bc3d1c8a3a6b7f4969a48ec","modified":1518097246587},{"_id":"public/2017/03/17/HTTPS-with-Letsencrypt/index.html","hash":"502dd82c7579d33b443575e2b5d0c472161e962a","modified":1518097246587},{"_id":"public/2017/03/11/rebuild-personal-website-and-blog/index.html","hash":"abfbe5663d013dddfbcfba566f794edaa0044577","modified":1518097246587},{"_id":"public/2017/03/11/hexo-user-notes/index.html","hash":"56b253f88c37183519326247e69fb5770eca9faa","modified":1518097246587},{"_id":"public/2017/03/10/hexo-icarus-settings/index.html","hash":"cc5cdf381d278b54de871120f5a88bdc72e6535c","modified":1518097246588},{"_id":"public/2017/03/02/setup-hexo-locally-on-mac-OS/index.html","hash":"e314d368c903311d363caac0c5c776372ca96f3b","modified":1518097246588},{"_id":"public/2017/02/19/区块链真的必要吗/index.html","hash":"0dac959d8f231b758aab94f082aa06d54b375c77","modified":1518097246588},{"_id":"public/2017/02/10/blockchain-and-supply-chain/index.html","hash":"10c1d152045ffecb83801e8c6268815fa0aec5ab","modified":1518097246588},{"_id":"public/2017/01/25/understand-blockchain-01/index.html","hash":"753b288622fa6fb104a5fde6e4d124eef00e4e22","modified":1518097246589},{"_id":"public/2017/01/19/bitcoin-blockchain/index.html","hash":"a909be830eb549f80371e3457a43bb42b296f225","modified":1518097246589},{"_id":"public/index.html","hash":"ee4276fb70d241c6266f21bb3bce94e3382a50ff","modified":1518097246589},{"_id":"public/page/2/index.html","hash":"dc52790f56a0a1814fea4a043279a2b3bfe131d2","modified":1518097246589},{"_id":"public/page/3/index.html","hash":"c26532768466f94d2c8398a3614ee7f7b792d853","modified":1518097246590},{"_id":"public/archives/index.html","hash":"18b4ea8d88d93bc7a0dacb10b915e819f7c74256","modified":1518097246590},{"_id":"public/archives/page/2/index.html","hash":"3326339e6be18588ac9d110683155902c0a3b8d1","modified":1518097246590},{"_id":"public/archives/2017/index.html","hash":"035780ef0ddfc538f59431aa74e17daefc2d370e","modified":1518097246590},{"_id":"public/archives/2017/page/2/index.html","hash":"0f71f819ef27bd6e49708221b4d9d20edab7281c","modified":1518097246590},{"_id":"public/archives/2017/03/index.html","hash":"0eadc1f324b1d9a203b20371a9a97a8eef4cb1fe","modified":1518097246591},{"_id":"public/archives/2018/index.html","hash":"d6c6d21019013e8d98c8272a0d43c012bad3b066","modified":1518097246619},{"_id":"public/archives/2018/02/index.html","hash":"ba13a587c42bf3078cf224f5fca7d542f6b4634b","modified":1518097246622},{"_id":"public/tags/git/index.html","hash":"895c10b1deca1cc3e461468ae39b0e96e6bc3ff3","modified":1518097246622},{"_id":"public/2018/02/08/push-to-github-with-multiple-accounts/index.html","hash":"4fa0ef99c7df80ae54d3d9419cce7b2cf18e7981","modified":1518097246623},{"_id":"public/css/images/logo.png","hash":"e606a0584f98268b2fe92303f3254520862ef659","modified":1518097246672},{"_id":"public/css/images/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1518097246672},{"_id":"public/css/images/thumb-default-small.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1518097246672},{"_id":"public/css/images/whale.png","hash":"5e59a7b7bed8480212a40ee5b0723cbfe9f27c52","modified":1518097246673},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css.map","hash":"51e9df39edf0faa3f38c1bab0c1fa6c922b9edcb","modified":1518097246673},{"_id":"public/libs/lightgallery/css/lg-transitions.css.map","hash":"50c3348638b4d82fa08a449c690e8d2bb593005d","modified":1518097246673},{"_id":"public/libs/lightgallery/css/lightgallery.css.map","hash":"3175b4107078674d25798979f7666f4daf31e624","modified":1518097246673},{"_id":"public/libs/lightgallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1518097246673},{"_id":"public/libs/lightgallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1518097246674},{"_id":"public/libs/lightgallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1518097246674},{"_id":"public/libs/lightgallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1518097246674},{"_id":"public/libs/lightgallery/img/loading.gif","hash":"607810444094b8619fa4efa6273bc2a7e38dd4b4","modified":1518097246674},{"_id":"public/libs/lightgallery/img/video-play.png","hash":"3ea484cdc04d2e4547f80cbf80001dcf248c94ef","modified":1518097246674},{"_id":"public/libs/lightgallery/img/vimeo-play.png","hash":"6190254f2804904a4a1fa1eb390dfd334e416992","modified":1518097246674},{"_id":"public/libs/lightgallery/img/youtube-play.png","hash":"fea6df9d9d43151f9c9d15f000adb30eb3e26fc4","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/59ZRklaO5bWGqF5A9baEERJtnKITppOI_IvcXXDNrsc.woff2","hash":"c4248ea800bd5608344ce163f5658b57e7ef9410","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/LWCjsQkB6EMdfHrEVqA1KRJtnKITppOI_IvcXXDNrsc.woff2","hash":"2c5b039b57f62625e88226a938679ec937431ad1","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNShWV49_lSm1NYrwo-zkhivY.woff2","hash":"22413bb8bfb78608c1e25aa1ed5c1f38557df79f","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSpX5f-9o1vgP2EXwfjgl7AY.woff2","hash":"328a22fe3eec71ad9e5ece4d67dd62e79dab6b7f","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSj0LW-43aMEzIO6XUTLjad8.woff2","hash":"63eb74ef040aade256f2274a7f31a914edddb0ea","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/K88pR3goAWT7BTt32Z01mxJtnKITppOI_IvcXXDNrsc.woff2","hash":"e0350190d720a8fec0557ab47b318ec4e4486448","modified":1518097246674},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSq-j2U0lmluP9RWlSytm3ho.woff2","hash":"4dc6d7174ea6d89f4c45e43e1bfc3e03d8ffebaf","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSqaRobkAwv3vxw3jMhVENGA.woff2","hash":"415eee05976ab8b2471602a5ddb78a6c58fc21aa","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSv8zf_FOSsgRmwsS7Aa9k2w.woff2","hash":"c5f29fed6632efe0aa83318369f0d8c4061b775b","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/MTP_ySUJH_bn48VBG8sNSugdm0LZdjqr5-oayXSOefg.woff2","hash":"a0b0c389cf46d63c850e61fed572485ff0b68183","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/cJZKeOuBrn4kERxqtaUH3VtXRa8TVwTICgirnJhmVJw.woff2","hash":"afc44700053c9a28f9ab26f6aec4862ac1d0795d","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/RjgO7rYTmqiVp7vzi-Q5URJtnKITppOI_IvcXXDNrsc.woff2","hash":"be201d32a9aa5d186723ebb3c538be691aa8c53a","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBiYE0-AqJ3nfInTTiDXDjU4.woff2","hash":"5067c81462c15422853c94d21a1726865a61634f","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/u-WUoqrET9fUeobQW7jkRRJtnKITppOI_IvcXXDNrsc.woff2","hash":"113978181dcac77baecef6115a9121d8f6e4fc3a","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjTOQ_MqJVwkKsUn0wKzc2I.woff2","hash":"b366f2fda2e524eb5ef50058eefff249a3b96e6c","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBjUj_cnvWIuuBMVgbX098Mw.woff2","hash":"d22904914469be735490e3c8cb093c7862896dd5","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBkbcKLIaa1LC45dFaAfauRA.woff2","hash":"ae80fb3cd16339aa7b5da280ab53975523dcaac2","modified":1518097246675},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBmo_sUJ8uO4YLWRInS22T3Y.woff2","hash":"b85efde42fa3a03c32b1d31c6cd74c622fc7916c","modified":1518097246676},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBr6up8jxqWt8HVA3mDhkV_0.woff2","hash":"d0b40a7848703556c6631f24e961a98ca5829255","modified":1518097246676},{"_id":"public/libs/open-sans/fonts/xjAJXh38I15wypJXxuGMBo4P5ICox8Kq3LLUNMylGO4.woff2","hash":"e75607ba1417181397c700775b84303d5a2957b9","modified":1518097246676},{"_id":"public/libs/open-sans/fonts/xozscpT2726on7jbcb_pAhJtnKITppOI_IvcXXDNrsc.woff2","hash":"be365eca44760ce3fc9b377c43d4634958479c69","modified":1518097246676},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasD9V_2ngZ8dMf8fLgjYEouxg.woff2","hash":"942addaec4d3a60af33947a84a3d85f926015947","modified":1518097246676},{"_id":"public/libs/source-code-pro/fonts/mrl8jkM18OlOQN8JLgasDy2Q8seG17bfDXYR_jUsrzg.woff2","hash":"b0e0bb5ef78db8b15d430d0b9be9d4329289a310","modified":1518097246676},{"_id":"public/css/images/favicon.ico","hash":"72e198149b2809bc8af629da284399985e9023ec","modified":1518097247449},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1518097247451},{"_id":"public/libs/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1518097247454},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1518097247454},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1518097247454},{"_id":"public/js/main.js","hash":"1faffdc7aa7f0d28e85edbf49c99de3ad0b65753","modified":1518097247461},{"_id":"public/js/insight.js","hash":"6ee84c42c2b230ff9e9bf605a444bd671d44f9e3","modified":1518097247461},{"_id":"public/libs/justified-gallery/justifiedGallery.min.css","hash":"13fbcba5e97aa88b748d94d3efc4718475279907","modified":1518097247461},{"_id":"public/libs/open-sans/styles.css","hash":"5ca6e111046232bde112d33201a60532aee7d3c4","modified":1518097247461},{"_id":"public/libs/source-code-pro/styles.css","hash":"93c308012738728f906cd4c5cfdb34189e0c712b","modified":1518097247461},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.css","hash":"844ce27b8488968bccb3e50bb49184ba2aae0625","modified":1518097247461},{"_id":"public/libs/lightgallery/css/lg-fb-comment-box.min.css","hash":"05830fadb8454f39dcc98c8686eb4d5c24b71fc0","modified":1518097247461},{"_id":"public/libs/lightgallery/js/lg-autoplay.min.js","hash":"d845741bcaf961579622880eb2a445257efad1ac","modified":1518097247461},{"_id":"public/libs/lightgallery/js/lg-autoplay.js","hash":"426bb78b93acfc39d533ea2bab1cec8dc289cf24","modified":1518097247461},{"_id":"public/libs/lightgallery/js/lg-fullscreen.js","hash":"65c47ac65362854ba44b00a010bb01e3630209d8","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-hash.js","hash":"15d16516c5642d3de1566ff8fc9160136ccaa405","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-fullscreen.min.js","hash":"b6b9e4022700b7faf2a5a175ba44a3bd938fdd20","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-hash.min.js","hash":"43f1e1e720ab0e241c19b83aa26bd6848eab8edc","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-pager.js","hash":"8092c692b244bb26343eb03b91bd97deb9dafc9c","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-pager.min.js","hash":"25caa6ff65b1c6dee09941e795ae2633bdbab211","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-share.js","hash":"b7fb5f6474911060a351b0a6fe9dbb9ac3fb22aa","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-share.min.js","hash":"39c615f07c5d3aaa65a2c3068a30fdd6dd5c372d","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-thumbnail.min.js","hash":"18dd7d2909d1bfd6852f031d03e774b4428c512b","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-video.js","hash":"4f99b598f6bb18de9eca8c45c5b4373a03962367","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-video.min.js","hash":"032c001ab045a69856f9c3ed4a2a3bf12a8e310f","modified":1518097247462},{"_id":"public/libs/lightgallery/js/lg-zoom.min.js","hash":"15b49f9728439819ece15e4295cce254c87a4f45","modified":1518097247462},{"_id":"public/css/style.css","hash":"e3a66973bc45e0aa5f187bcf79da43d08a745340","modified":1518097247462},{"_id":"public/libs/justified-gallery/jquery.justifiedGallery.min.js","hash":"b2683e7a872bc109b1756a65188a37cef7d0bd5c","modified":1518097247462},{"_id":"public/libs/font-awesome/css/font-awesome.min.css","hash":"7cd5a3384333f95c3d37d9488ad82cd6c4b03761","modified":1518097247462},{"_id":"public/libs/font-awesome/css/font-awesome.css","hash":"b5020c3860669185ba3f316fa7332cdf5c06f393","modified":1518097247462},{"_id":"public/libs/lightgallery/css/lightgallery.css","hash":"bef55316a32e512d5a8940e5d0bfe8bf7a9c5c61","modified":1518097247463},{"_id":"public/libs/lightgallery/css/lg-transitions.css","hash":"7871c28498d74451d6aa438c8d3a1817810a1e19","modified":1518097247463},{"_id":"public/libs/lightgallery/css/lg-transitions.min.css","hash":"5c22e2073a4c96d6212c72135391b599e8d1359f","modified":1518097247463},{"_id":"public/libs/lightgallery/css/lightgallery.min.css","hash":"c9a2e19c932b56f4a2ce30c98910d10b74edb38a","modified":1518097247463},{"_id":"public/libs/lightgallery/js/lg-thumbnail.js","hash":"3a6476b6df1d2bef4a21861a78776282a7a11ef1","modified":1518097247463},{"_id":"public/libs/lightgallery/js/lg-zoom.js","hash":"a758e2c8fcf710f9ff761da0eea0ab9321f3484d","modified":1518097247463},{"_id":"public/libs/lightgallery/js/lightgallery.js","hash":"3cd19b33ba99efd5ba1d167da91720566d274b2c","modified":1518097247464},{"_id":"public/libs/lightgallery/js/lightgallery.min.js","hash":"956ef9b706755318da69ad0b5d7786339d831251","modified":1518097247464},{"_id":"public/libs/jquery/2.1.3/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1518097247464},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1518097247464},{"_id":"public/libs/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1518097247522},{"_id":"public/css/images/profile_pic.jpg","hash":"711730ef8fb882aebbfb020ac1e6940b5a071166","modified":1518097247534},{"_id":"public/css/images/profile_pic.png","hash":"970f83840145140e731826c6947d51f735faf6b4","modified":1518097247540}],"Category":[{"name":"Website Dev","_id":"cjdejwiuh00040x1x0ojqnbnj"},{"name":"Blockchain","_id":"cjdejwiuy000f0x1x8fve4fin"},{"name":"Scraping","_id":"cjdejwiv4000n0x1xv7trkcia"},{"name":"Spark","_id":"cjdejwiv9000v0x1xdr4dizxs"},{"name":"Hexo","_id":"cjdejwivd00120x1xnx45rm4d"},{"name":"Hadoop","_id":"cjdejwivn001f0x1x1nrjpz4a"},{"name":"Others","_id":"cjdejwivs001s0x1xkl65r8dk"}],"Data":[],"Page":[{"title":"About","layout":"page","_content":"\n## Welcome ;)\n\n<p style=\"font-size:16px\"> Glad you are here. 😉 </p> <p style=\"font-size:16px\">My name is Pei Yingchi (英池), currently a young data scientist at DataSpark. Graduated from NUS with a Business Analytics degree, I thrive to be a great data miner, to uncover business insights, and to build practical applications. You can find more about my experience on my [home page](https://www.peiyingchi.com). </p> <p style=\"font-size:16px\">I created this place to record down my learning notes and random thoughts. \nFeel free to drop me an email and talk about anything. I'd love to hear from you. </p>\n\n\n","source":"about/index.md","raw":"title: \"About\"\nlayout: \"page\"\n---\n\n## Welcome ;)\n\n<p style=\"font-size:16px\"> Glad you are here. 😉 </p> <p style=\"font-size:16px\">My name is Pei Yingchi (英池), currently a young data scientist at DataSpark. Graduated from NUS with a Business Analytics degree, I thrive to be a great data miner, to uncover business insights, and to build practical applications. You can find more about my experience on my [home page](https://www.peiyingchi.com). </p> <p style=\"font-size:16px\">I created this place to record down my learning notes and random thoughts. \nFeel free to drop me an email and talk about anything. I'd love to hear from you. </p>\n\n\n","date":"2017-09-26T10:33:43.000Z","updated":"2017-09-26T10:33:43.000Z","path":"about/index.html","comments":1,"_id":"cjdejwiub00010x1xs9epskv0","content":"<h2 id=\"Welcome\"><a href=\"#Welcome\" class=\"headerlink\" title=\"Welcome ;)\"></a>Welcome ;)</h2><p style=\"font-size:16px\"> Glad you are here. 😉 </p> <p style=\"font-size:16px\">My name is Pei Yingchi (英池), currently a young data scientist at DataSpark. Graduated from NUS with a Business Analytics degree, I thrive to be a great data miner, to uncover business insights, and to build practical applications. You can find more about my experience on my <a href=\"https://www.peiyingchi.com\" target=\"_blank\" rel=\"external\">home page</a>. </p> <p style=\"font-size:16px\">I created this place to record down my learning notes and random thoughts.<br>Feel free to drop me an email and talk about anything. I’d love to hear from you. </p>\n\n\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Welcome\"><a href=\"#Welcome\" class=\"headerlink\" title=\"Welcome ;)\"></a>Welcome ;)</h2><p style=\"font-size:16px\"> Glad you are here. 😉 </p> <p style=\"font-size:16px\">My name is Pei Yingchi (英池), currently a young data scientist at DataSpark. Graduated from NUS with a Business Analytics degree, I thrive to be a great data miner, to uncover business insights, and to build practical applications. You can find more about my experience on my <a href=\"https://www.peiyingchi.com\" target=\"_blank\" rel=\"external\">home page</a>. </p> <p style=\"font-size:16px\">I created this place to record down my learning notes and random thoughts.<br>Feel free to drop me an email and talk about anything. I’d love to hear from you. </p>\n\n\n"},{"title":"Categories","layout":"categories","_content":"","source":"categories/index.md","raw":"title: \"Categories\"\nlayout: \"categories\"\n---\n","date":"2017-03-10T06:41:36.000Z","updated":"2017-03-09T16:30:13.000Z","path":"categories/index.html","comments":1,"_id":"cjdejwiue00030x1xjxp2c5nf","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Tags","layout":"tags","_content":"","source":"tags/index.md","raw":"title: \"Tags\"\nlayout: \"tags\"\n---\n","date":"2017-03-10T06:41:36.000Z","updated":"2017-03-09T16:30:13.000Z","path":"tags/index.html","comments":1,"_id":"cjdejwium00070x1x85dgj2t6","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Automatic Deployment with Git to VPS","date":"2017-03-20T09:51:36.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"How to set up automatic deployment with git to VPS for my html homepage-\n<!-- more -->\n\n## Server Setup\nMy workspace:\n\nserver live directory: `/var/www/peiyingchi.com/html`\n\nserver repository: `/var/repo/site.git`\n\n## Creating Our Repository\nLogin to your VPS from command line and type the following:\n\n```bash\ncd /var\nmkdir repo && cd repo\nmkdir site.git && cd site.git\ngit init --bare\n```\n> `--bare` means that our folder will have no source files, just the version control.\n\n\n## Hooks\nGit repositories have a folder called 'hooks'. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.\n\n[Git documentation](http://git-scm.com/book/en/Customizing-Git-Git-Hooks) define three possible server hooks: *'pre-receive'*, *'post-receive'* and *'update'*. *'Pre-receive'* is executed as soon as the server receives a *'push'*, *'update' *is similar but it executes once for each branch, and *'post-receive'* is executed when a *'push'* is completely finished and it's the one we are interested in.\n\nSo let's go to `hooks` folder:\n\n```bash\ncd hooks\n```\nNow, create the file `post-receive` by typing:\n\n```bash\ncat > post-receive\n```\nWhen you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let's type:\n\n```sh\n#!/bin/sh\ngit --work-tree=/var/www/peiyingchi.com/html --git-dir=/var/repo/site.git checkout -f\n```\nWhen you finish typing, press `control-d` to save. In order to execute the file, we need to set the proper permissions using:\n\n```bash\nchmod +x post-receive\n```\nYou can see on the documentation that `git-dir` is the path to the repository. With `work-tree`, you can define a different path to where your files will actually be transferred to.\n\nThe `post-receive` file will be looked into every time a push is completed and it's saying that your files need to be in `/var/www/peiyingchi.com/html`\n\n## Local Machine\nThe following will need to be done on our local machine (not server).\n\nHere, I have already created a project git repo. \nThen we need to configure the remote path of our repository. Tell Git to add a remote called `live`:\n\n```bash\ncd /my/workspace\ngit remote add live ssh://user@mydomain.com/var/repo/site.git\n```\nThen, to push your work to your server, use the following command\n\n```bash\ngit push live master\n```\nFor me, I also have a GitHub repo for my files, it still works the same. This means that if I do `git push`, the local repo will be pushed to GitHub by default. The 2 remote repos (one at my cloud server, on at GitHub) do not have any connections. \n\n","source":"_posts/automatic-deployment-with-git.md","raw":"---\ntitle: Automatic Deployment with Git to VPS \ndate: 2017-03-20 17:51:36\ntags: website dev\ncategories: Website Dev\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\nHow to set up automatic deployment with git to VPS for my html homepage-\n<!-- more -->\n\n## Server Setup\nMy workspace:\n\nserver live directory: `/var/www/peiyingchi.com/html`\n\nserver repository: `/var/repo/site.git`\n\n## Creating Our Repository\nLogin to your VPS from command line and type the following:\n\n```bash\ncd /var\nmkdir repo && cd repo\nmkdir site.git && cd site.git\ngit init --bare\n```\n> `--bare` means that our folder will have no source files, just the version control.\n\n\n## Hooks\nGit repositories have a folder called 'hooks'. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.\n\n[Git documentation](http://git-scm.com/book/en/Customizing-Git-Git-Hooks) define three possible server hooks: *'pre-receive'*, *'post-receive'* and *'update'*. *'Pre-receive'* is executed as soon as the server receives a *'push'*, *'update' *is similar but it executes once for each branch, and *'post-receive'* is executed when a *'push'* is completely finished and it's the one we are interested in.\n\nSo let's go to `hooks` folder:\n\n```bash\ncd hooks\n```\nNow, create the file `post-receive` by typing:\n\n```bash\ncat > post-receive\n```\nWhen you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let's type:\n\n```sh\n#!/bin/sh\ngit --work-tree=/var/www/peiyingchi.com/html --git-dir=/var/repo/site.git checkout -f\n```\nWhen you finish typing, press `control-d` to save. In order to execute the file, we need to set the proper permissions using:\n\n```bash\nchmod +x post-receive\n```\nYou can see on the documentation that `git-dir` is the path to the repository. With `work-tree`, you can define a different path to where your files will actually be transferred to.\n\nThe `post-receive` file will be looked into every time a push is completed and it's saying that your files need to be in `/var/www/peiyingchi.com/html`\n\n## Local Machine\nThe following will need to be done on our local machine (not server).\n\nHere, I have already created a project git repo. \nThen we need to configure the remote path of our repository. Tell Git to add a remote called `live`:\n\n```bash\ncd /my/workspace\ngit remote add live ssh://user@mydomain.com/var/repo/site.git\n```\nThen, to push your work to your server, use the following command\n\n```bash\ngit push live master\n```\nFor me, I also have a GitHub repo for my files, it still works the same. This means that if I do `git push`, the local repo will be pushed to GitHub by default. The 2 remote repos (one at my cloud server, on at GitHub) do not have any connections. \n\n","slug":"automatic-deployment-with-git","published":1,"updated":"2017-03-20T09:53:18.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiu200000x1xf1xqqw9h","content":"<p>How to set up automatic deployment with git to VPS for my html homepage-<br><a id=\"more\"></a></p>\n<h2 id=\"Server-Setup\"><a href=\"#Server-Setup\" class=\"headerlink\" title=\"Server Setup\"></a>Server Setup</h2><p>My workspace:</p>\n<p>server live directory: <code>/var/www/peiyingchi.com/html</code></p>\n<p>server repository: <code>/var/repo/site.git</code></p>\n<h2 id=\"Creating-Our-Repository\"><a href=\"#Creating-Our-Repository\" class=\"headerlink\" title=\"Creating Our Repository\"></a>Creating Our Repository</h2><p>Login to your VPS from command line and type the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var</div><div class=\"line\">mkdir repo &amp;&amp; <span class=\"built_in\">cd</span> repo</div><div class=\"line\">mkdir site.git &amp;&amp; <span class=\"built_in\">cd</span> site.git</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>--bare</code> means that our folder will have no source files, just the version control.</p>\n</blockquote>\n<h2 id=\"Hooks\"><a href=\"#Hooks\" class=\"headerlink\" title=\"Hooks\"></a>Hooks</h2><p>Git repositories have a folder called ‘hooks’. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.</p>\n<p><a href=\"http://git-scm.com/book/en/Customizing-Git-Git-Hooks\" target=\"_blank\" rel=\"external\">Git documentation</a> define three possible server hooks: <em>‘pre-receive’</em>, <em>‘post-receive’</em> and <em>‘update’</em>. <em>‘Pre-receive’</em> is executed as soon as the server receives a <em>‘push’</em>, <em>‘update’ </em>is similar but it executes once for each branch, and <em>‘post-receive’</em> is executed when a <em>‘push’</em> is completely finished and it’s the one we are interested in.</p>\n<p>So let’s go to <code>hooks</code> folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hooks</div></pre></td></tr></table></figure>\n<p>Now, create the file <code>post-receive</code> by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat &gt; post-receive</div></pre></td></tr></table></figure>\n<p>When you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let’s type:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\">git --work-tree=/var/www/peiyingchi.com/html --git-dir=/var/repo/site.git checkout -f</div></pre></td></tr></table></figure>\n<p>When you finish typing, press <code>control-d</code> to save. In order to execute the file, we need to set the proper permissions using:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>You can see on the documentation that <code>git-dir</code> is the path to the repository. With <code>work-tree</code>, you can define a different path to where your files will actually be transferred to.</p>\n<p>The <code>post-receive</code> file will be looked into every time a push is completed and it’s saying that your files need to be in <code>/var/www/peiyingchi.com/html</code></p>\n<h2 id=\"Local-Machine\"><a href=\"#Local-Machine\" class=\"headerlink\" title=\"Local Machine\"></a>Local Machine</h2><p>The following will need to be done on our local machine (not server).</p>\n<p>Here, I have already created a project git repo.<br>Then we need to configure the remote path of our repository. Tell Git to add a remote called <code>live</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /my/workspace</div><div class=\"line\">git remote add live ssh://user@mydomain.com/var/repo/site.git</div></pre></td></tr></table></figure>\n<p>Then, to push your work to your server, use the following command</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push live master</div></pre></td></tr></table></figure>\n<p>For me, I also have a GitHub repo for my files, it still works the same. This means that if I do <code>git push</code>, the local repo will be pushed to GitHub by default. The 2 remote repos (one at my cloud server, on at GitHub) do not have any connections. </p>\n","site":{"data":{}},"excerpt":"<p>How to set up automatic deployment with git to VPS for my html homepage-<br>","more":"</p>\n<h2 id=\"Server-Setup\"><a href=\"#Server-Setup\" class=\"headerlink\" title=\"Server Setup\"></a>Server Setup</h2><p>My workspace:</p>\n<p>server live directory: <code>/var/www/peiyingchi.com/html</code></p>\n<p>server repository: <code>/var/repo/site.git</code></p>\n<h2 id=\"Creating-Our-Repository\"><a href=\"#Creating-Our-Repository\" class=\"headerlink\" title=\"Creating Our Repository\"></a>Creating Our Repository</h2><p>Login to your VPS from command line and type the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /var</div><div class=\"line\">mkdir repo &amp;&amp; <span class=\"built_in\">cd</span> repo</div><div class=\"line\">mkdir site.git &amp;&amp; <span class=\"built_in\">cd</span> site.git</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>--bare</code> means that our folder will have no source files, just the version control.</p>\n</blockquote>\n<h2 id=\"Hooks\"><a href=\"#Hooks\" class=\"headerlink\" title=\"Hooks\"></a>Hooks</h2><p>Git repositories have a folder called ‘hooks’. This folder contains some sample files for possible actions that you can hook and perform custom actions set by you.</p>\n<p><a href=\"http://git-scm.com/book/en/Customizing-Git-Git-Hooks\" target=\"_blank\" rel=\"external\">Git documentation</a> define three possible server hooks: <em>‘pre-receive’</em>, <em>‘post-receive’</em> and <em>‘update’</em>. <em>‘Pre-receive’</em> is executed as soon as the server receives a <em>‘push’</em>, <em>‘update’ </em>is similar but it executes once for each branch, and <em>‘post-receive’</em> is executed when a <em>‘push’</em> is completely finished and it’s the one we are interested in.</p>\n<p>So let’s go to <code>hooks</code> folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> hooks</div></pre></td></tr></table></figure>\n<p>Now, create the file <code>post-receive</code> by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat &gt; post-receive</div></pre></td></tr></table></figure>\n<p>When you execute this command, you will have a blank line indicating that everything you type will be saved to this file. So let’s type:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#!/bin/sh</span></div><div class=\"line\">git --work-tree=/var/www/peiyingchi.com/html --git-dir=/var/repo/site.git checkout -f</div></pre></td></tr></table></figure>\n<p>When you finish typing, press <code>control-d</code> to save. In order to execute the file, we need to set the proper permissions using:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>You can see on the documentation that <code>git-dir</code> is the path to the repository. With <code>work-tree</code>, you can define a different path to where your files will actually be transferred to.</p>\n<p>The <code>post-receive</code> file will be looked into every time a push is completed and it’s saying that your files need to be in <code>/var/www/peiyingchi.com/html</code></p>\n<h2 id=\"Local-Machine\"><a href=\"#Local-Machine\" class=\"headerlink\" title=\"Local Machine\"></a>Local Machine</h2><p>The following will need to be done on our local machine (not server).</p>\n<p>Here, I have already created a project git repo.<br>Then we need to configure the remote path of our repository. Tell Git to add a remote called <code>live</code>:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /my/workspace</div><div class=\"line\">git remote add live ssh://user@mydomain.com/var/repo/site.git</div></pre></td></tr></table></figure>\n<p>Then, to push your work to your server, use the following command</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push live master</div></pre></td></tr></table></figure>\n<p>For me, I also have a GitHub repo for my files, it still works the same. This means that if I do <code>git push</code>, the local repo will be pushed to GitHub by default. The 2 remote repos (one at my cloud server, on at GitHub) do not have any connections. </p>"},{"title":"Setup HTTPS Using Letsencrypt |用Let's Encrypt实现HTTPS","date":"2017-03-17T07:48:02.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nHow to use HTTPS for my personal website. Nginx server and Ubuntun 16.04.\n<!-- more -->\n\n### My environment\n- Web server: Nginx\n- Operating System: Ubuntu 16.04 \n\nThe steps are mainly following this Digital Ocean Tutorial:\n[How To Secure Nginx with Let's Encrypt on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04), but with some modifications for subdomain settings.\n\n### Step 1: Install Let's Encrypt Client\nRun the following command on your Ubuntu server:\n\n```bash\nsudo apt-get update\nsudo apt-get install letsencrypt\n```\n### Step 2: Obtain an SSL Certificate\n\nChange the Nginx conf files to enable access to `/.well-known` folder:\n\n```bash\nsudo nano /etc/nginx/sites-available/peiyingchi.com\n```\nAdd the following line inside the `server` block:\n\n```yml\n    location ~ /.well-known {\n        allow all;\n    }\n```\n\nIf you want to add the SSL cert to multiple domains or other subdomains, please do the same for all the nginx conf files.\n\nAfter changing the nginx conf files for the domains you want to setup HTTPS in, run the following:\n\n```bash\nsudo letsencrypt certonly -a webroot --webroot-path=/var/www/peiyingchi.com/html -d peiyingchi.com -d www.peiyingchi.com\n```\n\nTo setup for subdomains together:\n\n```bash\nsudo letsencrypt certonly --webroot -w /var/www/peiyingchi.com/html/ -d www.peiyingchi.com -d peiyingchi.com -w /var/www/blog.peiyingchi.com/html -d blog.peiyingchi.com\n```\nYou will be prompted to enter your contact email and agree some terms and conditions.\n\nMy cert files are at :\n\n```bash\n$ yingchi@yingchi-site:~$ sudo ls -l /etc/letsencrypt/live/peiyingchi.com\n\ntotal 0\nlrwxrwxrwx 1 root root 38 Mar 17 01:48 cert.pem -> ../../archive/peiyingchi.com/cert1.pem\nlrwxrwxrwx 1 root root 39 Mar 17 01:48 chain.pem -> ../../archive/peiyingchi.com/chain1.pem\nlrwxrwxrwx 1 root root 43 Mar 17 01:48 fullchain.pem -> ../../archive/peiyingchi.com/fullchain1.pem\nlrwxrwxrwx 1 root root 41 Mar 17 01:48 privkey.pem -> ../../archive/peiyingchi.com/privkey1.pem\n```\n\nAfter obtaining the cert, you will have the following PEM-encoded files:\n\n- `cert.pem`: Your domain's certificate\n- `chain.pem`: The Let's Encrypt chain certificate\n- `fullchain.pem`: `cert.pem` and `chain.pem` combined\n- `privkey.pem`: Your certificate's private key\n\nTo further increase security, you should also generate a strong **Diffie-Hellman group**. To generate a 2048-bit group, use this command:\n\n```bash\nsudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n```\n\n### Step 3: Configure TLS/SSL on Web Server (Nginx)\nNow that you have an SSL certificate, you need to configure your Nginx web server to use it.\n\nWe will make a few adjustments to our configuration:\n\n1. We will create a configuration snippet containing our SSL key and certificate file locations.\n2. We will create a configuration snippet containing strong SSL settings that can be used with any certificates in the future.\n3. We will adjust the Nginx server blocks to handle SSL requests and use the two snippets above.\n\nFirst, let's create a new Nginx configuration snippet in the `/etc/nginx/snippets` directory.\n\nTo properly distinguish the purpose of this file, we will name it `ssl-` followed by our domain name, followed by `.conf` on the end:\n\n```bash\nsudo nano /etc/nginx/snippets/ssl-peiyingchi.com.conf\n```\n\n```conf ssl-peiyingchi.com.conf\nssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n```\n\nNext, we will create another snippet that will define some SSL settings. This will set Nginx up with a strong SSL cipher suite and enable some advanced features that will help keep our server secure.\n\nThe parameters we will set can be reused in future Nginx configurations, so we will give the file a generic name:\n\n```bash\nsudo nano /etc/nginx/snippets/ssl-params.conf\n```\n\n```conf ssl-params.conf\n# from https://cipherli.st/\n# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";\nssl_ecdh_curve secp384r1;\nssl_session_cache shared:SSL:10m;\nssl_session_tickets off;\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\n# Disable preloading HSTS for now.  You can use the commented out header line that includes\n# the \"preload\" directive if you understand the implications.\n#add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n```\n\n> If you are interested, you can take take a moment to read up on [HTTP Strict Transport Security, or HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security), and specifically about the [\"preload\"](https://hstspreload.appspot.com/) functionality. Preloading HSTS provides increased security, but can have far reaching consequences if accidentally enabled or enabled incorrectly. In this guide, we will not preload the settings, but you can modify that if you are sure you understand the implications\n\nNow that we have our snippets, we can adjust our Nginx configuration to enable SSL.\n\nBefore we go any further, let's back up our current server block file:\n\n```bash\nsudo cp /etc/nginx/sites-available/peiyingchi.com /etc/nginx/sites-available/peiyingchi.com.bak\n```\nNow, open the server block file to make adjustments.\nBlow are the 2 conf files for my top-level domain and my subdomain:\n\n```bash\nsudo nano /etc/nginx/sites-available/peiyingchi.com\n```\n\n```js peiyingchi.com\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\n\tserver_name peiyingchi.com www.peiyingchi.com;\n\treturn 301 https://$server_name$request_uri;\n}\n\nserver {\n\n\t# SSL configuration\n\tlisten 443 ssl http2 default_server;\n\tlisten [::]:443 ssl http2 default_server;\n\tinclude snippets/ssl-peiyingchi.com.conf;\n\tinclude snippets/ssl-params.conf;\n\t\n\troot /var/www/peiyingchi.com/html;\n\n    # Add index.php to the list if you are using PHP\n\tindex index.html index.php;\n\t\n\tserver_name peiyingchi.com www.peiyingchi.com;\n\t\n        location / {\n            try_files $uri $uri/ =404;\n        }\n\n        location ~ /.well-known {\n            allow all;\n        }\n\n}\n```\n\n```js blog.peiyingchi.com\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\n\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;\n\treturn 301 https://$server_name$request_uri;\n}\n\nserver {\n\t# SSL configuration\n\n\tlisten 443 ssl http2;\n\tlisten [::]:443 ssl http2;\n\tinclude snippets/ssl-peiyingchi.com.conf; # NOTE: the same file as the top level domain\n\tinclude snippets/ssl-params.conf;\t\n\t\n\troot /var/www/blog.peiyingchi.com/html;\n\tindex index.html;\n\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;\n\t\n\tlocation / {\n\t\ttry_files $uri $uri/ =404;\n\t}\n\tlocation ~ /.well-known {\n\t\tallow all;\n\t}\n}\n```\n\n### Step 4: Adjust the Firewall\nIf you have the `ufw` firewall enabled, as recommended by the prerequisite guides, you'll need to adjust the settings to allow for SSL traffic.\n\nYou can see the current setting by typing:\n\n```bash\nsudo ufw status\n```\n\nTo additionally let in HTTPS traffic, we can allow the \"Nginx Full\" profile and then delete the redundant \"Nginx HTTP\" profile allowance:\n\n```bash\nsudo ufw allow 'Nginx Full'\nsudo ufw delete allow 'Nginx HTTP'\n```\n\n### Step 5: Enabling the Changes in Nginx\nFirst, we should check to make sure that there are no syntax errors in our files. We can do this by typing:\n\n```bash\nsudo nginx -t\n```\n\nIf your output matches the above, your configuration file has no syntax errors. We can safely restart Nginx to implement our changes:\n\n```bash\nsudo systemctl restart nginx\n```\nYou can use the Qualys SSL Labs Report to see how your server configuration scores:\nEnter the following to your web browser:\n\nhttps://www.ssllabs.com/ssltest/analyze.html?d=<span style=\"color:red\">example.com</span>\n\n### Step 6: Set Up Auto Renewal\nFrom Let's Encrypt's [official documentation](https://certbot.eff.org/#ubuntuxenial-nginx), you can run the following to test the renew function:\n\n```bash\nsudo letsencrypt renew --dry-run --agree-tos\n```\n> Do not worry for the 'Registering without email!' warning. It does not hurt anything.\n\nIf that appears to be working correctly, you can arrange for automatic renewal by adding a cron or systemd job which runs `letsencrypt renew`\n\nSince the renewal first checks for the expiration date and only executes the renewal if the certificate is less than 30 days away from expiration, it is safe to create a cron job that runs every week or even every day, for instance.\n\nLet's edit the crontab to create a new job that will run the renewal command every week. To edit the crontab for the root user, run:\n\n```bash\nsudo crontab -e\n```\n\nAdd the following lines:\n\n```sh crontab entry\n30 2 * * 1 /usr/bin/letsencrypt renew >> /var/log/le-renew.log\n35 2 * * 1 /bin/systemctl reload nginx\n```\nThis will create a new cron job that will execute the letsencrypt-auto renew command every Monday at 2:30 am, and reload Nginx at 2:35am (so the renewed certificate will be used). The output produced by the command will be piped to a log file located at `/var/log/le-renewal.log`.\n\n\n","source":"_posts/HTTPS-with-Letsencrypt.md","raw":"---\ntitle: Setup HTTPS Using Letsencrypt |用Let's Encrypt实现HTTPS\ndate: 2017-03-17 15:48:02\ntags: website dev\ncategories: Website Dev\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nHow to use HTTPS for my personal website. Nginx server and Ubuntun 16.04.\n<!-- more -->\n\n### My environment\n- Web server: Nginx\n- Operating System: Ubuntu 16.04 \n\nThe steps are mainly following this Digital Ocean Tutorial:\n[How To Secure Nginx with Let's Encrypt on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04), but with some modifications for subdomain settings.\n\n### Step 1: Install Let's Encrypt Client\nRun the following command on your Ubuntu server:\n\n```bash\nsudo apt-get update\nsudo apt-get install letsencrypt\n```\n### Step 2: Obtain an SSL Certificate\n\nChange the Nginx conf files to enable access to `/.well-known` folder:\n\n```bash\nsudo nano /etc/nginx/sites-available/peiyingchi.com\n```\nAdd the following line inside the `server` block:\n\n```yml\n    location ~ /.well-known {\n        allow all;\n    }\n```\n\nIf you want to add the SSL cert to multiple domains or other subdomains, please do the same for all the nginx conf files.\n\nAfter changing the nginx conf files for the domains you want to setup HTTPS in, run the following:\n\n```bash\nsudo letsencrypt certonly -a webroot --webroot-path=/var/www/peiyingchi.com/html -d peiyingchi.com -d www.peiyingchi.com\n```\n\nTo setup for subdomains together:\n\n```bash\nsudo letsencrypt certonly --webroot -w /var/www/peiyingchi.com/html/ -d www.peiyingchi.com -d peiyingchi.com -w /var/www/blog.peiyingchi.com/html -d blog.peiyingchi.com\n```\nYou will be prompted to enter your contact email and agree some terms and conditions.\n\nMy cert files are at :\n\n```bash\n$ yingchi@yingchi-site:~$ sudo ls -l /etc/letsencrypt/live/peiyingchi.com\n\ntotal 0\nlrwxrwxrwx 1 root root 38 Mar 17 01:48 cert.pem -> ../../archive/peiyingchi.com/cert1.pem\nlrwxrwxrwx 1 root root 39 Mar 17 01:48 chain.pem -> ../../archive/peiyingchi.com/chain1.pem\nlrwxrwxrwx 1 root root 43 Mar 17 01:48 fullchain.pem -> ../../archive/peiyingchi.com/fullchain1.pem\nlrwxrwxrwx 1 root root 41 Mar 17 01:48 privkey.pem -> ../../archive/peiyingchi.com/privkey1.pem\n```\n\nAfter obtaining the cert, you will have the following PEM-encoded files:\n\n- `cert.pem`: Your domain's certificate\n- `chain.pem`: The Let's Encrypt chain certificate\n- `fullchain.pem`: `cert.pem` and `chain.pem` combined\n- `privkey.pem`: Your certificate's private key\n\nTo further increase security, you should also generate a strong **Diffie-Hellman group**. To generate a 2048-bit group, use this command:\n\n```bash\nsudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n```\n\n### Step 3: Configure TLS/SSL on Web Server (Nginx)\nNow that you have an SSL certificate, you need to configure your Nginx web server to use it.\n\nWe will make a few adjustments to our configuration:\n\n1. We will create a configuration snippet containing our SSL key and certificate file locations.\n2. We will create a configuration snippet containing strong SSL settings that can be used with any certificates in the future.\n3. We will adjust the Nginx server blocks to handle SSL requests and use the two snippets above.\n\nFirst, let's create a new Nginx configuration snippet in the `/etc/nginx/snippets` directory.\n\nTo properly distinguish the purpose of this file, we will name it `ssl-` followed by our domain name, followed by `.conf` on the end:\n\n```bash\nsudo nano /etc/nginx/snippets/ssl-peiyingchi.com.conf\n```\n\n```conf ssl-peiyingchi.com.conf\nssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;\n```\n\nNext, we will create another snippet that will define some SSL settings. This will set Nginx up with a strong SSL cipher suite and enable some advanced features that will help keep our server secure.\n\nThe parameters we will set can be reused in future Nginx configurations, so we will give the file a generic name:\n\n```bash\nsudo nano /etc/nginx/snippets/ssl-params.conf\n```\n\n```conf ssl-params.conf\n# from https://cipherli.st/\n# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";\nssl_ecdh_curve secp384r1;\nssl_session_cache shared:SSL:10m;\nssl_session_tickets off;\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\n# Disable preloading HSTS for now.  You can use the commented out header line that includes\n# the \"preload\" directive if you understand the implications.\n#add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n```\n\n> If you are interested, you can take take a moment to read up on [HTTP Strict Transport Security, or HSTS](https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security), and specifically about the [\"preload\"](https://hstspreload.appspot.com/) functionality. Preloading HSTS provides increased security, but can have far reaching consequences if accidentally enabled or enabled incorrectly. In this guide, we will not preload the settings, but you can modify that if you are sure you understand the implications\n\nNow that we have our snippets, we can adjust our Nginx configuration to enable SSL.\n\nBefore we go any further, let's back up our current server block file:\n\n```bash\nsudo cp /etc/nginx/sites-available/peiyingchi.com /etc/nginx/sites-available/peiyingchi.com.bak\n```\nNow, open the server block file to make adjustments.\nBlow are the 2 conf files for my top-level domain and my subdomain:\n\n```bash\nsudo nano /etc/nginx/sites-available/peiyingchi.com\n```\n\n```js peiyingchi.com\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\n\tserver_name peiyingchi.com www.peiyingchi.com;\n\treturn 301 https://$server_name$request_uri;\n}\n\nserver {\n\n\t# SSL configuration\n\tlisten 443 ssl http2 default_server;\n\tlisten [::]:443 ssl http2 default_server;\n\tinclude snippets/ssl-peiyingchi.com.conf;\n\tinclude snippets/ssl-params.conf;\n\t\n\troot /var/www/peiyingchi.com/html;\n\n    # Add index.php to the list if you are using PHP\n\tindex index.html index.php;\n\t\n\tserver_name peiyingchi.com www.peiyingchi.com;\n\t\n        location / {\n            try_files $uri $uri/ =404;\n        }\n\n        location ~ /.well-known {\n            allow all;\n        }\n\n}\n```\n\n```js blog.peiyingchi.com\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\n\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;\n\treturn 301 https://$server_name$request_uri;\n}\n\nserver {\n\t# SSL configuration\n\n\tlisten 443 ssl http2;\n\tlisten [::]:443 ssl http2;\n\tinclude snippets/ssl-peiyingchi.com.conf; # NOTE: the same file as the top level domain\n\tinclude snippets/ssl-params.conf;\t\n\t\n\troot /var/www/blog.peiyingchi.com/html;\n\tindex index.html;\n\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;\n\t\n\tlocation / {\n\t\ttry_files $uri $uri/ =404;\n\t}\n\tlocation ~ /.well-known {\n\t\tallow all;\n\t}\n}\n```\n\n### Step 4: Adjust the Firewall\nIf you have the `ufw` firewall enabled, as recommended by the prerequisite guides, you'll need to adjust the settings to allow for SSL traffic.\n\nYou can see the current setting by typing:\n\n```bash\nsudo ufw status\n```\n\nTo additionally let in HTTPS traffic, we can allow the \"Nginx Full\" profile and then delete the redundant \"Nginx HTTP\" profile allowance:\n\n```bash\nsudo ufw allow 'Nginx Full'\nsudo ufw delete allow 'Nginx HTTP'\n```\n\n### Step 5: Enabling the Changes in Nginx\nFirst, we should check to make sure that there are no syntax errors in our files. We can do this by typing:\n\n```bash\nsudo nginx -t\n```\n\nIf your output matches the above, your configuration file has no syntax errors. We can safely restart Nginx to implement our changes:\n\n```bash\nsudo systemctl restart nginx\n```\nYou can use the Qualys SSL Labs Report to see how your server configuration scores:\nEnter the following to your web browser:\n\nhttps://www.ssllabs.com/ssltest/analyze.html?d=<span style=\"color:red\">example.com</span>\n\n### Step 6: Set Up Auto Renewal\nFrom Let's Encrypt's [official documentation](https://certbot.eff.org/#ubuntuxenial-nginx), you can run the following to test the renew function:\n\n```bash\nsudo letsencrypt renew --dry-run --agree-tos\n```\n> Do not worry for the 'Registering without email!' warning. It does not hurt anything.\n\nIf that appears to be working correctly, you can arrange for automatic renewal by adding a cron or systemd job which runs `letsencrypt renew`\n\nSince the renewal first checks for the expiration date and only executes the renewal if the certificate is less than 30 days away from expiration, it is safe to create a cron job that runs every week or even every day, for instance.\n\nLet's edit the crontab to create a new job that will run the renewal command every week. To edit the crontab for the root user, run:\n\n```bash\nsudo crontab -e\n```\n\nAdd the following lines:\n\n```sh crontab entry\n30 2 * * 1 /usr/bin/letsencrypt renew >> /var/log/le-renew.log\n35 2 * * 1 /bin/systemctl reload nginx\n```\nThis will create a new cron job that will execute the letsencrypt-auto renew command every Monday at 2:30 am, and reload Nginx at 2:35am (so the renewed certificate will be used). The output produced by the command will be piped to a log file located at `/var/log/le-renewal.log`.\n\n\n","slug":"HTTPS-with-Letsencrypt","published":1,"updated":"2017-03-19T03:30:41.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiuc00020x1xd1ieko85","content":"<p>How to use HTTPS for my personal website. Nginx server and Ubuntun 16.04.<br><a id=\"more\"></a></p>\n<h3 id=\"My-environment\"><a href=\"#My-environment\" class=\"headerlink\" title=\"My environment\"></a>My environment</h3><ul>\n<li>Web server: Nginx</li>\n<li>Operating System: Ubuntu 16.04 </li>\n</ul>\n<p>The steps are mainly following this Digital Ocean Tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Secure Nginx with Let’s Encrypt on Ubuntu 16.04</a>, but with some modifications for subdomain settings.</p>\n<h3 id=\"Step-1-Install-Let’s-Encrypt-Client\"><a href=\"#Step-1-Install-Let’s-Encrypt-Client\" class=\"headerlink\" title=\"Step 1: Install Let’s Encrypt Client\"></a>Step 1: Install Let’s Encrypt Client</h3><p>Run the following command on your Ubuntu server:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install letsencrypt</div></pre></td></tr></table></figure>\n<h3 id=\"Step-2-Obtain-an-SSL-Certificate\"><a href=\"#Step-2-Obtain-an-SSL-Certificate\" class=\"headerlink\" title=\"Step 2: Obtain an SSL Certificate\"></a>Step 2: Obtain an SSL Certificate</h3><p>Change the Nginx conf files to enable access to <code>/.well-known</code> folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/sites-available/peiyingchi.com</div></pre></td></tr></table></figure>\n<p>Add the following line inside the <code>server</code> block:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">location</span> <span class=\"string\">~</span> <span class=\"string\">/.well-known</span> <span class=\"string\">&#123;</span></div><div class=\"line\">    <span class=\"string\">allow</span> <span class=\"string\">all;</span></div><div class=\"line\"><span class=\"string\">&#125;</span></div></pre></td></tr></table></figure>\n<p>If you want to add the SSL cert to multiple domains or other subdomains, please do the same for all the nginx conf files.</p>\n<p>After changing the nginx conf files for the domains you want to setup HTTPS in, run the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt certonly -a webroot --webroot-path=/var/www/peiyingchi.com/html -d peiyingchi.com -d www.peiyingchi.com</div></pre></td></tr></table></figure>\n<p>To setup for subdomains together:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt certonly --webroot -w /var/www/peiyingchi.com/html/ -d www.peiyingchi.com -d peiyingchi.com -w /var/www/blog.peiyingchi.com/html -d blog.peiyingchi.com</div></pre></td></tr></table></figure>\n<p>You will be prompted to enter your contact email and agree some terms and conditions.</p>\n<p>My cert files are at :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yingchi@yingchi-site:~$ sudo ls -l /etc/letsencrypt/live/peiyingchi.com</div><div class=\"line\"></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 38 Mar 17 01:48 cert.pem -&gt; ../../archive/peiyingchi.com/cert1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 39 Mar 17 01:48 chain.pem -&gt; ../../archive/peiyingchi.com/chain1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 43 Mar 17 01:48 fullchain.pem -&gt; ../../archive/peiyingchi.com/fullchain1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 41 Mar 17 01:48 privkey.pem -&gt; ../../archive/peiyingchi.com/privkey1.pem</div></pre></td></tr></table></figure>\n<p>After obtaining the cert, you will have the following PEM-encoded files:</p>\n<ul>\n<li><code>cert.pem</code>: Your domain’s certificate</li>\n<li><code>chain.pem</code>: The Let’s Encrypt chain certificate</li>\n<li><code>fullchain.pem</code>: <code>cert.pem</code> and <code>chain.pem</code> combined</li>\n<li><code>privkey.pem</code>: Your certificate’s private key</li>\n</ul>\n<p>To further increase security, you should also generate a strong <strong>Diffie-Hellman group</strong>. To generate a 2048-bit group, use this command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048</div></pre></td></tr></table></figure>\n<h3 id=\"Step-3-Configure-TLS-SSL-on-Web-Server-Nginx\"><a href=\"#Step-3-Configure-TLS-SSL-on-Web-Server-Nginx\" class=\"headerlink\" title=\"Step 3: Configure TLS/SSL on Web Server (Nginx)\"></a>Step 3: Configure TLS/SSL on Web Server (Nginx)</h3><p>Now that you have an SSL certificate, you need to configure your Nginx web server to use it.</p>\n<p>We will make a few adjustments to our configuration:</p>\n<ol>\n<li>We will create a configuration snippet containing our SSL key and certificate file locations.</li>\n<li>We will create a configuration snippet containing strong SSL settings that can be used with any certificates in the future.</li>\n<li>We will adjust the Nginx server blocks to handle SSL requests and use the two snippets above.</li>\n</ol>\n<p>First, let’s create a new Nginx configuration snippet in the <code>/etc/nginx/snippets</code> directory.</p>\n<p>To properly distinguish the purpose of this file, we will name it <code>ssl-</code> followed by our domain name, followed by <code>.conf</code> on the end:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/snippets/ssl-peiyingchi.com.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>ssl-peiyingchi.com.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;</div><div class=\"line\">ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;</div></pre></td></tr></table></figure>\n<p>Next, we will create another snippet that will define some SSL settings. This will set Nginx up with a strong SSL cipher suite and enable some advanced features that will help keep our server secure.</p>\n<p>The parameters we will set can be reused in future Nginx configurations, so we will give the file a generic name:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/snippets/ssl-params.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>ssl-params.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"># from https://cipherli.st/</div><div class=\"line\"># and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</div><div class=\"line\"></div><div class=\"line\">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">ssl_prefer_server_ciphers on;</div><div class=\"line\">ssl_ciphers &quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;;</div><div class=\"line\">ssl_ecdh_curve secp384r1;</div><div class=\"line\">ssl_session_cache shared:SSL:10m;</div><div class=\"line\">ssl_session_tickets off;</div><div class=\"line\">ssl_stapling on;</div><div class=\"line\">ssl_stapling_verify on;</div><div class=\"line\">resolver 8.8.8.8 8.8.4.4 valid=300s;</div><div class=\"line\">resolver_timeout 5s;</div><div class=\"line\"># Disable preloading HSTS for now.  You can use the commented out header line that includes</div><div class=\"line\"># the &quot;preload&quot; directive if you understand the implications.</div><div class=\"line\">#add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;</div><div class=\"line\">add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains&quot;;</div><div class=\"line\">add_header X-Frame-Options DENY;</div><div class=\"line\">add_header X-Content-Type-Options nosniff;</div><div class=\"line\"></div><div class=\"line\">ssl_dhparam /etc/ssl/certs/dhparam.pem;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>If you are interested, you can take take a moment to read up on <a href=\"https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\" target=\"_blank\" rel=\"external\">HTTP Strict Transport Security, or HSTS</a>, and specifically about the <a href=\"https://hstspreload.appspot.com/\" target=\"_blank\" rel=\"external\">“preload”</a> functionality. Preloading HSTS provides increased security, but can have far reaching consequences if accidentally enabled or enabled incorrectly. In this guide, we will not preload the settings, but you can modify that if you are sure you understand the implications</p>\n</blockquote>\n<p>Now that we have our snippets, we can adjust our Nginx configuration to enable SSL.</p>\n<p>Before we go any further, let’s back up our current server block file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /etc/nginx/sites-available/peiyingchi.com /etc/nginx/sites-available/peiyingchi.com.bak</div></pre></td></tr></table></figure>\n<p>Now, open the server block file to make adjustments.<br>Blow are the 2 conf files for my top-level domain and my subdomain:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/sites-available/peiyingchi.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>peiyingchi.com</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">\tlisten <span class=\"number\">80</span>;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">\tserver_name peiyingchi.com www.peiyingchi.com;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">301</span> https:<span class=\"comment\">//$server_name$request_uri;</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">\t# SSL configuration</div><div class=\"line\">\tlisten <span class=\"number\">443</span> ssl http2 default_server;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">443</span> ssl http2 default_server;</div><div class=\"line\">\tinclude snippets/ssl-peiyingchi.com.conf;</div><div class=\"line\">\tinclude snippets/ssl-params.conf;</div><div class=\"line\">\t</div><div class=\"line\">\troot /<span class=\"keyword\">var</span>/www/peiyingchi.com/html;</div><div class=\"line\"></div><div class=\"line\">    # Add index.php to the list if you are using PHP</div><div class=\"line\">\tindex index.html index.php;</div><div class=\"line\">\t</div><div class=\"line\">\tserver_name peiyingchi.com www.peiyingchi.com;</div><div class=\"line\">\t</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            try_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ <span class=\"regexp\">/.well-known &#123;</span></div><div class=\"line\"><span class=\"regexp\">            allow all;</span></div><div class=\"line\"><span class=\"regexp\">        &#125;</span></div><div class=\"line\"><span class=\"regexp\"></span></div><div class=\"line\"><span class=\"regexp\">&#125;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>blog.peiyingchi.com</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">\tlisten <span class=\"number\">80</span>;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">301</span> https:<span class=\"comment\">//$server_name$request_uri;</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">server &#123;</div><div class=\"line\">\t# SSL configuration</div><div class=\"line\"></div><div class=\"line\">\tlisten <span class=\"number\">443</span> ssl http2;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">443</span> ssl http2;</div><div class=\"line\">\tinclude snippets/ssl-peiyingchi.com.conf; # NOTE: the same file as the top level domain</div><div class=\"line\">\tinclude snippets/ssl-params.conf;\t</div><div class=\"line\">\t</div><div class=\"line\">\troot /<span class=\"keyword\">var</span>/www/blog.peiyingchi.com/html;</div><div class=\"line\">\tindex index.html;</div><div class=\"line\">\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;</div><div class=\"line\">\t</div><div class=\"line\">\tlocation / &#123;</div><div class=\"line\">\t\ttry_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tlocation ~ <span class=\"regexp\">/.well-known &#123;</span></div><div class=\"line\"><span class=\"regexp\">\t\tallow all;</span></div><div class=\"line\"><span class=\"regexp\">\t&#125;</span></div><div class=\"line\"><span class=\"regexp\">&#125;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-4-Adjust-the-Firewall\"><a href=\"#Step-4-Adjust-the-Firewall\" class=\"headerlink\" title=\"Step 4: Adjust the Firewall\"></a>Step 4: Adjust the Firewall</h3><p>If you have the <code>ufw</code> firewall enabled, as recommended by the prerequisite guides, you’ll need to adjust the settings to allow for SSL traffic.</p>\n<p>You can see the current setting by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ufw status</div></pre></td></tr></table></figure>\n<p>To additionally let in HTTPS traffic, we can allow the “Nginx Full” profile and then delete the redundant “Nginx HTTP” profile allowance:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ufw allow <span class=\"string\">'Nginx Full'</span></div><div class=\"line\">sudo ufw delete allow <span class=\"string\">'Nginx HTTP'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-5-Enabling-the-Changes-in-Nginx\"><a href=\"#Step-5-Enabling-the-Changes-in-Nginx\" class=\"headerlink\" title=\"Step 5: Enabling the Changes in Nginx\"></a>Step 5: Enabling the Changes in Nginx</h3><p>First, we should check to make sure that there are no syntax errors in our files. We can do this by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -t</div></pre></td></tr></table></figure>\n<p>If your output matches the above, your configuration file has no syntax errors. We can safely restart Nginx to implement our changes:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl restart nginx</div></pre></td></tr></table></figure>\n<p>You can use the Qualys SSL Labs Report to see how your server configuration scores:<br>Enter the following to your web browser:</p>\n<p><a href=\"https://www.ssllabs.com/ssltest/analyze.html?d=\" target=\"_blank\" rel=\"external\">https://www.ssllabs.com/ssltest/analyze.html?d=</a><span style=\"color:red\">example.com</span></p>\n<h3 id=\"Step-6-Set-Up-Auto-Renewal\"><a href=\"#Step-6-Set-Up-Auto-Renewal\" class=\"headerlink\" title=\"Step 6: Set Up Auto Renewal\"></a>Step 6: Set Up Auto Renewal</h3><p>From Let’s Encrypt’s <a href=\"https://certbot.eff.org/#ubuntuxenial-nginx\" target=\"_blank\" rel=\"external\">official documentation</a>, you can run the following to test the renew function:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt renew --dry-run --agree-tos</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Do not worry for the ‘Registering without email!’ warning. It does not hurt anything.</p>\n</blockquote>\n<p>If that appears to be working correctly, you can arrange for automatic renewal by adding a cron or systemd job which runs <code>letsencrypt renew</code></p>\n<p>Since the renewal first checks for the expiration date and only executes the renewal if the certificate is less than 30 days away from expiration, it is safe to create a cron job that runs every week or even every day, for instance.</p>\n<p>Let’s edit the crontab to create a new job that will run the renewal command every week. To edit the crontab for the root user, run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo crontab -e</div></pre></td></tr></table></figure>\n<p>Add the following lines:</p>\n<figure class=\"highlight sh\"><figcaption><span>crontab entry</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 2 * * 1 /usr/bin/letsencrypt renew &gt;&gt; /var/<span class=\"built_in\">log</span>/le-renew.log</div><div class=\"line\">35 2 * * 1 /bin/systemctl reload nginx</div></pre></td></tr></table></figure>\n<p>This will create a new cron job that will execute the letsencrypt-auto renew command every Monday at 2:30 am, and reload Nginx at 2:35am (so the renewed certificate will be used). The output produced by the command will be piped to a log file located at <code>/var/log/le-renewal.log</code>.</p>\n","site":{"data":{}},"excerpt":"<p>How to use HTTPS for my personal website. Nginx server and Ubuntun 16.04.<br>","more":"</p>\n<h3 id=\"My-environment\"><a href=\"#My-environment\" class=\"headerlink\" title=\"My environment\"></a>My environment</h3><ul>\n<li>Web server: Nginx</li>\n<li>Operating System: Ubuntu 16.04 </li>\n</ul>\n<p>The steps are mainly following this Digital Ocean Tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Secure Nginx with Let’s Encrypt on Ubuntu 16.04</a>, but with some modifications for subdomain settings.</p>\n<h3 id=\"Step-1-Install-Let’s-Encrypt-Client\"><a href=\"#Step-1-Install-Let’s-Encrypt-Client\" class=\"headerlink\" title=\"Step 1: Install Let’s Encrypt Client\"></a>Step 1: Install Let’s Encrypt Client</h3><p>Run the following command on your Ubuntu server:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install letsencrypt</div></pre></td></tr></table></figure>\n<h3 id=\"Step-2-Obtain-an-SSL-Certificate\"><a href=\"#Step-2-Obtain-an-SSL-Certificate\" class=\"headerlink\" title=\"Step 2: Obtain an SSL Certificate\"></a>Step 2: Obtain an SSL Certificate</h3><p>Change the Nginx conf files to enable access to <code>/.well-known</code> folder:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/sites-available/peiyingchi.com</div></pre></td></tr></table></figure>\n<p>Add the following line inside the <code>server</code> block:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">location</span> <span class=\"string\">~</span> <span class=\"string\">/.well-known</span> <span class=\"string\">&#123;</span></div><div class=\"line\">    <span class=\"string\">allow</span> <span class=\"string\">all;</span></div><div class=\"line\"><span class=\"string\">&#125;</span></div></pre></td></tr></table></figure>\n<p>If you want to add the SSL cert to multiple domains or other subdomains, please do the same for all the nginx conf files.</p>\n<p>After changing the nginx conf files for the domains you want to setup HTTPS in, run the following:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt certonly -a webroot --webroot-path=/var/www/peiyingchi.com/html -d peiyingchi.com -d www.peiyingchi.com</div></pre></td></tr></table></figure>\n<p>To setup for subdomains together:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt certonly --webroot -w /var/www/peiyingchi.com/html/ -d www.peiyingchi.com -d peiyingchi.com -w /var/www/blog.peiyingchi.com/html -d blog.peiyingchi.com</div></pre></td></tr></table></figure>\n<p>You will be prompted to enter your contact email and agree some terms and conditions.</p>\n<p>My cert files are at :</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ yingchi@yingchi-site:~$ sudo ls -l /etc/letsencrypt/live/peiyingchi.com</div><div class=\"line\"></div><div class=\"line\">total 0</div><div class=\"line\">lrwxrwxrwx 1 root root 38 Mar 17 01:48 cert.pem -&gt; ../../archive/peiyingchi.com/cert1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 39 Mar 17 01:48 chain.pem -&gt; ../../archive/peiyingchi.com/chain1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 43 Mar 17 01:48 fullchain.pem -&gt; ../../archive/peiyingchi.com/fullchain1.pem</div><div class=\"line\">lrwxrwxrwx 1 root root 41 Mar 17 01:48 privkey.pem -&gt; ../../archive/peiyingchi.com/privkey1.pem</div></pre></td></tr></table></figure>\n<p>After obtaining the cert, you will have the following PEM-encoded files:</p>\n<ul>\n<li><code>cert.pem</code>: Your domain’s certificate</li>\n<li><code>chain.pem</code>: The Let’s Encrypt chain certificate</li>\n<li><code>fullchain.pem</code>: <code>cert.pem</code> and <code>chain.pem</code> combined</li>\n<li><code>privkey.pem</code>: Your certificate’s private key</li>\n</ul>\n<p>To further increase security, you should also generate a strong <strong>Diffie-Hellman group</strong>. To generate a 2048-bit group, use this command:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048</div></pre></td></tr></table></figure>\n<h3 id=\"Step-3-Configure-TLS-SSL-on-Web-Server-Nginx\"><a href=\"#Step-3-Configure-TLS-SSL-on-Web-Server-Nginx\" class=\"headerlink\" title=\"Step 3: Configure TLS/SSL on Web Server (Nginx)\"></a>Step 3: Configure TLS/SSL on Web Server (Nginx)</h3><p>Now that you have an SSL certificate, you need to configure your Nginx web server to use it.</p>\n<p>We will make a few adjustments to our configuration:</p>\n<ol>\n<li>We will create a configuration snippet containing our SSL key and certificate file locations.</li>\n<li>We will create a configuration snippet containing strong SSL settings that can be used with any certificates in the future.</li>\n<li>We will adjust the Nginx server blocks to handle SSL requests and use the two snippets above.</li>\n</ol>\n<p>First, let’s create a new Nginx configuration snippet in the <code>/etc/nginx/snippets</code> directory.</p>\n<p>To properly distinguish the purpose of this file, we will name it <code>ssl-</code> followed by our domain name, followed by <code>.conf</code> on the end:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/snippets/ssl-peiyingchi.com.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>ssl-peiyingchi.com.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;</div><div class=\"line\">ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;</div></pre></td></tr></table></figure>\n<p>Next, we will create another snippet that will define some SSL settings. This will set Nginx up with a strong SSL cipher suite and enable some advanced features that will help keep our server secure.</p>\n<p>The parameters we will set can be reused in future Nginx configurations, so we will give the file a generic name:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/snippets/ssl-params.conf</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><figcaption><span>ssl-params.conf</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"># from https://cipherli.st/</div><div class=\"line\"># and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html</div><div class=\"line\"></div><div class=\"line\">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">ssl_prefer_server_ciphers on;</div><div class=\"line\">ssl_ciphers &quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;;</div><div class=\"line\">ssl_ecdh_curve secp384r1;</div><div class=\"line\">ssl_session_cache shared:SSL:10m;</div><div class=\"line\">ssl_session_tickets off;</div><div class=\"line\">ssl_stapling on;</div><div class=\"line\">ssl_stapling_verify on;</div><div class=\"line\">resolver 8.8.8.8 8.8.4.4 valid=300s;</div><div class=\"line\">resolver_timeout 5s;</div><div class=\"line\"># Disable preloading HSTS for now.  You can use the commented out header line that includes</div><div class=\"line\"># the &quot;preload&quot; directive if you understand the implications.</div><div class=\"line\">#add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;</div><div class=\"line\">add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains&quot;;</div><div class=\"line\">add_header X-Frame-Options DENY;</div><div class=\"line\">add_header X-Content-Type-Options nosniff;</div><div class=\"line\"></div><div class=\"line\">ssl_dhparam /etc/ssl/certs/dhparam.pem;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>If you are interested, you can take take a moment to read up on <a href=\"https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\" target=\"_blank\" rel=\"external\">HTTP Strict Transport Security, or HSTS</a>, and specifically about the <a href=\"https://hstspreload.appspot.com/\" target=\"_blank\" rel=\"external\">“preload”</a> functionality. Preloading HSTS provides increased security, but can have far reaching consequences if accidentally enabled or enabled incorrectly. In this guide, we will not preload the settings, but you can modify that if you are sure you understand the implications</p>\n</blockquote>\n<p>Now that we have our snippets, we can adjust our Nginx configuration to enable SSL.</p>\n<p>Before we go any further, let’s back up our current server block file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /etc/nginx/sites-available/peiyingchi.com /etc/nginx/sites-available/peiyingchi.com.bak</div></pre></td></tr></table></figure>\n<p>Now, open the server block file to make adjustments.<br>Blow are the 2 conf files for my top-level domain and my subdomain:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nano /etc/nginx/sites-available/peiyingchi.com</div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>peiyingchi.com</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">\tlisten <span class=\"number\">80</span>;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">\tserver_name peiyingchi.com www.peiyingchi.com;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">301</span> https:<span class=\"comment\">//$server_name$request_uri;</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">server &#123;</div><div class=\"line\"></div><div class=\"line\">\t# SSL configuration</div><div class=\"line\">\tlisten <span class=\"number\">443</span> ssl http2 default_server;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">443</span> ssl http2 default_server;</div><div class=\"line\">\tinclude snippets/ssl-peiyingchi.com.conf;</div><div class=\"line\">\tinclude snippets/ssl-params.conf;</div><div class=\"line\">\t</div><div class=\"line\">\troot /<span class=\"keyword\">var</span>/www/peiyingchi.com/html;</div><div class=\"line\"></div><div class=\"line\">    # Add index.php to the list if you are using PHP</div><div class=\"line\">\tindex index.html index.php;</div><div class=\"line\">\t</div><div class=\"line\">\tserver_name peiyingchi.com www.peiyingchi.com;</div><div class=\"line\">\t</div><div class=\"line\">        location / &#123;</div><div class=\"line\">            try_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        location ~ <span class=\"regexp\">/.well-known &#123;</span></div><div class=\"line\"><span class=\"regexp\">            allow all;</span></div><div class=\"line\"><span class=\"regexp\">        &#125;</span></div><div class=\"line\"><span class=\"regexp\"></span></div><div class=\"line\"><span class=\"regexp\">&#125;</span></div></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><figcaption><span>blog.peiyingchi.com</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">\tlisten <span class=\"number\">80</span>;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;</div><div class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">301</span> https:<span class=\"comment\">//$server_name$request_uri;</span></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">server &#123;</div><div class=\"line\">\t# SSL configuration</div><div class=\"line\"></div><div class=\"line\">\tlisten <span class=\"number\">443</span> ssl http2;</div><div class=\"line\">\tlisten [::]:<span class=\"number\">443</span> ssl http2;</div><div class=\"line\">\tinclude snippets/ssl-peiyingchi.com.conf; # NOTE: the same file as the top level domain</div><div class=\"line\">\tinclude snippets/ssl-params.conf;\t</div><div class=\"line\">\t</div><div class=\"line\">\troot /<span class=\"keyword\">var</span>/www/blog.peiyingchi.com/html;</div><div class=\"line\">\tindex index.html;</div><div class=\"line\">\tserver_name blog.peiyingchi.com www.blog.peiyingchi.com;</div><div class=\"line\">\t</div><div class=\"line\">\tlocation / &#123;</div><div class=\"line\">\t\ttry_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\tlocation ~ <span class=\"regexp\">/.well-known &#123;</span></div><div class=\"line\"><span class=\"regexp\">\t\tallow all;</span></div><div class=\"line\"><span class=\"regexp\">\t&#125;</span></div><div class=\"line\"><span class=\"regexp\">&#125;</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-4-Adjust-the-Firewall\"><a href=\"#Step-4-Adjust-the-Firewall\" class=\"headerlink\" title=\"Step 4: Adjust the Firewall\"></a>Step 4: Adjust the Firewall</h3><p>If you have the <code>ufw</code> firewall enabled, as recommended by the prerequisite guides, you’ll need to adjust the settings to allow for SSL traffic.</p>\n<p>You can see the current setting by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ufw status</div></pre></td></tr></table></figure>\n<p>To additionally let in HTTPS traffic, we can allow the “Nginx Full” profile and then delete the redundant “Nginx HTTP” profile allowance:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ufw allow <span class=\"string\">'Nginx Full'</span></div><div class=\"line\">sudo ufw delete allow <span class=\"string\">'Nginx HTTP'</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-5-Enabling-the-Changes-in-Nginx\"><a href=\"#Step-5-Enabling-the-Changes-in-Nginx\" class=\"headerlink\" title=\"Step 5: Enabling the Changes in Nginx\"></a>Step 5: Enabling the Changes in Nginx</h3><p>First, we should check to make sure that there are no syntax errors in our files. We can do this by typing:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -t</div></pre></td></tr></table></figure>\n<p>If your output matches the above, your configuration file has no syntax errors. We can safely restart Nginx to implement our changes:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo systemctl restart nginx</div></pre></td></tr></table></figure>\n<p>You can use the Qualys SSL Labs Report to see how your server configuration scores:<br>Enter the following to your web browser:</p>\n<p><a href=\"https://www.ssllabs.com/ssltest/analyze.html?d=\" target=\"_blank\" rel=\"external\">https://www.ssllabs.com/ssltest/analyze.html?d=</a><span style=\"color:red\">example.com</span></p>\n<h3 id=\"Step-6-Set-Up-Auto-Renewal\"><a href=\"#Step-6-Set-Up-Auto-Renewal\" class=\"headerlink\" title=\"Step 6: Set Up Auto Renewal\"></a>Step 6: Set Up Auto Renewal</h3><p>From Let’s Encrypt’s <a href=\"https://certbot.eff.org/#ubuntuxenial-nginx\" target=\"_blank\" rel=\"external\">official documentation</a>, you can run the following to test the renew function:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo letsencrypt renew --dry-run --agree-tos</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Do not worry for the ‘Registering without email!’ warning. It does not hurt anything.</p>\n</blockquote>\n<p>If that appears to be working correctly, you can arrange for automatic renewal by adding a cron or systemd job which runs <code>letsencrypt renew</code></p>\n<p>Since the renewal first checks for the expiration date and only executes the renewal if the certificate is less than 30 days away from expiration, it is safe to create a cron job that runs every week or even every day, for instance.</p>\n<p>Let’s edit the crontab to create a new job that will run the renewal command every week. To edit the crontab for the root user, run:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo crontab -e</div></pre></td></tr></table></figure>\n<p>Add the following lines:</p>\n<figure class=\"highlight sh\"><figcaption><span>crontab entry</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">30 2 * * 1 /usr/bin/letsencrypt renew &gt;&gt; /var/<span class=\"built_in\">log</span>/le-renew.log</div><div class=\"line\">35 2 * * 1 /bin/systemctl reload nginx</div></pre></td></tr></table></figure>\n<p>This will create a new cron job that will execute the letsencrypt-auto renew command every Monday at 2:30 am, and reload Nginx at 2:35am (so the renewed certificate will be used). The output produced by the command will be piped to a log file located at <code>/var/log/le-renewal.log</code>.</p>"},{"title":"Bitcoin Blockchain |比特币区块链理解","date":"2017-01-19T03:06:48.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nExplain the key concepts in bitcoin and its underlying blockchain technology.\n\n<!-- more --> \nBlockchain is a mindset。\n\n#### Memory Keys\n\n* Distributed (a network of nodes)\n* Public\n* Time-stamped\n* Persistent\n\n#### Sending Bitcoin\nFor A ⇒ B, A broadcasts the message to the bitcoin network (including the amount, the public key of the receiver, etc. Every node that receives it will update their copy of the ledger, and then pass along the transaction message.\nEvery transaction has a unique digital signature that is created based on the sender's private key, and can be verified by the receiver's public key. To claim ownership of the bitcoin, you must prove that you are the owner of the public key.\n\nAccount balances: In fact, no records of account balances are kept at all. **Ownership of the funds is verified through links to previous transactions.**\n\n> To send 5 BTCs to Bob, Alice must reference other transactions where she received 5 or more BTCs.\n> That's why it takes so long when you install the BTC wallet software the first time. Because it downloads all the transactions ever made and checks each's velidity.\n\nOwning BTC means that there are transactions in this list that point to your name and haven't been spent.\n\nBecause people will likely lose private keys due to hard drive crashes and insufficient backups, Bitcoin currency will eventually be a deflationary one.\n\n#### Still another security hole: Transaction Order\nNodes need to agree on transaction order.\nThe BTC system orders transactions by placing them in groups called blocks, and linking these blocks together in something called blockchain.\n> Note that it is different from the transaction chain.\n\nTransactions in the same block are considered happened at the same time. Any transactions not yet in a block are called unconfirmed. Any node can collect a set of unconfirmed transactions into a block and broadcast it to the rest of the network as a suggestion for what the next block in a chain should be.\nMultiple nodes could generate blocks at the same time, so where are multiple versions to choose from. Each valid block must contain an answer to a very special mathematical problem.\n\nComputer runs entire text of the block + an additional random guess through something called a cryptographic hash, **UNTIL** the output is below a certain value.\nIt takes 10 mins for the bitcoin network to solve a block. The first person who solves a math problem broadcasts their block and gets to have their group of transactions accepted as the next in the chain.\n\nHowever, while it is rare, a block may be solved by multiple nodes at the same time, then branches occur. How to deal with this? Well, you simply build on the first block you receive and works from there. The tie gets broken when someone solves the next block. The general rule: **Immediately switch to the longest chain available**.\n<img src=\"https://s6.postimg.org/f9rex4dsh/14829171046099.jpg\" class=\"img-shadow\" width=\"300px\">\n<img src=\"https://s6.postimg.org/k9ov52jf5/14829171346517.jpg\" class=\"img-shadow\" width=\"300px\">\nSo the blockchain quickly stablize. \nTransactions/Facts are grouped in blocks, and there is only a single chain of blocks, replicated in the entire network.\n\n> What is hashing?\n> Hashing is also a common method of accessing data records. Consider, for example, a list of names:\nJohn Smith\nSarah Jones\nRoger Adams\nTo create an index, called a hash table,for these records, you would apply a formula to each name to produce a unique numeric value. So you might get something like:\n1345873 John smith\n3097905 Sarah Jones\n4060964 Roger Adams\nThen to search for the record containing Sarah Jones,you just need to reapply the formula, which directly yields the index key to the record. This is much more efficient than searching through all the records till the matching record is found.\n\n#### End of Chain Insecurity\n<img src=\"https://s6.postimg.org/7wc0y5tqp/14829172517203.jpg\"class=\"img-shadow\" width=\"200px\">\nThe fact that there is some ambiguity in the end of the chain\n\nA double-spent attack in this block chain system:\n<img src=\"https://s6.postimg.org/z1ozinzyp/14898931224923.jpg\" class=\"img-shadow\" width=\"450px\">\n\nA⇒B will be threw back to the unconfirmed pool, but because A⇒A was confirmed with the same input, it will invalid A⇒B. \n\nWell, **Math puzzle in each block actually prevent this**, because Alice cannot change one block from the middle. The attach will only be possible if Alice owns more than half of the nodes in the world.\n<img src=\"https://s6.postimg.org/d3siovky9/14898931329803.jpg\" class=\"img-shadow\" width=\"450px\">\nSo the system is only vulnerable to a double spend attach near the end of the chain, which is why it's recommended to wait several blocks before considering received money final. \n\n\n#### Mining\nThe process of looking for blocks is called mining. This is because, just like gold mining, block mining brings an economical reward - some form of money. That’s the reason why people who run nodes in a blockchain are also called miners.\n> Note: By default, a node doesn’t mine - it just receives blocks mined by other nodes. It’s a voluntary process to turn a node into a miner node.\n\nEvery second, each miner node in a blockchain tests thousands of random strings to try and form a new block. So running a miner in the blockchain pumps a huge amount of computer resources (storage and CPU). That’s why you must pay to store facts in a blockchain. Reading facts, on the other hand, is free: you just need to run your own node, and you’ll recuperate the entire history of facts issued by all the other nodes. So to summarize:\n\n* Reading data is free\n* Adding facts costs a small fee\n* Mining a block brings in the money of all the fees of the facts included in the block\n\n每个矿工会把十分钟内所有unconfirmed transactions拿过来, 两两pair来产生hash,一层层两两pair产生一个最终hash.\n\n简而言之，比特币区块链的挖矿流程：\n广播比特币网络中的每一笔交易，使每个参与者（指矿工）都记录下这笔交易。\n每个参与者接收到交易信息后，都要将该笔交易盖上时戳，收入区块。\n由于每个矿工都做了工作，谁赢了获得奖励呢？此时参与者们要通过一个计算游戏，谁能最快解出SHA256运算的值，谁就将赢得打包区块的权利，并获得系统的25个比特币奖励。这个数量的设定是每四年减半。（比特币已经到了第七个年头了）\n获得记账权的矿工将向全网广播这十分钟内区盖了时戳的交易，其他参与者将核对这些账目\n当其他参与者都确认无误后，该区块就确认合法，就进入了下一轮的区块争夺战。多个区块逐渐形成区块链。\n\n\n\n\n","source":"_posts/bitcoin-blockchain.md","raw":"---\ntitle: Bitcoin Blockchain |比特币区块链理解\ndate: 2017-01-19 11:06:48\ntags: blockchain\ncategories: Blockchain\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nExplain the key concepts in bitcoin and its underlying blockchain technology.\n\n<!-- more --> \nBlockchain is a mindset。\n\n#### Memory Keys\n\n* Distributed (a network of nodes)\n* Public\n* Time-stamped\n* Persistent\n\n#### Sending Bitcoin\nFor A ⇒ B, A broadcasts the message to the bitcoin network (including the amount, the public key of the receiver, etc. Every node that receives it will update their copy of the ledger, and then pass along the transaction message.\nEvery transaction has a unique digital signature that is created based on the sender's private key, and can be verified by the receiver's public key. To claim ownership of the bitcoin, you must prove that you are the owner of the public key.\n\nAccount balances: In fact, no records of account balances are kept at all. **Ownership of the funds is verified through links to previous transactions.**\n\n> To send 5 BTCs to Bob, Alice must reference other transactions where she received 5 or more BTCs.\n> That's why it takes so long when you install the BTC wallet software the first time. Because it downloads all the transactions ever made and checks each's velidity.\n\nOwning BTC means that there are transactions in this list that point to your name and haven't been spent.\n\nBecause people will likely lose private keys due to hard drive crashes and insufficient backups, Bitcoin currency will eventually be a deflationary one.\n\n#### Still another security hole: Transaction Order\nNodes need to agree on transaction order.\nThe BTC system orders transactions by placing them in groups called blocks, and linking these blocks together in something called blockchain.\n> Note that it is different from the transaction chain.\n\nTransactions in the same block are considered happened at the same time. Any transactions not yet in a block are called unconfirmed. Any node can collect a set of unconfirmed transactions into a block and broadcast it to the rest of the network as a suggestion for what the next block in a chain should be.\nMultiple nodes could generate blocks at the same time, so where are multiple versions to choose from. Each valid block must contain an answer to a very special mathematical problem.\n\nComputer runs entire text of the block + an additional random guess through something called a cryptographic hash, **UNTIL** the output is below a certain value.\nIt takes 10 mins for the bitcoin network to solve a block. The first person who solves a math problem broadcasts their block and gets to have their group of transactions accepted as the next in the chain.\n\nHowever, while it is rare, a block may be solved by multiple nodes at the same time, then branches occur. How to deal with this? Well, you simply build on the first block you receive and works from there. The tie gets broken when someone solves the next block. The general rule: **Immediately switch to the longest chain available**.\n<img src=\"https://s6.postimg.org/f9rex4dsh/14829171046099.jpg\" class=\"img-shadow\" width=\"300px\">\n<img src=\"https://s6.postimg.org/k9ov52jf5/14829171346517.jpg\" class=\"img-shadow\" width=\"300px\">\nSo the blockchain quickly stablize. \nTransactions/Facts are grouped in blocks, and there is only a single chain of blocks, replicated in the entire network.\n\n> What is hashing?\n> Hashing is also a common method of accessing data records. Consider, for example, a list of names:\nJohn Smith\nSarah Jones\nRoger Adams\nTo create an index, called a hash table,for these records, you would apply a formula to each name to produce a unique numeric value. So you might get something like:\n1345873 John smith\n3097905 Sarah Jones\n4060964 Roger Adams\nThen to search for the record containing Sarah Jones,you just need to reapply the formula, which directly yields the index key to the record. This is much more efficient than searching through all the records till the matching record is found.\n\n#### End of Chain Insecurity\n<img src=\"https://s6.postimg.org/7wc0y5tqp/14829172517203.jpg\"class=\"img-shadow\" width=\"200px\">\nThe fact that there is some ambiguity in the end of the chain\n\nA double-spent attack in this block chain system:\n<img src=\"https://s6.postimg.org/z1ozinzyp/14898931224923.jpg\" class=\"img-shadow\" width=\"450px\">\n\nA⇒B will be threw back to the unconfirmed pool, but because A⇒A was confirmed with the same input, it will invalid A⇒B. \n\nWell, **Math puzzle in each block actually prevent this**, because Alice cannot change one block from the middle. The attach will only be possible if Alice owns more than half of the nodes in the world.\n<img src=\"https://s6.postimg.org/d3siovky9/14898931329803.jpg\" class=\"img-shadow\" width=\"450px\">\nSo the system is only vulnerable to a double spend attach near the end of the chain, which is why it's recommended to wait several blocks before considering received money final. \n\n\n#### Mining\nThe process of looking for blocks is called mining. This is because, just like gold mining, block mining brings an economical reward - some form of money. That’s the reason why people who run nodes in a blockchain are also called miners.\n> Note: By default, a node doesn’t mine - it just receives blocks mined by other nodes. It’s a voluntary process to turn a node into a miner node.\n\nEvery second, each miner node in a blockchain tests thousands of random strings to try and form a new block. So running a miner in the blockchain pumps a huge amount of computer resources (storage and CPU). That’s why you must pay to store facts in a blockchain. Reading facts, on the other hand, is free: you just need to run your own node, and you’ll recuperate the entire history of facts issued by all the other nodes. So to summarize:\n\n* Reading data is free\n* Adding facts costs a small fee\n* Mining a block brings in the money of all the fees of the facts included in the block\n\n每个矿工会把十分钟内所有unconfirmed transactions拿过来, 两两pair来产生hash,一层层两两pair产生一个最终hash.\n\n简而言之，比特币区块链的挖矿流程：\n广播比特币网络中的每一笔交易，使每个参与者（指矿工）都记录下这笔交易。\n每个参与者接收到交易信息后，都要将该笔交易盖上时戳，收入区块。\n由于每个矿工都做了工作，谁赢了获得奖励呢？此时参与者们要通过一个计算游戏，谁能最快解出SHA256运算的值，谁就将赢得打包区块的权利，并获得系统的25个比特币奖励。这个数量的设定是每四年减半。（比特币已经到了第七个年头了）\n获得记账权的矿工将向全网广播这十分钟内区盖了时戳的交易，其他参与者将核对这些账目\n当其他参与者都确认无误后，该区块就确认合法，就进入了下一轮的区块争夺战。多个区块逐渐形成区块链。\n\n\n\n\n","slug":"bitcoin-blockchain","published":1,"updated":"2017-03-19T08:20:56.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiul00060x1xwejkblig","content":"<p>Explain the key concepts in bitcoin and its underlying blockchain technology.</p>\n<a id=\"more\"></a> \n<p>Blockchain is a mindset。</p>\n<h4 id=\"Memory-Keys\"><a href=\"#Memory-Keys\" class=\"headerlink\" title=\"Memory Keys\"></a>Memory Keys</h4><ul>\n<li>Distributed (a network of nodes)</li>\n<li>Public</li>\n<li>Time-stamped</li>\n<li>Persistent</li>\n</ul>\n<h4 id=\"Sending-Bitcoin\"><a href=\"#Sending-Bitcoin\" class=\"headerlink\" title=\"Sending Bitcoin\"></a>Sending Bitcoin</h4><p>For A ⇒ B, A broadcasts the message to the bitcoin network (including the amount, the public key of the receiver, etc. Every node that receives it will update their copy of the ledger, and then pass along the transaction message.<br>Every transaction has a unique digital signature that is created based on the sender’s private key, and can be verified by the receiver’s public key. To claim ownership of the bitcoin, you must prove that you are the owner of the public key.</p>\n<p>Account balances: In fact, no records of account balances are kept at all. <strong>Ownership of the funds is verified through links to previous transactions.</strong></p>\n<blockquote>\n<p>To send 5 BTCs to Bob, Alice must reference other transactions where she received 5 or more BTCs.<br>That’s why it takes so long when you install the BTC wallet software the first time. Because it downloads all the transactions ever made and checks each’s velidity.</p>\n</blockquote>\n<p>Owning BTC means that there are transactions in this list that point to your name and haven’t been spent.</p>\n<p>Because people will likely lose private keys due to hard drive crashes and insufficient backups, Bitcoin currency will eventually be a deflationary one.</p>\n<h4 id=\"Still-another-security-hole-Transaction-Order\"><a href=\"#Still-another-security-hole-Transaction-Order\" class=\"headerlink\" title=\"Still another security hole: Transaction Order\"></a>Still another security hole: Transaction Order</h4><p>Nodes need to agree on transaction order.<br>The BTC system orders transactions by placing them in groups called blocks, and linking these blocks together in something called blockchain.</p>\n<blockquote>\n<p>Note that it is different from the transaction chain.</p>\n</blockquote>\n<p>Transactions in the same block are considered happened at the same time. Any transactions not yet in a block are called unconfirmed. Any node can collect a set of unconfirmed transactions into a block and broadcast it to the rest of the network as a suggestion for what the next block in a chain should be.<br>Multiple nodes could generate blocks at the same time, so where are multiple versions to choose from. Each valid block must contain an answer to a very special mathematical problem.</p>\n<p>Computer runs entire text of the block + an additional random guess through something called a cryptographic hash, <strong>UNTIL</strong> the output is below a certain value.<br>It takes 10 mins for the bitcoin network to solve a block. The first person who solves a math problem broadcasts their block and gets to have their group of transactions accepted as the next in the chain.</p>\n<p>However, while it is rare, a block may be solved by multiple nodes at the same time, then branches occur. How to deal with this? Well, you simply build on the first block you receive and works from there. The tie gets broken when someone solves the next block. The general rule: <strong>Immediately switch to the longest chain available</strong>.<br><img src=\"https://s6.postimg.org/f9rex4dsh/14829171046099.jpg\" class=\"img-shadow\" width=\"300px\"><br><img src=\"https://s6.postimg.org/k9ov52jf5/14829171346517.jpg\" class=\"img-shadow\" width=\"300px\"><br>So the blockchain quickly stablize.<br>Transactions/Facts are grouped in blocks, and there is only a single chain of blocks, replicated in the entire network.</p>\n<blockquote>\n<p>What is hashing?<br>Hashing is also a common method of accessing data records. Consider, for example, a list of names:<br>John Smith<br>Sarah Jones<br>Roger Adams<br>To create an index, called a hash table,for these records, you would apply a formula to each name to produce a unique numeric value. So you might get something like:<br>1345873 John smith<br>3097905 Sarah Jones<br>4060964 Roger Adams<br>Then to search for the record containing Sarah Jones,you just need to reapply the formula, which directly yields the index key to the record. This is much more efficient than searching through all the records till the matching record is found.</p>\n</blockquote>\n<h4 id=\"End-of-Chain-Insecurity\"><a href=\"#End-of-Chain-Insecurity\" class=\"headerlink\" title=\"End of Chain Insecurity\"></a>End of Chain Insecurity</h4><p><img src=\"https://s6.postimg.org/7wc0y5tqp/14829172517203.jpg\" class=\"img-shadow\" width=\"200px\"><br>The fact that there is some ambiguity in the end of the chain</p>\n<p>A double-spent attack in this block chain system:<br><img src=\"https://s6.postimg.org/z1ozinzyp/14898931224923.jpg\" class=\"img-shadow\" width=\"450px\"></p>\n<p>A⇒B will be threw back to the unconfirmed pool, but because A⇒A was confirmed with the same input, it will invalid A⇒B. </p>\n<p>Well, <strong>Math puzzle in each block actually prevent this</strong>, because Alice cannot change one block from the middle. The attach will only be possible if Alice owns more than half of the nodes in the world.<br><img src=\"https://s6.postimg.org/d3siovky9/14898931329803.jpg\" class=\"img-shadow\" width=\"450px\"><br>So the system is only vulnerable to a double spend attach near the end of the chain, which is why it’s recommended to wait several blocks before considering received money final. </p>\n<h4 id=\"Mining\"><a href=\"#Mining\" class=\"headerlink\" title=\"Mining\"></a>Mining</h4><p>The process of looking for blocks is called mining. This is because, just like gold mining, block mining brings an economical reward - some form of money. That’s the reason why people who run nodes in a blockchain are also called miners.</p>\n<blockquote>\n<p>Note: By default, a node doesn’t mine - it just receives blocks mined by other nodes. It’s a voluntary process to turn a node into a miner node.</p>\n</blockquote>\n<p>Every second, each miner node in a blockchain tests thousands of random strings to try and form a new block. So running a miner in the blockchain pumps a huge amount of computer resources (storage and CPU). That’s why you must pay to store facts in a blockchain. Reading facts, on the other hand, is free: you just need to run your own node, and you’ll recuperate the entire history of facts issued by all the other nodes. So to summarize:</p>\n<ul>\n<li>Reading data is free</li>\n<li>Adding facts costs a small fee</li>\n<li>Mining a block brings in the money of all the fees of the facts included in the block</li>\n</ul>\n<p>每个矿工会把十分钟内所有unconfirmed transactions拿过来, 两两pair来产生hash,一层层两两pair产生一个最终hash.</p>\n<p>简而言之，比特币区块链的挖矿流程：<br>广播比特币网络中的每一笔交易，使每个参与者（指矿工）都记录下这笔交易。<br>每个参与者接收到交易信息后，都要将该笔交易盖上时戳，收入区块。<br>由于每个矿工都做了工作，谁赢了获得奖励呢？此时参与者们要通过一个计算游戏，谁能最快解出SHA256运算的值，谁就将赢得打包区块的权利，并获得系统的25个比特币奖励。这个数量的设定是每四年减半。（比特币已经到了第七个年头了）<br>获得记账权的矿工将向全网广播这十分钟内区盖了时戳的交易，其他参与者将核对这些账目<br>当其他参与者都确认无误后，该区块就确认合法，就进入了下一轮的区块争夺战。多个区块逐渐形成区块链。</p>\n","site":{"data":{}},"excerpt":"<p>Explain the key concepts in bitcoin and its underlying blockchain technology.</p>","more":"<p>Blockchain is a mindset。</p>\n<h4 id=\"Memory-Keys\"><a href=\"#Memory-Keys\" class=\"headerlink\" title=\"Memory Keys\"></a>Memory Keys</h4><ul>\n<li>Distributed (a network of nodes)</li>\n<li>Public</li>\n<li>Time-stamped</li>\n<li>Persistent</li>\n</ul>\n<h4 id=\"Sending-Bitcoin\"><a href=\"#Sending-Bitcoin\" class=\"headerlink\" title=\"Sending Bitcoin\"></a>Sending Bitcoin</h4><p>For A ⇒ B, A broadcasts the message to the bitcoin network (including the amount, the public key of the receiver, etc. Every node that receives it will update their copy of the ledger, and then pass along the transaction message.<br>Every transaction has a unique digital signature that is created based on the sender’s private key, and can be verified by the receiver’s public key. To claim ownership of the bitcoin, you must prove that you are the owner of the public key.</p>\n<p>Account balances: In fact, no records of account balances are kept at all. <strong>Ownership of the funds is verified through links to previous transactions.</strong></p>\n<blockquote>\n<p>To send 5 BTCs to Bob, Alice must reference other transactions where she received 5 or more BTCs.<br>That’s why it takes so long when you install the BTC wallet software the first time. Because it downloads all the transactions ever made and checks each’s velidity.</p>\n</blockquote>\n<p>Owning BTC means that there are transactions in this list that point to your name and haven’t been spent.</p>\n<p>Because people will likely lose private keys due to hard drive crashes and insufficient backups, Bitcoin currency will eventually be a deflationary one.</p>\n<h4 id=\"Still-another-security-hole-Transaction-Order\"><a href=\"#Still-another-security-hole-Transaction-Order\" class=\"headerlink\" title=\"Still another security hole: Transaction Order\"></a>Still another security hole: Transaction Order</h4><p>Nodes need to agree on transaction order.<br>The BTC system orders transactions by placing them in groups called blocks, and linking these blocks together in something called blockchain.</p>\n<blockquote>\n<p>Note that it is different from the transaction chain.</p>\n</blockquote>\n<p>Transactions in the same block are considered happened at the same time. Any transactions not yet in a block are called unconfirmed. Any node can collect a set of unconfirmed transactions into a block and broadcast it to the rest of the network as a suggestion for what the next block in a chain should be.<br>Multiple nodes could generate blocks at the same time, so where are multiple versions to choose from. Each valid block must contain an answer to a very special mathematical problem.</p>\n<p>Computer runs entire text of the block + an additional random guess through something called a cryptographic hash, <strong>UNTIL</strong> the output is below a certain value.<br>It takes 10 mins for the bitcoin network to solve a block. The first person who solves a math problem broadcasts their block and gets to have their group of transactions accepted as the next in the chain.</p>\n<p>However, while it is rare, a block may be solved by multiple nodes at the same time, then branches occur. How to deal with this? Well, you simply build on the first block you receive and works from there. The tie gets broken when someone solves the next block. The general rule: <strong>Immediately switch to the longest chain available</strong>.<br><img src=\"https://s6.postimg.org/f9rex4dsh/14829171046099.jpg\" class=\"img-shadow\" width=\"300px\"><br><img src=\"https://s6.postimg.org/k9ov52jf5/14829171346517.jpg\" class=\"img-shadow\" width=\"300px\"><br>So the blockchain quickly stablize.<br>Transactions/Facts are grouped in blocks, and there is only a single chain of blocks, replicated in the entire network.</p>\n<blockquote>\n<p>What is hashing?<br>Hashing is also a common method of accessing data records. Consider, for example, a list of names:<br>John Smith<br>Sarah Jones<br>Roger Adams<br>To create an index, called a hash table,for these records, you would apply a formula to each name to produce a unique numeric value. So you might get something like:<br>1345873 John smith<br>3097905 Sarah Jones<br>4060964 Roger Adams<br>Then to search for the record containing Sarah Jones,you just need to reapply the formula, which directly yields the index key to the record. This is much more efficient than searching through all the records till the matching record is found.</p>\n</blockquote>\n<h4 id=\"End-of-Chain-Insecurity\"><a href=\"#End-of-Chain-Insecurity\" class=\"headerlink\" title=\"End of Chain Insecurity\"></a>End of Chain Insecurity</h4><p><img src=\"https://s6.postimg.org/7wc0y5tqp/14829172517203.jpg\" class=\"img-shadow\" width=\"200px\"><br>The fact that there is some ambiguity in the end of the chain</p>\n<p>A double-spent attack in this block chain system:<br><img src=\"https://s6.postimg.org/z1ozinzyp/14898931224923.jpg\" class=\"img-shadow\" width=\"450px\"></p>\n<p>A⇒B will be threw back to the unconfirmed pool, but because A⇒A was confirmed with the same input, it will invalid A⇒B. </p>\n<p>Well, <strong>Math puzzle in each block actually prevent this</strong>, because Alice cannot change one block from the middle. The attach will only be possible if Alice owns more than half of the nodes in the world.<br><img src=\"https://s6.postimg.org/d3siovky9/14898931329803.jpg\" class=\"img-shadow\" width=\"450px\"><br>So the system is only vulnerable to a double spend attach near the end of the chain, which is why it’s recommended to wait several blocks before considering received money final. </p>\n<h4 id=\"Mining\"><a href=\"#Mining\" class=\"headerlink\" title=\"Mining\"></a>Mining</h4><p>The process of looking for blocks is called mining. This is because, just like gold mining, block mining brings an economical reward - some form of money. That’s the reason why people who run nodes in a blockchain are also called miners.</p>\n<blockquote>\n<p>Note: By default, a node doesn’t mine - it just receives blocks mined by other nodes. It’s a voluntary process to turn a node into a miner node.</p>\n</blockquote>\n<p>Every second, each miner node in a blockchain tests thousands of random strings to try and form a new block. So running a miner in the blockchain pumps a huge amount of computer resources (storage and CPU). That’s why you must pay to store facts in a blockchain. Reading facts, on the other hand, is free: you just need to run your own node, and you’ll recuperate the entire history of facts issued by all the other nodes. So to summarize:</p>\n<ul>\n<li>Reading data is free</li>\n<li>Adding facts costs a small fee</li>\n<li>Mining a block brings in the money of all the fees of the facts included in the block</li>\n</ul>\n<p>每个矿工会把十分钟内所有unconfirmed transactions拿过来, 两两pair来产生hash,一层层两两pair产生一个最终hash.</p>\n<p>简而言之，比特币区块链的挖矿流程：<br>广播比特币网络中的每一笔交易，使每个参与者（指矿工）都记录下这笔交易。<br>每个参与者接收到交易信息后，都要将该笔交易盖上时戳，收入区块。<br>由于每个矿工都做了工作，谁赢了获得奖励呢？此时参与者们要通过一个计算游戏，谁能最快解出SHA256运算的值，谁就将赢得打包区块的权利，并获得系统的25个比特币奖励。这个数量的设定是每四年减半。（比特币已经到了第七个年头了）<br>获得记账权的矿工将向全网广播这十分钟内区盖了时戳的交易，其他参与者将核对这些账目<br>当其他参与者都确认无误后，该区块就确认合法，就进入了下一轮的区块争夺战。多个区块逐渐形成区块链。</p>"},{"title":"Coursera Downloader |Coursera 资料抓取Python爬虫","date":"2017-03-31T11:45:43.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nA command-line coursera downloader written in Python.\n\nYou can download the script from my GitHub repo here: https://github.com/yingchi/coursera-downloader\n\nWhen learning wonderful modules on Coursera, I found it quite frustrating when I need to click multiple places and move back and forth to download the learning materials for one course. \n\nAfter searching around, I found 2 github repo that can help people to download course materials from Coursera. However, one of the repo stopped updating and another is not very convenient to use. \n\nSo I decided to combine the good features from them and write a new downloading tool. You will need your Coursera email and password if you use the script, but don't worry, they are encrypted and saved into a local file. \n\n\n","source":"_posts/coursera-downloader.md","raw":"---\ntitle: Coursera Downloader |Coursera 资料抓取Python爬虫\ndate: 2017-03-31 19:45:43\ntags: web scraping\ncategories: Scraping\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nA command-line coursera downloader written in Python.\n\nYou can download the script from my GitHub repo here: https://github.com/yingchi/coursera-downloader\n\nWhen learning wonderful modules on Coursera, I found it quite frustrating when I need to click multiple places and move back and forth to download the learning materials for one course. \n\nAfter searching around, I found 2 github repo that can help people to download course materials from Coursera. However, one of the repo stopped updating and another is not very convenient to use. \n\nSo I decided to combine the good features from them and write a new downloading tool. You will need your Coursera email and password if you use the script, but don't worry, they are encrypted and saved into a local file. \n\n\n","slug":"coursera-downloader","published":1,"updated":"2017-03-31T11:54:14.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiuo00080x1xdod37afr","content":"<p>A command-line coursera downloader written in Python.</p>\n<p>You can download the script from my GitHub repo here: <a href=\"https://github.com/yingchi/coursera-downloader\" target=\"_blank\" rel=\"external\">https://github.com/yingchi/coursera-downloader</a></p>\n<p>When learning wonderful modules on Coursera, I found it quite frustrating when I need to click multiple places and move back and forth to download the learning materials for one course. </p>\n<p>After searching around, I found 2 github repo that can help people to download course materials from Coursera. However, one of the repo stopped updating and another is not very convenient to use. </p>\n<p>So I decided to combine the good features from them and write a new downloading tool. You will need your Coursera email and password if you use the script, but don’t worry, they are encrypted and saved into a local file. </p>\n","site":{"data":{}},"excerpt":"","more":"<p>A command-line coursera downloader written in Python.</p>\n<p>You can download the script from my GitHub repo here: <a href=\"https://github.com/yingchi/coursera-downloader\" target=\"_blank\" rel=\"external\">https://github.com/yingchi/coursera-downloader</a></p>\n<p>When learning wonderful modules on Coursera, I found it quite frustrating when I need to click multiple places and move back and forth to download the learning materials for one course. </p>\n<p>After searching around, I found 2 github repo that can help people to download course materials from Coursera. However, one of the repo stopped updating and another is not very convenient to use. </p>\n<p>So I decided to combine the good features from them and write a new downloading tool. You will need your Coursera email and password if you use the script, but don’t worry, they are encrypted and saved into a local file. </p>\n"},{"title":"Get a List of HDFS Files in Python","date":"2017-09-26T07:45:43.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nIn an ad hoc work, I need to read in files in multiple HDFS directories based on a date range. \n\nThe HDFS data structure is like the following \n\n>```\n/data\n    /20170730\n        /part-00000\n        /...\n    /20170731\n    /20170801\n    /20170802\n    ...\n    /20170903\n```\n\nProvided a date e.g.20170801, I need to read in the files from folder `/data/20170801`, `/data/20170802`, ..., `/data/20170830`, but not others.\n\nSo to achieve this inside my python script, I searched online and finally arrived at the following solution.\n\n```py\nimport subprocess\n\ndir_in = \"/data\"\nargs = \"hdfs dfs -ls \"+dir_in+\" | awk '{print $8}'\"\nproc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n\ns_output, s_err = proc.communicate()\nall_dart_dirs = s_output.split()\n# ['/data/20170730', '/data/20170731', ...]\n```\n\nThen, so fit my specific needs, I just need to do a simple filtering for the list.\n\n\n\n\n\n\n\n","source":"_posts/get-list-of-hdfs-files-python.md","raw":"---\ntitle: Get a List of HDFS Files in Python\ndate: 2017-09-26 15:45:43\ntags: [spark, hadoop, python]\ncategories: Spark\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nIn an ad hoc work, I need to read in files in multiple HDFS directories based on a date range. \n\nThe HDFS data structure is like the following \n\n>```\n/data\n    /20170730\n        /part-00000\n        /...\n    /20170731\n    /20170801\n    /20170802\n    ...\n    /20170903\n```\n\nProvided a date e.g.20170801, I need to read in the files from folder `/data/20170801`, `/data/20170802`, ..., `/data/20170830`, but not others.\n\nSo to achieve this inside my python script, I searched online and finally arrived at the following solution.\n\n```py\nimport subprocess\n\ndir_in = \"/data\"\nargs = \"hdfs dfs -ls \"+dir_in+\" | awk '{print $8}'\"\nproc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=True)\n\ns_output, s_err = proc.communicate()\nall_dart_dirs = s_output.split()\n# ['/data/20170730', '/data/20170731', ...]\n```\n\nThen, so fit my specific needs, I just need to do a simple filtering for the list.\n\n\n\n\n\n\n\n","slug":"get-list-of-hdfs-files-python","published":1,"updated":"2017-09-26T10:26:11.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiup00090x1xc1m88dtm","content":"<p>In an ad hoc work, I need to read in files in multiple HDFS directories based on a date range. </p>\n<p>The HDFS data structure is like the following </p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/data</div><div class=\"line\">    /20170730</div><div class=\"line\">        /part-00000</div><div class=\"line\">        /...</div><div class=\"line\">    /20170731</div><div class=\"line\">    /20170801</div><div class=\"line\">    /20170802</div><div class=\"line\">    ...</div><div class=\"line\">    /20170903</div></pre></td></tr></table></figure>\n</blockquote>\n<p>Provided a date e.g.20170801, I need to read in the files from folder <code>/data/20170801</code>, <code>/data/20170802</code>, …, <code>/data/20170830</code>, but not others.</p>\n<p>So to achieve this inside my python script, I searched online and finally arrived at the following solution.</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"></div><div class=\"line\">dir_in = <span class=\"string\">\"/data\"</span></div><div class=\"line\">args = <span class=\"string\">\"hdfs dfs -ls \"</span>+dir_in+<span class=\"string\">\" | awk '&#123;print $8&#125;'\"</span></div><div class=\"line\">proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">s_output, s_err = proc.communicate()</div><div class=\"line\">all_dart_dirs = s_output.split()</div><div class=\"line\"><span class=\"comment\"># ['/data/20170730', '/data/20170731', ...]</span></div></pre></td></tr></table></figure>\n<p>Then, so fit my specific needs, I just need to do a simple filtering for the list.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>In an ad hoc work, I need to read in files in multiple HDFS directories based on a date range. </p>\n<p>The HDFS data structure is like the following </p>\n<blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">/data</div><div class=\"line\">    /20170730</div><div class=\"line\">        /part-00000</div><div class=\"line\">        /...</div><div class=\"line\">    /20170731</div><div class=\"line\">    /20170801</div><div class=\"line\">    /20170802</div><div class=\"line\">    ...</div><div class=\"line\">    /20170903</div></pre></td></tr></table></figure>\n</blockquote>\n<p>Provided a date e.g.20170801, I need to read in the files from folder <code>/data/20170801</code>, <code>/data/20170802</code>, …, <code>/data/20170830</code>, but not others.</p>\n<p>So to achieve this inside my python script, I searched online and finally arrived at the following solution.</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> subprocess</div><div class=\"line\"></div><div class=\"line\">dir_in = <span class=\"string\">\"/data\"</span></div><div class=\"line\">args = <span class=\"string\">\"hdfs dfs -ls \"</span>+dir_in+<span class=\"string\">\" | awk '&#123;print $8&#125;'\"</span></div><div class=\"line\">proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, shell=<span class=\"keyword\">True</span>)</div><div class=\"line\"></div><div class=\"line\">s_output, s_err = proc.communicate()</div><div class=\"line\">all_dart_dirs = s_output.split()</div><div class=\"line\"><span class=\"comment\"># ['/data/20170730', '/data/20170731', ...]</span></div></pre></td></tr></table></figure>\n<p>Then, so fit my specific needs, I just need to do a simple filtering for the list.</p>\n"},{"title":"Hexo User Notes |Hexo的基本使用","date":"2017-03-11T00:33:24.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\n使用Hexo的常用命令和一些格式上的小技巧。\n\n<!--more -->\n\n#### 基本命令\n1. `$ hexo new [layout] <title>` 创建一篇新文章。其中`layout`是可选参数，默认值是`post`。Hexo提供的`layout`在`scaffolds`目录下，也可以在此目录下自建`layout`文件。新建的文件则会保存到 `source/_post`目录下。你也可以更改默认布局的参数，如post布局，你需要打开 `scaffolds/post.md`，增加类别和描述。再新建一篇文章就能看到增加了文章参数。\n\n2. `$ hexo generate` 也可简写为`$ hexo g` 在部署前需要通过该命令把所有的文章做静态化处理，生成相应的html、javascript、css。\n\n3. `$ hexo deploy`也可简写为$ `hexo d` 负责生成静态文件后的发布。在发布到你的服务器之前要先配置好deploy指令，在全局配置文件(`_config.yml`)中找到deploy，并修改属性值。\n\n\n#### 在文章中加入图片\n要在文章中插入图片，有两个选择，一是使用图床，二是将图片与网页文件一起部署。两种方法各有利弊，如果打算部署到GitHub或GitCafe上，个人推荐使用图床。如果是部署到七牛上，则直接使用部署方式。\n\n\n#### 不在主页显示全部文章内容\n我们在编辑内容时，在合适的地方添加一行代码：`<!-- more -->`，在它之上是摘要，是在主页会显示的文字部分。在它之下是余下全文，在主页中会多一个阅读全文的按钮，点击后才会看到全部内容。\n\n#### 文章基本参数\n打开 `scaffolds/post.md` 增加类别和描述，修改默认布局的参数：\n\n```markdown post.md\n---\ntitle: #标题\ndate: #日期时间\ntags: #标签\ncategories: #分类\ncomments: #是否允许评论 true 或 false\ntoc: #是否添加文章目录 true 或 false\nthumbnail: #侧边栏封面图\nbanner: #文章顶部封面图\n---\n```\n在新建一篇文章，你就能看到新建的文章已经新增了这些参数，不用每次自己手打，不需要的值就可以空着。\n\n#### 代码高亮并为代码块添加标题\nMarkdown中插入代码，是通过添加三个反引号（`）或三个波浪号（~）来实现的。如下示例\n\n``` [language] \ncode here \n```\n像大多数的markdown, 如github的markdown都是这种写法。这种写法在[language]后面不能加其它参数，否则会输出不正常。\n\nHexo自带高亮：[Code Block](https://hexo.io/docs/tag-plugins.html#Code-Block)\n\n使用格式如下：\n\n```markdown\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n注意：如果使用静态的代码高亮，则必须关闭hexo自带高亮，关闭之后，如果以前的.md源文件使用的是hexo第二种插入代码的方式，则会导致`hexo-renderer-marked`渲染异常。\n\n\n#### 关于 Markdown 语法格式\n尽量使用规范的 Markdown 语法格式\n参考：http://www.cirosantilli.com/markdown-style-guide/#code\n\n","source":"_posts/hexo-user-notes.md","raw":"---\ntitle: Hexo User Notes |Hexo的基本使用\ndate: 2017-03-11 08:33:24\ntags: hexo\ncategories: Hexo \ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\n使用Hexo的常用命令和一些格式上的小技巧。\n\n<!--more -->\n\n#### 基本命令\n1. `$ hexo new [layout] <title>` 创建一篇新文章。其中`layout`是可选参数，默认值是`post`。Hexo提供的`layout`在`scaffolds`目录下，也可以在此目录下自建`layout`文件。新建的文件则会保存到 `source/_post`目录下。你也可以更改默认布局的参数，如post布局，你需要打开 `scaffolds/post.md`，增加类别和描述。再新建一篇文章就能看到增加了文章参数。\n\n2. `$ hexo generate` 也可简写为`$ hexo g` 在部署前需要通过该命令把所有的文章做静态化处理，生成相应的html、javascript、css。\n\n3. `$ hexo deploy`也可简写为$ `hexo d` 负责生成静态文件后的发布。在发布到你的服务器之前要先配置好deploy指令，在全局配置文件(`_config.yml`)中找到deploy，并修改属性值。\n\n\n#### 在文章中加入图片\n要在文章中插入图片，有两个选择，一是使用图床，二是将图片与网页文件一起部署。两种方法各有利弊，如果打算部署到GitHub或GitCafe上，个人推荐使用图床。如果是部署到七牛上，则直接使用部署方式。\n\n\n#### 不在主页显示全部文章内容\n我们在编辑内容时，在合适的地方添加一行代码：`<!-- more -->`，在它之上是摘要，是在主页会显示的文字部分。在它之下是余下全文，在主页中会多一个阅读全文的按钮，点击后才会看到全部内容。\n\n#### 文章基本参数\n打开 `scaffolds/post.md` 增加类别和描述，修改默认布局的参数：\n\n```markdown post.md\n---\ntitle: #标题\ndate: #日期时间\ntags: #标签\ncategories: #分类\ncomments: #是否允许评论 true 或 false\ntoc: #是否添加文章目录 true 或 false\nthumbnail: #侧边栏封面图\nbanner: #文章顶部封面图\n---\n```\n在新建一篇文章，你就能看到新建的文章已经新增了这些参数，不用每次自己手打，不需要的值就可以空着。\n\n#### 代码高亮并为代码块添加标题\nMarkdown中插入代码，是通过添加三个反引号（`）或三个波浪号（~）来实现的。如下示例\n\n``` [language] \ncode here \n```\n像大多数的markdown, 如github的markdown都是这种写法。这种写法在[language]后面不能加其它参数，否则会输出不正常。\n\nHexo自带高亮：[Code Block](https://hexo.io/docs/tag-plugins.html#Code-Block)\n\n使用格式如下：\n\n```markdown\n{% codeblock [title] [lang:language] [url] [link text] %}\ncode snippet\n{% endcodeblock %}\n```\n\n注意：如果使用静态的代码高亮，则必须关闭hexo自带高亮，关闭之后，如果以前的.md源文件使用的是hexo第二种插入代码的方式，则会导致`hexo-renderer-marked`渲染异常。\n\n\n#### 关于 Markdown 语法格式\n尽量使用规范的 Markdown 语法格式\n参考：http://www.cirosantilli.com/markdown-style-guide/#code\n\n","slug":"hexo-user-notes","published":1,"updated":"2017-03-19T03:10:29.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiuu000d0x1xu80zedsp","content":"<p>使用Hexo的常用命令和一些格式上的小技巧。</p>\n<a id=\"more\"></a>\n<h4 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h4><ol>\n<li><p><code>$ hexo new [layout] &lt;title&gt;</code> 创建一篇新文章。其中<code>layout</code>是可选参数，默认值是<code>post</code>。Hexo提供的<code>layout</code>在<code>scaffolds</code>目录下，也可以在此目录下自建<code>layout</code>文件。新建的文件则会保存到 <code>source/_post</code>目录下。你也可以更改默认布局的参数，如post布局，你需要打开 <code>scaffolds/post.md</code>，增加类别和描述。再新建一篇文章就能看到增加了文章参数。</p>\n</li>\n<li><p><code>$ hexo generate</code> 也可简写为<code>$ hexo g</code> 在部署前需要通过该命令把所有的文章做静态化处理，生成相应的html、javascript、css。</p>\n</li>\n<li><p><code>$ hexo deploy</code>也可简写为$ <code>hexo d</code> 负责生成静态文件后的发布。在发布到你的服务器之前要先配置好deploy指令，在全局配置文件(<code>_config.yml</code>)中找到deploy，并修改属性值。</p>\n</li>\n</ol>\n<h4 id=\"在文章中加入图片\"><a href=\"#在文章中加入图片\" class=\"headerlink\" title=\"在文章中加入图片\"></a>在文章中加入图片</h4><p>要在文章中插入图片，有两个选择，一是使用图床，二是将图片与网页文件一起部署。两种方法各有利弊，如果打算部署到GitHub或GitCafe上，个人推荐使用图床。如果是部署到七牛上，则直接使用部署方式。</p>\n<h4 id=\"不在主页显示全部文章内容\"><a href=\"#不在主页显示全部文章内容\" class=\"headerlink\" title=\"不在主页显示全部文章内容\"></a>不在主页显示全部文章内容</h4><p>我们在编辑内容时，在合适的地方添加一行代码：<code>&lt;!-- more --&gt;</code>，在它之上是摘要，是在主页会显示的文字部分。在它之下是余下全文，在主页中会多一个阅读全文的按钮，点击后才会看到全部内容。</p>\n<h4 id=\"文章基本参数\"><a href=\"#文章基本参数\" class=\"headerlink\" title=\"文章基本参数\"></a>文章基本参数</h4><p>打开 <code>scaffolds/post.md</code> 增加类别和描述，修改默认布局的参数：</p>\n<figure class=\"highlight markdown\"><figcaption><span>post.md</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: #标题</div><div class=\"line\">date: #日期时间</div><div class=\"line\">tags: #标签</div><div class=\"line\">categories: #分类</div><div class=\"line\">comments: #是否允许评论 true 或 false</div><div class=\"line\">toc: #是否添加文章目录 true 或 false</div><div class=\"line\">thumbnail: #侧边栏封面图</div><div class=\"line\">banner: #文章顶部封面图</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<p>在新建一篇文章，你就能看到新建的文章已经新增了这些参数，不用每次自己手打，不需要的值就可以空着。</p>\n<h4 id=\"代码高亮并为代码块添加标题\"><a href=\"#代码高亮并为代码块添加标题\" class=\"headerlink\" title=\"代码高亮并为代码块添加标题\"></a>代码高亮并为代码块添加标题</h4><p>Markdown中插入代码，是通过添加三个反引号（`）或三个波浪号（~）来实现的。如下示例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">code here</div></pre></td></tr></table></figure>\n<p>像大多数的markdown, 如github的markdown都是这种写法。这种写法在[language]后面不能加其它参数，否则会输出不正常。</p>\n<p>Hexo自带高亮：<a href=\"https://hexo.io/docs/tag-plugins.html#Code-Block\" target=\"_blank\" rel=\"external\">Code Block</a></p>\n<p>使用格式如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</div><div class=\"line\">code snippet</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<p>注意：如果使用静态的代码高亮，则必须关闭hexo自带高亮，关闭之后，如果以前的.md源文件使用的是hexo第二种插入代码的方式，则会导致<code>hexo-renderer-marked</code>渲染异常。</p>\n<h4 id=\"关于-Markdown-语法格式\"><a href=\"#关于-Markdown-语法格式\" class=\"headerlink\" title=\"关于 Markdown 语法格式\"></a>关于 Markdown 语法格式</h4><p>尽量使用规范的 Markdown 语法格式<br>参考：<a href=\"http://www.cirosantilli.com/markdown-style-guide/#code\" target=\"_blank\" rel=\"external\">http://www.cirosantilli.com/markdown-style-guide/#code</a></p>\n","site":{"data":{}},"excerpt":"<p>使用Hexo的常用命令和一些格式上的小技巧。</p>","more":"<h4 id=\"基本命令\"><a href=\"#基本命令\" class=\"headerlink\" title=\"基本命令\"></a>基本命令</h4><ol>\n<li><p><code>$ hexo new [layout] &lt;title&gt;</code> 创建一篇新文章。其中<code>layout</code>是可选参数，默认值是<code>post</code>。Hexo提供的<code>layout</code>在<code>scaffolds</code>目录下，也可以在此目录下自建<code>layout</code>文件。新建的文件则会保存到 <code>source/_post</code>目录下。你也可以更改默认布局的参数，如post布局，你需要打开 <code>scaffolds/post.md</code>，增加类别和描述。再新建一篇文章就能看到增加了文章参数。</p>\n</li>\n<li><p><code>$ hexo generate</code> 也可简写为<code>$ hexo g</code> 在部署前需要通过该命令把所有的文章做静态化处理，生成相应的html、javascript、css。</p>\n</li>\n<li><p><code>$ hexo deploy</code>也可简写为$ <code>hexo d</code> 负责生成静态文件后的发布。在发布到你的服务器之前要先配置好deploy指令，在全局配置文件(<code>_config.yml</code>)中找到deploy，并修改属性值。</p>\n</li>\n</ol>\n<h4 id=\"在文章中加入图片\"><a href=\"#在文章中加入图片\" class=\"headerlink\" title=\"在文章中加入图片\"></a>在文章中加入图片</h4><p>要在文章中插入图片，有两个选择，一是使用图床，二是将图片与网页文件一起部署。两种方法各有利弊，如果打算部署到GitHub或GitCafe上，个人推荐使用图床。如果是部署到七牛上，则直接使用部署方式。</p>\n<h4 id=\"不在主页显示全部文章内容\"><a href=\"#不在主页显示全部文章内容\" class=\"headerlink\" title=\"不在主页显示全部文章内容\"></a>不在主页显示全部文章内容</h4><p>我们在编辑内容时，在合适的地方添加一行代码：<code>&lt;!-- more --&gt;</code>，在它之上是摘要，是在主页会显示的文字部分。在它之下是余下全文，在主页中会多一个阅读全文的按钮，点击后才会看到全部内容。</p>\n<h4 id=\"文章基本参数\"><a href=\"#文章基本参数\" class=\"headerlink\" title=\"文章基本参数\"></a>文章基本参数</h4><p>打开 <code>scaffolds/post.md</code> 增加类别和描述，修改默认布局的参数：</p>\n<figure class=\"highlight markdown\"><figcaption><span>post.md</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: #标题</div><div class=\"line\">date: #日期时间</div><div class=\"line\">tags: #标签</div><div class=\"line\">categories: #分类</div><div class=\"line\">comments: #是否允许评论 true 或 false</div><div class=\"line\">toc: #是否添加文章目录 true 或 false</div><div class=\"line\">thumbnail: #侧边栏封面图</div><div class=\"line\">banner: #文章顶部封面图</div><div class=\"line\">---</div></pre></td></tr></table></figure>\n<p>在新建一篇文章，你就能看到新建的文章已经新增了这些参数，不用每次自己手打，不需要的值就可以空着。</p>\n<h4 id=\"代码高亮并为代码块添加标题\"><a href=\"#代码高亮并为代码块添加标题\" class=\"headerlink\" title=\"代码高亮并为代码块添加标题\"></a>代码高亮并为代码块添加标题</h4><p>Markdown中插入代码，是通过添加三个反引号（`）或三个波浪号（~）来实现的。如下示例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">code here</div></pre></td></tr></table></figure>\n<p>像大多数的markdown, 如github的markdown都是这种写法。这种写法在[language]后面不能加其它参数，否则会输出不正常。</p>\n<p>Hexo自带高亮：<a href=\"https://hexo.io/docs/tag-plugins.html#Code-Block\" target=\"_blank\" rel=\"external\">Code Block</a></p>\n<p>使用格式如下：</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</div><div class=\"line\">code snippet</div><div class=\"line\">&#123;% endcodeblock %&#125;</div></pre></td></tr></table></figure>\n<p>注意：如果使用静态的代码高亮，则必须关闭hexo自带高亮，关闭之后，如果以前的.md源文件使用的是hexo第二种插入代码的方式，则会导致<code>hexo-renderer-marked</code>渲染异常。</p>\n<h4 id=\"关于-Markdown-语法格式\"><a href=\"#关于-Markdown-语法格式\" class=\"headerlink\" title=\"关于 Markdown 语法格式\"></a>关于 Markdown 语法格式</h4><p>尽量使用规范的 Markdown 语法格式<br>参考：<a href=\"http://www.cirosantilli.com/markdown-style-guide/#code\" target=\"_blank\" rel=\"external\">http://www.cirosantilli.com/markdown-style-guide/#code</a></p>"},{"title":"Image Hosting and HTTPS |图床与HTTPS","date":"2017-03-17T07:53:45.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"Use images hosting service with HTTPS connections.\n把图片放到支持HTTPS链接的图床平台上。\n\n<!-- more -->\n### 前言\n前几天把网站改到用HTTPS安全链接。\n<img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\" >\n<img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\" >\n\n又想到一个任务是把博客的图片从Hexo `asset folder`加载模式改到用图床模式。这样一来有两个好处：\n\n- 博客文章越来越多的时候hexo文件数会减半。因为之前的方式会给每篇post新建一个folder来放所有的图片等媒体\n- 不会占用Digital Ocean的空间。购买的贫农级服务空间有限，能少用就少用点吧。\n\n哦当然，要是用免费的图床服务啊。。有可能图床提供商整个服务崩掉。。那就没有然后了。。\n\n### Https 与小绿锁\n\n按照前一篇笔记的流程给网站加了证书之后，浏览器中并不一定会显示可爱的小绿锁。为什么？因为网站可以还引用了别的 HTTP 资源，比如 js、css、图片、等等。必须全站资源均是 HTTPS，才会在浏览器地址显示小绿锁。（我当时主页面用`http://fonts...`\n来引用Google Fonts，就不行。在文件里把链接改为`://fonts...`之后就好了。）\n\n### 图床选择\n所以之前看到很多网上攻略用七牛的图床，但是经过多看多查，发现七牛的免费流量只支持HTTP，而HTTPS流量是要付费的。\n来搜集一下支持HTTPS的免费图床：\n\n- [imgur](https://imgur.com/)\n- [sm.ms](https://sm.ms/) （5MB limit）\n- [postimage.io](https://postimage.io/) （无需注册）\n- [牛图网](https://www.niupic.com/) （无需注册）\n\n\n","source":"_posts/image-hosting-and-https.md","raw":"---\ntitle: Image Hosting and HTTPS |图床与HTTPS\ndate: 2017-03-17 15:53:45\ntags: website dev\ncategories: Website Dev\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\nUse images hosting service with HTTPS connections.\n把图片放到支持HTTPS链接的图床平台上。\n\n<!-- more -->\n### 前言\n前几天把网站改到用HTTPS安全链接。\n<img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\" >\n<img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\" >\n\n又想到一个任务是把博客的图片从Hexo `asset folder`加载模式改到用图床模式。这样一来有两个好处：\n\n- 博客文章越来越多的时候hexo文件数会减半。因为之前的方式会给每篇post新建一个folder来放所有的图片等媒体\n- 不会占用Digital Ocean的空间。购买的贫农级服务空间有限，能少用就少用点吧。\n\n哦当然，要是用免费的图床服务啊。。有可能图床提供商整个服务崩掉。。那就没有然后了。。\n\n### Https 与小绿锁\n\n按照前一篇笔记的流程给网站加了证书之后，浏览器中并不一定会显示可爱的小绿锁。为什么？因为网站可以还引用了别的 HTTP 资源，比如 js、css、图片、等等。必须全站资源均是 HTTPS，才会在浏览器地址显示小绿锁。（我当时主页面用`http://fonts...`\n来引用Google Fonts，就不行。在文件里把链接改为`://fonts...`之后就好了。）\n\n### 图床选择\n所以之前看到很多网上攻略用七牛的图床，但是经过多看多查，发现七牛的免费流量只支持HTTP，而HTTPS流量是要付费的。\n来搜集一下支持HTTPS的免费图床：\n\n- [imgur](https://imgur.com/)\n- [sm.ms](https://sm.ms/) （5MB limit）\n- [postimage.io](https://postimage.io/) （无需注册）\n- [牛图网](https://www.niupic.com/) （无需注册）\n\n\n","slug":"image-hosting-and-https","published":1,"updated":"2017-03-19T08:17:08.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiux000e0x1xc639ie82","content":"<p>Use images hosting service with HTTPS connections.<br>把图片放到支持HTTPS链接的图床平台上。</p>\n<a id=\"more\"></a>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>前几天把网站改到用HTTPS安全链接。<br><img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\"><br><img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\"></p>\n<p>又想到一个任务是把博客的图片从Hexo <code>asset folder</code>加载模式改到用图床模式。这样一来有两个好处：</p>\n<ul>\n<li>博客文章越来越多的时候hexo文件数会减半。因为之前的方式会给每篇post新建一个folder来放所有的图片等媒体</li>\n<li>不会占用Digital Ocean的空间。购买的贫农级服务空间有限，能少用就少用点吧。</li>\n</ul>\n<p>哦当然，要是用免费的图床服务啊。。有可能图床提供商整个服务崩掉。。那就没有然后了。。</p>\n<h3 id=\"Https-与小绿锁\"><a href=\"#Https-与小绿锁\" class=\"headerlink\" title=\"Https 与小绿锁\"></a>Https 与小绿锁</h3><p>按照前一篇笔记的流程给网站加了证书之后，浏览器中并不一定会显示可爱的小绿锁。为什么？因为网站可以还引用了别的 HTTP 资源，比如 js、css、图片、等等。必须全站资源均是 HTTPS，才会在浏览器地址显示小绿锁。（我当时主页面用<code>http://fonts...</code><br>来引用Google Fonts，就不行。在文件里把链接改为<code>://fonts...</code>之后就好了。）</p>\n<h3 id=\"图床选择\"><a href=\"#图床选择\" class=\"headerlink\" title=\"图床选择\"></a>图床选择</h3><p>所以之前看到很多网上攻略用七牛的图床，但是经过多看多查，发现七牛的免费流量只支持HTTP，而HTTPS流量是要付费的。<br>来搜集一下支持HTTPS的免费图床：</p>\n<ul>\n<li><a href=\"https://imgur.com/\" target=\"_blank\" rel=\"external\">imgur</a></li>\n<li><a href=\"https://sm.ms/\" target=\"_blank\" rel=\"external\">sm.ms</a> （5MB limit）</li>\n<li><a href=\"https://postimage.io/\" target=\"_blank\" rel=\"external\">postimage.io</a> （无需注册）</li>\n<li><a href=\"https://www.niupic.com/\" target=\"_blank\" rel=\"external\">牛图网</a> （无需注册）</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Use images hosting service with HTTPS connections.<br>把图片放到支持HTTPS链接的图床平台上。</p>","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>前几天把网站改到用HTTPS安全链接。<br><img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\"><br><img src=\"https://imgur.com/L1lbdd0.jpg\" class=\"img-shadow\"></p>\n<p>又想到一个任务是把博客的图片从Hexo <code>asset folder</code>加载模式改到用图床模式。这样一来有两个好处：</p>\n<ul>\n<li>博客文章越来越多的时候hexo文件数会减半。因为之前的方式会给每篇post新建一个folder来放所有的图片等媒体</li>\n<li>不会占用Digital Ocean的空间。购买的贫农级服务空间有限，能少用就少用点吧。</li>\n</ul>\n<p>哦当然，要是用免费的图床服务啊。。有可能图床提供商整个服务崩掉。。那就没有然后了。。</p>\n<h3 id=\"Https-与小绿锁\"><a href=\"#Https-与小绿锁\" class=\"headerlink\" title=\"Https 与小绿锁\"></a>Https 与小绿锁</h3><p>按照前一篇笔记的流程给网站加了证书之后，浏览器中并不一定会显示可爱的小绿锁。为什么？因为网站可以还引用了别的 HTTP 资源，比如 js、css、图片、等等。必须全站资源均是 HTTPS，才会在浏览器地址显示小绿锁。（我当时主页面用<code>http://fonts...</code><br>来引用Google Fonts，就不行。在文件里把链接改为<code>://fonts...</code>之后就好了。）</p>\n<h3 id=\"图床选择\"><a href=\"#图床选择\" class=\"headerlink\" title=\"图床选择\"></a>图床选择</h3><p>所以之前看到很多网上攻略用七牛的图床，但是经过多看多查，发现七牛的免费流量只支持HTTP，而HTTPS流量是要付费的。<br>来搜集一下支持HTTPS的免费图床：</p>\n<ul>\n<li><a href=\"https://imgur.com/\" target=\"_blank\" rel=\"external\">imgur</a></li>\n<li><a href=\"https://sm.ms/\" target=\"_blank\" rel=\"external\">sm.ms</a> （5MB limit）</li>\n<li><a href=\"https://postimage.io/\" target=\"_blank\" rel=\"external\">postimage.io</a> （无需注册）</li>\n<li><a href=\"https://www.niupic.com/\" target=\"_blank\" rel=\"external\">牛图网</a> （无需注册）</li>\n</ul>"},{"title":"Blockchain and Supply Chain |区块链在供应物流领域的应用","date":"2017-02-10T02:48:35.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\n总结供应链领域目前的痛点和区块链的现有应有方向。\n\n<!-- more -->\n### 前言\n供应链是一个由物流、信息流、资金流所共同组成的,并将行业内的供应商、制造商、分销商、零售商、用户串联在一起的复杂结构。而区块链技术作为一种大规模的协作工具,天然地适合运用于供应链管理。\n\n**痛点**\n供应链由众多参与主体构成, 不同的主体之间必然存在大量的交互和协作, 而整个供应链运行过程中产生的各类信息被离散地保存在各个环节各自的系统内,信息流缺乏透明度。这会带来两类严重的问题:一是因为信息不透明、不流畅导致链条上的各参与主体难以准确了解相关事项的状况及存在的问题, 从而影响供应链的效率;二是当供应链各主体间出现纠 纷时, 举证和追责均耗时费力, 甚至在有些情况下变得不可行。随着经济 全球化的快速推进, 企业必须在越来越大的范围内拓展市场, 因此, 供应链管理中的物流环节往往表现出多区域、长时间跨度的特征, 使得假冒伪劣产品这样的难题很难彻底消除。\n\n**基于区块链的解决思路**\r首先,区块链技术能使得数据在交易各方之间公开透明,从而在整个供应链条上形成一个完整且流畅的信息流,这可确保参与各方及时发现供 应链系统运行过程中存在的问题,并针对性地找到解决问题的方法,进而提升供应链管理的整体效率。其次,区块链所具有的数据不可篡改和时间戳的存在性证明的特质能很好地运用于解决供应链体系内各参与主体之间的纠纷,实现轻松举证与追责。最后,数据不可篡改与交易可追溯两大特性相结合可根除供应链内产品流转过程中的假冒伪劣问题。\n\n### 应用方向\n\n1. 商品流和资金流的同步  \nThe direction IBM and many other in finance are going is to look at permissioned ledgers connecting companies that know and (within limits) trust each other. The blockchain could allow companies to transact, resolve disputes and settle more efficiently than current practices.\n2. 溯源防伪  \n用户拿到选购的生鲜商品，扫码即可追溯到它产地、采购、加工、储运等完整流程中的真实信息，而且这些信息无法篡改，让消费者吃得放心;\n用户购买了钻石饰品，通过其中内置的NFC芯片能了解它从生产、物流、门店甚至海关的完整记录，由于身份绝对的唯一性，一旦有非法的交易活动或是欺诈造假的行为，就会被侦测出来。此外,区块链技术也可用于药品、艺术品、收藏品、奢侈品等的溯源防伪\n3. 物流：利用数字签名和公私钥加解密机制,可以充分保证 信息安全以及寄、收件人的隐私。  \n在物流过程中, 利用数字签名和公私钥加解密机制, 可以充分保证 信息安全以及寄、收件人的隐私。例如, 快递交接需要双方私钥签名,每个快递员或快递点都有自己的私钥,是否签收或交付只需要查一下区块链即可。最终用户没有收到快递就不会有签收记录, 快递员无法伪造签名, 因此可杜绝快递员通过伪造签名来逃避考核的行为, 减少用户投诉, 防止 货物的冒领误领。而真正的收件人并不需要在快递单上直观展示实名制信息, 由于安全隐私有保障,所以更多人愿意接受实名制, 从而促进国家物流实名制的落实。另外,利用区块链技术,通过智能合约能够简化物流程序和大幅度提升物流的效率。\n\n\n### 现有公司\n- [Everledger](http://www.everledger.io/), which traces diamonds to digitally certify that they comply with the Kimberly Process, uses IBM’s cloud-based blockchain solution.\n- [Provenance](https://www.provenance.org/whitepaper) \n\n- [云象(YunPhant)](http://www.yunphant.com/) 是超级账本（hyperledger）项目成员之一，是全球领先的区块链技术公司。云象区块链依托浙江大学智能计算与系统实验室，新加坡国立大学云象联合实验室，拥有多位计算机博士、硕士，致力于打造全球领先的企业级联盟链技术平台。\n由Roger Zimmermann教授和刘振广博士带领的新加坡国立大学云象联合实验室也在着力研究新型的区块链数据库，以达到一百万次每秒的交易速度，且已取得了第一阶段成果。由陈积明教授（长江学者）和何钦铭教授带领的浙江大学云象团队在安全和智能合约方向也取得了丰硕成果。\n云象与美国iBlockChain在深圳成立的区块链合资公司是前海区块链国际生态圈联盟秘书长单位，同时云象也是中关村区块链产业联盟成员\n<img src=\"https://s15.postimg.org/6cx0gbh23/14898918353591.jpg\" class=\"img-shadow\">\n\n### 供应链/贸易金融流程自动化的步骤\n1.“将纸质信用证转换成可以自动执行支付的智能合约（transforming letters of credit to smart contracts with automated payments）”；\n\n2.“将提单等纸质文件数字化，并以元数据的形式储存它们（digitizing printed documents, such as bills of lading and storing them as metadata）”；\n\n3.“在每一步创建所有权记录（creating a record of ownership in each step）”\n\nPayments in a supply chain can be triggered by a certain, predefined action, occurring at any point in time.\nIn general this works as follows: two parties agree to trade goods, and the selling party receives via his wallet a confirmation that he will be paid at a certain point if time. This guarantee is conditional, based on predefined criteria. The container with the goods contains a QR code, this is linked to a smart contract. When the goods arrive at the agreed point, and the pre-defined criteria are met, the smart contract is executed.\nThis triggers the transfer of ownership to the buyer and payment to the supplier is executed automatically. The great advantage is that when the structure is set up, the costs for a transaction are minimal. They are comparable to physical mail (for example €1 per letter) versus e-mail (a negligible cost per item).\n\n### 难点和挑战\n\n1. 政策：即使你创建了一个表面上看似严格的智能合约,也可以有一个传统的实体法律机构并不会承认交易进行的方式(例如,交易必须继续采用纸质的形式).\n2. 数据源：The main challenge, is setting up technology for farmers, field workers and others to collect data and insert it onto a blockchain.\n3. 迭代：It is not very easy to insert [a] new technology inside established supply chain systems because the integration challenges are not to be underestimated\n\n### Reference Link\nhttp://link.springer.com/chapter/10.1007/978-3-319-45348-4_19\nhttp://ieeexplore.ieee.org/abstract/document/7538424/?part=1\n\n\n\n","source":"_posts/blockchain-and-supply-chain.md","raw":"---\ntitle: Blockchain and Supply Chain |区块链在供应物流领域的应用\ndate: 2017-02-10 10:48:35\ntags: blockchain\ncategories: Blockchain\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\n总结供应链领域目前的痛点和区块链的现有应有方向。\n\n<!-- more -->\n### 前言\n供应链是一个由物流、信息流、资金流所共同组成的,并将行业内的供应商、制造商、分销商、零售商、用户串联在一起的复杂结构。而区块链技术作为一种大规模的协作工具,天然地适合运用于供应链管理。\n\n**痛点**\n供应链由众多参与主体构成, 不同的主体之间必然存在大量的交互和协作, 而整个供应链运行过程中产生的各类信息被离散地保存在各个环节各自的系统内,信息流缺乏透明度。这会带来两类严重的问题:一是因为信息不透明、不流畅导致链条上的各参与主体难以准确了解相关事项的状况及存在的问题, 从而影响供应链的效率;二是当供应链各主体间出现纠 纷时, 举证和追责均耗时费力, 甚至在有些情况下变得不可行。随着经济 全球化的快速推进, 企业必须在越来越大的范围内拓展市场, 因此, 供应链管理中的物流环节往往表现出多区域、长时间跨度的特征, 使得假冒伪劣产品这样的难题很难彻底消除。\n\n**基于区块链的解决思路**\r首先,区块链技术能使得数据在交易各方之间公开透明,从而在整个供应链条上形成一个完整且流畅的信息流,这可确保参与各方及时发现供 应链系统运行过程中存在的问题,并针对性地找到解决问题的方法,进而提升供应链管理的整体效率。其次,区块链所具有的数据不可篡改和时间戳的存在性证明的特质能很好地运用于解决供应链体系内各参与主体之间的纠纷,实现轻松举证与追责。最后,数据不可篡改与交易可追溯两大特性相结合可根除供应链内产品流转过程中的假冒伪劣问题。\n\n### 应用方向\n\n1. 商品流和资金流的同步  \nThe direction IBM and many other in finance are going is to look at permissioned ledgers connecting companies that know and (within limits) trust each other. The blockchain could allow companies to transact, resolve disputes and settle more efficiently than current practices.\n2. 溯源防伪  \n用户拿到选购的生鲜商品，扫码即可追溯到它产地、采购、加工、储运等完整流程中的真实信息，而且这些信息无法篡改，让消费者吃得放心;\n用户购买了钻石饰品，通过其中内置的NFC芯片能了解它从生产、物流、门店甚至海关的完整记录，由于身份绝对的唯一性，一旦有非法的交易活动或是欺诈造假的行为，就会被侦测出来。此外,区块链技术也可用于药品、艺术品、收藏品、奢侈品等的溯源防伪\n3. 物流：利用数字签名和公私钥加解密机制,可以充分保证 信息安全以及寄、收件人的隐私。  \n在物流过程中, 利用数字签名和公私钥加解密机制, 可以充分保证 信息安全以及寄、收件人的隐私。例如, 快递交接需要双方私钥签名,每个快递员或快递点都有自己的私钥,是否签收或交付只需要查一下区块链即可。最终用户没有收到快递就不会有签收记录, 快递员无法伪造签名, 因此可杜绝快递员通过伪造签名来逃避考核的行为, 减少用户投诉, 防止 货物的冒领误领。而真正的收件人并不需要在快递单上直观展示实名制信息, 由于安全隐私有保障,所以更多人愿意接受实名制, 从而促进国家物流实名制的落实。另外,利用区块链技术,通过智能合约能够简化物流程序和大幅度提升物流的效率。\n\n\n### 现有公司\n- [Everledger](http://www.everledger.io/), which traces diamonds to digitally certify that they comply with the Kimberly Process, uses IBM’s cloud-based blockchain solution.\n- [Provenance](https://www.provenance.org/whitepaper) \n\n- [云象(YunPhant)](http://www.yunphant.com/) 是超级账本（hyperledger）项目成员之一，是全球领先的区块链技术公司。云象区块链依托浙江大学智能计算与系统实验室，新加坡国立大学云象联合实验室，拥有多位计算机博士、硕士，致力于打造全球领先的企业级联盟链技术平台。\n由Roger Zimmermann教授和刘振广博士带领的新加坡国立大学云象联合实验室也在着力研究新型的区块链数据库，以达到一百万次每秒的交易速度，且已取得了第一阶段成果。由陈积明教授（长江学者）和何钦铭教授带领的浙江大学云象团队在安全和智能合约方向也取得了丰硕成果。\n云象与美国iBlockChain在深圳成立的区块链合资公司是前海区块链国际生态圈联盟秘书长单位，同时云象也是中关村区块链产业联盟成员\n<img src=\"https://s15.postimg.org/6cx0gbh23/14898918353591.jpg\" class=\"img-shadow\">\n\n### 供应链/贸易金融流程自动化的步骤\n1.“将纸质信用证转换成可以自动执行支付的智能合约（transforming letters of credit to smart contracts with automated payments）”；\n\n2.“将提单等纸质文件数字化，并以元数据的形式储存它们（digitizing printed documents, such as bills of lading and storing them as metadata）”；\n\n3.“在每一步创建所有权记录（creating a record of ownership in each step）”\n\nPayments in a supply chain can be triggered by a certain, predefined action, occurring at any point in time.\nIn general this works as follows: two parties agree to trade goods, and the selling party receives via his wallet a confirmation that he will be paid at a certain point if time. This guarantee is conditional, based on predefined criteria. The container with the goods contains a QR code, this is linked to a smart contract. When the goods arrive at the agreed point, and the pre-defined criteria are met, the smart contract is executed.\nThis triggers the transfer of ownership to the buyer and payment to the supplier is executed automatically. The great advantage is that when the structure is set up, the costs for a transaction are minimal. They are comparable to physical mail (for example €1 per letter) versus e-mail (a negligible cost per item).\n\n### 难点和挑战\n\n1. 政策：即使你创建了一个表面上看似严格的智能合约,也可以有一个传统的实体法律机构并不会承认交易进行的方式(例如,交易必须继续采用纸质的形式).\n2. 数据源：The main challenge, is setting up technology for farmers, field workers and others to collect data and insert it onto a blockchain.\n3. 迭代：It is not very easy to insert [a] new technology inside established supply chain systems because the integration challenges are not to be underestimated\n\n### Reference Link\nhttp://link.springer.com/chapter/10.1007/978-3-319-45348-4_19\nhttp://ieeexplore.ieee.org/abstract/document/7538424/?part=1\n\n\n\n","slug":"blockchain-and-supply-chain","published":1,"updated":"2017-03-19T08:19:26.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiv0000j0x1xlirub5e4","content":"<p>总结供应链领域目前的痛点和区块链的现有应有方向。</p>\n<a id=\"more\"></a>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>供应链是一个由物流、信息流、资金流所共同组成的,并将行业内的供应商、制造商、分销商、零售商、用户串联在一起的复杂结构。而区块链技术作为一种大规模的协作工具,天然地适合运用于供应链管理。</p>\n<p><strong>痛点</strong><br>供应链由众多参与主体构成, 不同的主体之间必然存在大量的交互和协作, 而整个供应链运行过程中产生的各类信息被离散地保存在各个环节各自的系统内,信息流缺乏透明度。这会带来两类严重的问题:一是因为信息不透明、不流畅导致链条上的各参与主体难以准确了解相关事项的状况及存在的问题, 从而影响供应链的效率;二是当供应链各主体间出现纠 纷时, 举证和追责均耗时费力, 甚至在有些情况下变得不可行。随着经济 全球化的快速推进, 企业必须在越来越大的范围内拓展市场, 因此, 供应链管理中的物流环节往往表现出多区域、长时间跨度的特征, 使得假冒伪劣产品这样的难题很难彻底消除。</p>\n<p><strong>基于区块链的解决思路</strong><br>首先,区块链技术能使得数据在交易各方之间公开透明,从而在整个供应链条上形成一个完整且流畅的信息流,这可确保参与各方及时发现供 应链系统运行过程中存在的问题,并针对性地找到解决问题的方法,进而提升供应链管理的整体效率。其次,区块链所具有的数据不可篡改和时间戳的存在性证明的特质能很好地运用于解决供应链体系内各参与主体之间的纠纷,实现轻松举证与追责。最后,数据不可篡改与交易可追溯两大特性相结合可根除供应链内产品流转过程中的假冒伪劣问题。</p>\n<h3 id=\"应用方向\"><a href=\"#应用方向\" class=\"headerlink\" title=\"应用方向\"></a>应用方向</h3><ol>\n<li>商品流和资金流的同步<br>The direction IBM and many other in finance are going is to look at permissioned ledgers connecting companies that know and (within limits) trust each other. The blockchain could allow companies to transact, resolve disputes and settle more efficiently than current practices.</li>\n<li>溯源防伪<br>用户拿到选购的生鲜商品，扫码即可追溯到它产地、采购、加工、储运等完整流程中的真实信息，而且这些信息无法篡改，让消费者吃得放心;<br>用户购买了钻石饰品，通过其中内置的NFC芯片能了解它从生产、物流、门店甚至海关的完整记录，由于身份绝对的唯一性，一旦有非法的交易活动或是欺诈造假的行为，就会被侦测出来。此外,区块链技术也可用于药品、艺术品、收藏品、奢侈品等的溯源防伪</li>\n<li>物流：利用数字签名和公私钥加解密机制,可以充分保证 信息安全以及寄、收件人的隐私。<br>在物流过程中, 利用数字签名和公私钥加解密机制, 可以充分保证 信息安全以及寄、收件人的隐私。例如, 快递交接需要双方私钥签名,每个快递员或快递点都有自己的私钥,是否签收或交付只需要查一下区块链即可。最终用户没有收到快递就不会有签收记录, 快递员无法伪造签名, 因此可杜绝快递员通过伪造签名来逃避考核的行为, 减少用户投诉, 防止 货物的冒领误领。而真正的收件人并不需要在快递单上直观展示实名制信息, 由于安全隐私有保障,所以更多人愿意接受实名制, 从而促进国家物流实名制的落实。另外,利用区块链技术,通过智能合约能够简化物流程序和大幅度提升物流的效率。</li>\n</ol>\n<h3 id=\"现有公司\"><a href=\"#现有公司\" class=\"headerlink\" title=\"现有公司\"></a>现有公司</h3><ul>\n<li><a href=\"http://www.everledger.io/\" target=\"_blank\" rel=\"external\">Everledger</a>, which traces diamonds to digitally certify that they comply with the Kimberly Process, uses IBM’s cloud-based blockchain solution.</li>\n<li><p><a href=\"https://www.provenance.org/whitepaper\" target=\"_blank\" rel=\"external\">Provenance</a> </p>\n</li>\n<li><p><a href=\"http://www.yunphant.com/\" target=\"_blank\" rel=\"external\">云象(YunPhant)</a> 是超级账本（hyperledger）项目成员之一，是全球领先的区块链技术公司。云象区块链依托浙江大学智能计算与系统实验室，新加坡国立大学云象联合实验室，拥有多位计算机博士、硕士，致力于打造全球领先的企业级联盟链技术平台。<br>由Roger Zimmermann教授和刘振广博士带领的新加坡国立大学云象联合实验室也在着力研究新型的区块链数据库，以达到一百万次每秒的交易速度，且已取得了第一阶段成果。由陈积明教授（长江学者）和何钦铭教授带领的浙江大学云象团队在安全和智能合约方向也取得了丰硕成果。<br>云象与美国iBlockChain在深圳成立的区块链合资公司是前海区块链国际生态圈联盟秘书长单位，同时云象也是中关村区块链产业联盟成员<br><img src=\"https://s15.postimg.org/6cx0gbh23/14898918353591.jpg\" class=\"img-shadow\"></p>\n</li>\n</ul>\n<h3 id=\"供应链-贸易金融流程自动化的步骤\"><a href=\"#供应链-贸易金融流程自动化的步骤\" class=\"headerlink\" title=\"供应链/贸易金融流程自动化的步骤\"></a>供应链/贸易金融流程自动化的步骤</h3><p>1.“将纸质信用证转换成可以自动执行支付的智能合约（transforming letters of credit to smart contracts with automated payments）”；</p>\n<p>2.“将提单等纸质文件数字化，并以元数据的形式储存它们（digitizing printed documents, such as bills of lading and storing them as metadata）”；</p>\n<p>3.“在每一步创建所有权记录（creating a record of ownership in each step）”</p>\n<p>Payments in a supply chain can be triggered by a certain, predefined action, occurring at any point in time.<br>In general this works as follows: two parties agree to trade goods, and the selling party receives via his wallet a confirmation that he will be paid at a certain point if time. This guarantee is conditional, based on predefined criteria. The container with the goods contains a QR code, this is linked to a smart contract. When the goods arrive at the agreed point, and the pre-defined criteria are met, the smart contract is executed.<br>This triggers the transfer of ownership to the buyer and payment to the supplier is executed automatically. The great advantage is that when the structure is set up, the costs for a transaction are minimal. They are comparable to physical mail (for example €1 per letter) versus e-mail (a negligible cost per item).</p>\n<h3 id=\"难点和挑战\"><a href=\"#难点和挑战\" class=\"headerlink\" title=\"难点和挑战\"></a>难点和挑战</h3><ol>\n<li>政策：即使你创建了一个表面上看似严格的智能合约,也可以有一个传统的实体法律机构并不会承认交易进行的方式(例如,交易必须继续采用纸质的形式).</li>\n<li>数据源：The main challenge, is setting up technology for farmers, field workers and others to collect data and insert it onto a blockchain.</li>\n<li>迭代：It is not very easy to insert [a] new technology inside established supply chain systems because the integration challenges are not to be underestimated</li>\n</ol>\n<h3 id=\"Reference-Link\"><a href=\"#Reference-Link\" class=\"headerlink\" title=\"Reference Link\"></a>Reference Link</h3><p><a href=\"http://link.springer.com/chapter/10.1007/978-3-319-45348-4_19\" target=\"_blank\" rel=\"external\">http://link.springer.com/chapter/10.1007/978-3-319-45348-4_19</a><br><a href=\"http://ieeexplore.ieee.org/abstract/document/7538424/?part=1\" target=\"_blank\" rel=\"external\">http://ieeexplore.ieee.org/abstract/document/7538424/?part=1</a></p>\n","site":{"data":{}},"excerpt":"<p>总结供应链领域目前的痛点和区块链的现有应有方向。</p>","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>供应链是一个由物流、信息流、资金流所共同组成的,并将行业内的供应商、制造商、分销商、零售商、用户串联在一起的复杂结构。而区块链技术作为一种大规模的协作工具,天然地适合运用于供应链管理。</p>\n<p><strong>痛点</strong><br>供应链由众多参与主体构成, 不同的主体之间必然存在大量的交互和协作, 而整个供应链运行过程中产生的各类信息被离散地保存在各个环节各自的系统内,信息流缺乏透明度。这会带来两类严重的问题:一是因为信息不透明、不流畅导致链条上的各参与主体难以准确了解相关事项的状况及存在的问题, 从而影响供应链的效率;二是当供应链各主体间出现纠 纷时, 举证和追责均耗时费力, 甚至在有些情况下变得不可行。随着经济 全球化的快速推进, 企业必须在越来越大的范围内拓展市场, 因此, 供应链管理中的物流环节往往表现出多区域、长时间跨度的特征, 使得假冒伪劣产品这样的难题很难彻底消除。</p>\n<p><strong>基于区块链的解决思路</strong><br>首先,区块链技术能使得数据在交易各方之间公开透明,从而在整个供应链条上形成一个完整且流畅的信息流,这可确保参与各方及时发现供 应链系统运行过程中存在的问题,并针对性地找到解决问题的方法,进而提升供应链管理的整体效率。其次,区块链所具有的数据不可篡改和时间戳的存在性证明的特质能很好地运用于解决供应链体系内各参与主体之间的纠纷,实现轻松举证与追责。最后,数据不可篡改与交易可追溯两大特性相结合可根除供应链内产品流转过程中的假冒伪劣问题。</p>\n<h3 id=\"应用方向\"><a href=\"#应用方向\" class=\"headerlink\" title=\"应用方向\"></a>应用方向</h3><ol>\n<li>商品流和资金流的同步<br>The direction IBM and many other in finance are going is to look at permissioned ledgers connecting companies that know and (within limits) trust each other. The blockchain could allow companies to transact, resolve disputes and settle more efficiently than current practices.</li>\n<li>溯源防伪<br>用户拿到选购的生鲜商品，扫码即可追溯到它产地、采购、加工、储运等完整流程中的真实信息，而且这些信息无法篡改，让消费者吃得放心;<br>用户购买了钻石饰品，通过其中内置的NFC芯片能了解它从生产、物流、门店甚至海关的完整记录，由于身份绝对的唯一性，一旦有非法的交易活动或是欺诈造假的行为，就会被侦测出来。此外,区块链技术也可用于药品、艺术品、收藏品、奢侈品等的溯源防伪</li>\n<li>物流：利用数字签名和公私钥加解密机制,可以充分保证 信息安全以及寄、收件人的隐私。<br>在物流过程中, 利用数字签名和公私钥加解密机制, 可以充分保证 信息安全以及寄、收件人的隐私。例如, 快递交接需要双方私钥签名,每个快递员或快递点都有自己的私钥,是否签收或交付只需要查一下区块链即可。最终用户没有收到快递就不会有签收记录, 快递员无法伪造签名, 因此可杜绝快递员通过伪造签名来逃避考核的行为, 减少用户投诉, 防止 货物的冒领误领。而真正的收件人并不需要在快递单上直观展示实名制信息, 由于安全隐私有保障,所以更多人愿意接受实名制, 从而促进国家物流实名制的落实。另外,利用区块链技术,通过智能合约能够简化物流程序和大幅度提升物流的效率。</li>\n</ol>\n<h3 id=\"现有公司\"><a href=\"#现有公司\" class=\"headerlink\" title=\"现有公司\"></a>现有公司</h3><ul>\n<li><a href=\"http://www.everledger.io/\" target=\"_blank\" rel=\"external\">Everledger</a>, which traces diamonds to digitally certify that they comply with the Kimberly Process, uses IBM’s cloud-based blockchain solution.</li>\n<li><p><a href=\"https://www.provenance.org/whitepaper\" target=\"_blank\" rel=\"external\">Provenance</a> </p>\n</li>\n<li><p><a href=\"http://www.yunphant.com/\" target=\"_blank\" rel=\"external\">云象(YunPhant)</a> 是超级账本（hyperledger）项目成员之一，是全球领先的区块链技术公司。云象区块链依托浙江大学智能计算与系统实验室，新加坡国立大学云象联合实验室，拥有多位计算机博士、硕士，致力于打造全球领先的企业级联盟链技术平台。<br>由Roger Zimmermann教授和刘振广博士带领的新加坡国立大学云象联合实验室也在着力研究新型的区块链数据库，以达到一百万次每秒的交易速度，且已取得了第一阶段成果。由陈积明教授（长江学者）和何钦铭教授带领的浙江大学云象团队在安全和智能合约方向也取得了丰硕成果。<br>云象与美国iBlockChain在深圳成立的区块链合资公司是前海区块链国际生态圈联盟秘书长单位，同时云象也是中关村区块链产业联盟成员<br><img src=\"https://s15.postimg.org/6cx0gbh23/14898918353591.jpg\" class=\"img-shadow\"></p>\n</li>\n</ul>\n<h3 id=\"供应链-贸易金融流程自动化的步骤\"><a href=\"#供应链-贸易金融流程自动化的步骤\" class=\"headerlink\" title=\"供应链/贸易金融流程自动化的步骤\"></a>供应链/贸易金融流程自动化的步骤</h3><p>1.“将纸质信用证转换成可以自动执行支付的智能合约（transforming letters of credit to smart contracts with automated payments）”；</p>\n<p>2.“将提单等纸质文件数字化，并以元数据的形式储存它们（digitizing printed documents, such as bills of lading and storing them as metadata）”；</p>\n<p>3.“在每一步创建所有权记录（creating a record of ownership in each step）”</p>\n<p>Payments in a supply chain can be triggered by a certain, predefined action, occurring at any point in time.<br>In general this works as follows: two parties agree to trade goods, and the selling party receives via his wallet a confirmation that he will be paid at a certain point if time. This guarantee is conditional, based on predefined criteria. The container with the goods contains a QR code, this is linked to a smart contract. When the goods arrive at the agreed point, and the pre-defined criteria are met, the smart contract is executed.<br>This triggers the transfer of ownership to the buyer and payment to the supplier is executed automatically. The great advantage is that when the structure is set up, the costs for a transaction are minimal. They are comparable to physical mail (for example €1 per letter) versus e-mail (a negligible cost per item).</p>\n<h3 id=\"难点和挑战\"><a href=\"#难点和挑战\" class=\"headerlink\" title=\"难点和挑战\"></a>难点和挑战</h3><ol>\n<li>政策：即使你创建了一个表面上看似严格的智能合约,也可以有一个传统的实体法律机构并不会承认交易进行的方式(例如,交易必须继续采用纸质的形式).</li>\n<li>数据源：The main challenge, is setting up technology for farmers, field workers and others to collect data and insert it onto a blockchain.</li>\n<li>迭代：It is not very easy to insert [a] new technology inside established supply chain systems because the integration challenges are not to be underestimated</li>\n</ol>\n<h3 id=\"Reference-Link\"><a href=\"#Reference-Link\" class=\"headerlink\" title=\"Reference Link\"></a>Reference Link</h3><p><a href=\"http://link.springer.com/chapter/10.1007/978-3-319-45348-4_19\" target=\"_blank\" rel=\"external\">http://link.springer.com/chapter/10.1007/978-3-319-45348-4_19</a><br><a href=\"http://ieeexplore.ieee.org/abstract/document/7538424/?part=1\" target=\"_blank\" rel=\"external\">http://ieeexplore.ieee.org/abstract/document/7538424/?part=1</a></p>"},{"title":"Deploy Hexo Blog to VPS |部署Hexo博客到VPS","date":"2017-03-20T09:41:10.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nDeploy my Hexo blog to VPS (Ubuntu OS at Digital Ocean)\n\n<!-- more -->\n\n## 前言\n\n在本地搭建好Hexo博客后，接下来就是部署到互联网上去了。网上搜到的教程大部分都是将Hexo部署到GitHub Pages上面，这样省时省力，但是已经有了Digital Ocean的VPS还是要用一下。(当然了，GitHub上有空间限制，访问速度问题等等)。\n\n运行环境：\n> Ubuntu 16.04.1 x64\nnginx 服务器\n\n## 准备阶段\n\n网上流传的武功秘籍分为两种：\n\n- 将Hexo项目上传到VPS上面后执行 `hexo server`，之后配置Nginx反向代理，让域名指向 `http://localhost:4000`。\n- 将Hexo在本地通过 `hexo generate` 生成静态文件，在通过 `hexo deploy` 部署到VPS上面，使用Nginx直接做Web服务器。\n\n相比第二种方式，第一种每次写博客与更新博客时候的操作会很繁琐。所以我们使用第二种方式进行部署，这样既可以将静态文件deploy到VPS上，也可以上传到Github上用作备份，操作性和安全性上都要胜于前者。\n\n而对于第二种方式而言，常用的又有 `git hook` 和 `rsync` 两种自动部署解决方案\n\n## 当我们说部署Hexo博客的时候我们在讲什么\n在我们创建的博客目录下执行 `hexo generate` 后，hexo会将我们编辑的markdown博客自动生成静态的网页，而生成的文件就存储在\b `public` 文件夹中，这其中的每一个html文件都是我们之后在网页中查看博客时候加载的对应文件，而我们在执行 `hexo deploy` 时，就是要将 `public` 文件夹下的文件全部部署到我们之前在Nginx配置中设置的 `root /var/www/hexo` 的路径中。\n\n## 用rsync部署\n相比较git hook方式，这一种操作更简单，对于小白更不容易出错。\n\n### 安装rsync\n\nrsync的安装分为两部分：服务器端和本地\n服务器端安装：\n\n```bash\napt-get install rsync\n```\n> 对于Digital Ocean Ubuntu VPS，大多数的Linux系统已经默认装有 `rsync` 了，可以运行 `rsync` 测试下是否已经安装。\n本地安装：\n\n```bash\nnpm install hexo-deployer-rsync --save\n```\n### rsync配置\n\n编辑博客文件夹目录下的 `_config.yml`，找到deploy添加如下代码：\n\n```tml\ndeploy:\n  type: rsync\n  host: vps-ip  # 这里填写你VPS的IP地址，比如：138.23.23.23\n  user: vps-user # 这里填写你登陆VPS所用的用户名，比如：root\n  root: /usr/www/blog # 这里填写你在nginx中配置的文件路径\n  port: 22 # SSH默认端口号，不需要修改\n```\n配置完毕！在 blog 目录下执行下面一段代码，接下来就是见证奇迹的时刻\n\n```\nhexo generate && hexo deploy\n```\n\n\n## git hook自动部署方案\n\n使用git hook和rsync得到的效果是等效的，也就是说，二者中选一种你喜欢的就可以完成配置。\n\n### 安装git\n本地部署工具安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n服务器端安装：\n\n```bash\nsudo apt-get update\nsudo apt-get install git-core \n```\n新增一个名为 `git` 的用户，并给用户 `git` 赋予无需密码操作的权限（否则到后面 Hexo 部署的时候会提示无权限）\n\n```bash\nadduser git\nchmod 740 /etc/sudoers\nvi /etc/sudoers\n```\n在vi编辑中找到如下内容：\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)     ALL\n```\n在下面添加一行\n\n```\ngit   ALL=(ALL)     ALL\n```\n> vim 操作小贴士：打开文件之后要按i进入编辑模式，编辑完以后按Esc，再输入`:wq`回车才能保存；如果想不保存直接退出请输入`:q!`。）\n保存退出后执行\n\n```\nchmod 440 /etc/sudoers\n```\n接下来要把本地的 SSH 公钥上传到 VPS 。执行：\n\n```\nsu git\ncd ~\nmkdir .ssh && cd .ssh\ntouch authorized_keys\nvi authorized_keys\n```\n现在要打开本地的 Git Bash，输入`vi ~/.ssh/id_rsa.pub`，把里面的内容复制下来粘贴到上面打开的文件里。\n\n然后建立放部署的网页的 Git 库。\n\n```\ncd ~\nmkdir hexo.git && cd hexo.git\ngit init --bare\n```\n测试一下，如果在 Git Bash 中输入 `ssh git@VPS的IP地址` 能够远程登录的话，则表示设置成功了。\n\n如果不成功，并且你的 VPS 的 ssh 端口不是 22 的话，请在Git Bash执行vi ~/.ssh/config，输入以下内容并保存：（成功就跳过这一步）\n\n```\nHost #VPS 的 IP\nHostName #VPS 的 IP\nUser git\nPort #SSH 端口\nIdentityFile ~/.ssh/id_rsa\n```\n\n### 初始化git仓库\n```\nmkdir /var/repo\ncd /var/repo\ngit init --bare blog.git\n```\n执行上述代码后,我们会在 `/var/repo` 路径下创建了一个名为 `blog.git` 的裸仓库，这个仓库的功能就是将我们deploy的文件通过git hook的方式共享到 `/var/www/blog` 中，而要想实现这一功能我们还需要进行如下配置：\n\n在 `blog.git/hooks` 目录下新建一个 `post-receive` 文件：\n\n```\ncd /var/repo/blog.git/hooks\nvim post-receive\n```\n在 `post-receive` 中添加如下内容：\n\n```\n#!/bin/sh\ngit --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f\n```\n\n设置 `post-receive` 文件的可执行权限：\n\n```bash\nchmod +x post-receive\n```\n提示：如果设置的路径文件夹并不存在，那么需要创建该文件夹并且赋予你所使用的用户的权限：\n\n```bash\nsudo mkdir /var/www/hexo\ncd /var/www\nchown git:git hexo\n```\n### 本地配置\n\n编辑博客文件夹目录下的 `_config.yml`，找到deploy添加如下代码：\n\n```\ndeploy:\n    type: git\n    repo: root@atomlx.com:/var/repo/blog.git # 此部分修改为你自己的登陆账号和域名，冒号后面为设置的裸仓库的地址\n    branch: master\n```\n同样在 blog 目录下执行下面一段代码，我们也可以看到我们的文件部署到了服务器上\n\n```\nhexo generate && hexo deploy\n```\n\n## 最后\n作为小白看到对 git hook 的教程之前有些出入，就选择了 rsync 的部署方法。Git hook 的流程只是放在这里作为对以后的参考。有什么不对的地方请谅解哦。\n\n\n## 参考链接\n* [Hexo快速搭建静态博客并实现远程VPS自动部署](https://segmentfault.com/a/1190000006745478#articleHeader0)\n* [Hexo个人博客迁移至VPS并绑定独立域名](https://imp1995.github.io/2016/11/26/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3VPS%E5%B9%B6%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/)\n* [如何部署Hexo到个人VPS](http://atomlx.com/2016/08/12/test/)\n* [利用 GIT HOOKS 部署 HEXO 到 VPS](https://munen.cc/tech/Hexo-in-VPS.html)\n\n\n\n\n","source":"_posts/deploy-hexo-blog-to-VPS.md","raw":"---\ntitle: Deploy Hexo Blog to VPS |部署Hexo博客到VPS\ndate: 2017-03-20 17:41:10\ntags: [website dev, hexo]\ncategories: Hexo\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nDeploy my Hexo blog to VPS (Ubuntu OS at Digital Ocean)\n\n<!-- more -->\n\n## 前言\n\n在本地搭建好Hexo博客后，接下来就是部署到互联网上去了。网上搜到的教程大部分都是将Hexo部署到GitHub Pages上面，这样省时省力，但是已经有了Digital Ocean的VPS还是要用一下。(当然了，GitHub上有空间限制，访问速度问题等等)。\n\n运行环境：\n> Ubuntu 16.04.1 x64\nnginx 服务器\n\n## 准备阶段\n\n网上流传的武功秘籍分为两种：\n\n- 将Hexo项目上传到VPS上面后执行 `hexo server`，之后配置Nginx反向代理，让域名指向 `http://localhost:4000`。\n- 将Hexo在本地通过 `hexo generate` 生成静态文件，在通过 `hexo deploy` 部署到VPS上面，使用Nginx直接做Web服务器。\n\n相比第二种方式，第一种每次写博客与更新博客时候的操作会很繁琐。所以我们使用第二种方式进行部署，这样既可以将静态文件deploy到VPS上，也可以上传到Github上用作备份，操作性和安全性上都要胜于前者。\n\n而对于第二种方式而言，常用的又有 `git hook` 和 `rsync` 两种自动部署解决方案\n\n## 当我们说部署Hexo博客的时候我们在讲什么\n在我们创建的博客目录下执行 `hexo generate` 后，hexo会将我们编辑的markdown博客自动生成静态的网页，而生成的文件就存储在\b `public` 文件夹中，这其中的每一个html文件都是我们之后在网页中查看博客时候加载的对应文件，而我们在执行 `hexo deploy` 时，就是要将 `public` 文件夹下的文件全部部署到我们之前在Nginx配置中设置的 `root /var/www/hexo` 的路径中。\n\n## 用rsync部署\n相比较git hook方式，这一种操作更简单，对于小白更不容易出错。\n\n### 安装rsync\n\nrsync的安装分为两部分：服务器端和本地\n服务器端安装：\n\n```bash\napt-get install rsync\n```\n> 对于Digital Ocean Ubuntu VPS，大多数的Linux系统已经默认装有 `rsync` 了，可以运行 `rsync` 测试下是否已经安装。\n本地安装：\n\n```bash\nnpm install hexo-deployer-rsync --save\n```\n### rsync配置\n\n编辑博客文件夹目录下的 `_config.yml`，找到deploy添加如下代码：\n\n```tml\ndeploy:\n  type: rsync\n  host: vps-ip  # 这里填写你VPS的IP地址，比如：138.23.23.23\n  user: vps-user # 这里填写你登陆VPS所用的用户名，比如：root\n  root: /usr/www/blog # 这里填写你在nginx中配置的文件路径\n  port: 22 # SSH默认端口号，不需要修改\n```\n配置完毕！在 blog 目录下执行下面一段代码，接下来就是见证奇迹的时刻\n\n```\nhexo generate && hexo deploy\n```\n\n\n## git hook自动部署方案\n\n使用git hook和rsync得到的效果是等效的，也就是说，二者中选一种你喜欢的就可以完成配置。\n\n### 安装git\n本地部署工具安装\n\n```\nnpm install hexo-deployer-git --save\n```\n\n服务器端安装：\n\n```bash\nsudo apt-get update\nsudo apt-get install git-core \n```\n新增一个名为 `git` 的用户，并给用户 `git` 赋予无需密码操作的权限（否则到后面 Hexo 部署的时候会提示无权限）\n\n```bash\nadduser git\nchmod 740 /etc/sudoers\nvi /etc/sudoers\n```\n在vi编辑中找到如下内容：\n\n```\n## Allow root to run any commands anywhere\nroot    ALL=(ALL)     ALL\n```\n在下面添加一行\n\n```\ngit   ALL=(ALL)     ALL\n```\n> vim 操作小贴士：打开文件之后要按i进入编辑模式，编辑完以后按Esc，再输入`:wq`回车才能保存；如果想不保存直接退出请输入`:q!`。）\n保存退出后执行\n\n```\nchmod 440 /etc/sudoers\n```\n接下来要把本地的 SSH 公钥上传到 VPS 。执行：\n\n```\nsu git\ncd ~\nmkdir .ssh && cd .ssh\ntouch authorized_keys\nvi authorized_keys\n```\n现在要打开本地的 Git Bash，输入`vi ~/.ssh/id_rsa.pub`，把里面的内容复制下来粘贴到上面打开的文件里。\n\n然后建立放部署的网页的 Git 库。\n\n```\ncd ~\nmkdir hexo.git && cd hexo.git\ngit init --bare\n```\n测试一下，如果在 Git Bash 中输入 `ssh git@VPS的IP地址` 能够远程登录的话，则表示设置成功了。\n\n如果不成功，并且你的 VPS 的 ssh 端口不是 22 的话，请在Git Bash执行vi ~/.ssh/config，输入以下内容并保存：（成功就跳过这一步）\n\n```\nHost #VPS 的 IP\nHostName #VPS 的 IP\nUser git\nPort #SSH 端口\nIdentityFile ~/.ssh/id_rsa\n```\n\n### 初始化git仓库\n```\nmkdir /var/repo\ncd /var/repo\ngit init --bare blog.git\n```\n执行上述代码后,我们会在 `/var/repo` 路径下创建了一个名为 `blog.git` 的裸仓库，这个仓库的功能就是将我们deploy的文件通过git hook的方式共享到 `/var/www/blog` 中，而要想实现这一功能我们还需要进行如下配置：\n\n在 `blog.git/hooks` 目录下新建一个 `post-receive` 文件：\n\n```\ncd /var/repo/blog.git/hooks\nvim post-receive\n```\n在 `post-receive` 中添加如下内容：\n\n```\n#!/bin/sh\ngit --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f\n```\n\n设置 `post-receive` 文件的可执行权限：\n\n```bash\nchmod +x post-receive\n```\n提示：如果设置的路径文件夹并不存在，那么需要创建该文件夹并且赋予你所使用的用户的权限：\n\n```bash\nsudo mkdir /var/www/hexo\ncd /var/www\nchown git:git hexo\n```\n### 本地配置\n\n编辑博客文件夹目录下的 `_config.yml`，找到deploy添加如下代码：\n\n```\ndeploy:\n    type: git\n    repo: root@atomlx.com:/var/repo/blog.git # 此部分修改为你自己的登陆账号和域名，冒号后面为设置的裸仓库的地址\n    branch: master\n```\n同样在 blog 目录下执行下面一段代码，我们也可以看到我们的文件部署到了服务器上\n\n```\nhexo generate && hexo deploy\n```\n\n## 最后\n作为小白看到对 git hook 的教程之前有些出入，就选择了 rsync 的部署方法。Git hook 的流程只是放在这里作为对以后的参考。有什么不对的地方请谅解哦。\n\n\n## 参考链接\n* [Hexo快速搭建静态博客并实现远程VPS自动部署](https://segmentfault.com/a/1190000006745478#articleHeader0)\n* [Hexo个人博客迁移至VPS并绑定独立域名](https://imp1995.github.io/2016/11/26/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3VPS%E5%B9%B6%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/)\n* [如何部署Hexo到个人VPS](http://atomlx.com/2016/08/12/test/)\n* [利用 GIT HOOKS 部署 HEXO 到 VPS](https://munen.cc/tech/Hexo-in-VPS.html)\n\n\n\n\n","slug":"deploy-hexo-blog-to-VPS","published":1,"updated":"2017-08-02T14:01:30.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiv3000l0x1xchghg0ps","content":"<p>Deploy my Hexo blog to VPS (Ubuntu OS at Digital Ocean)</p>\n<a id=\"more\"></a>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在本地搭建好Hexo博客后，接下来就是部署到互联网上去了。网上搜到的教程大部分都是将Hexo部署到GitHub Pages上面，这样省时省力，但是已经有了Digital Ocean的VPS还是要用一下。(当然了，GitHub上有空间限制，访问速度问题等等)。</p>\n<p>运行环境：</p>\n<blockquote>\n<p>Ubuntu 16.04.1 x64<br>nginx 服务器</p>\n</blockquote>\n<h2 id=\"准备阶段\"><a href=\"#准备阶段\" class=\"headerlink\" title=\"准备阶段\"></a>准备阶段</h2><p>网上流传的武功秘籍分为两种：</p>\n<ul>\n<li>将Hexo项目上传到VPS上面后执行 <code>hexo server</code>，之后配置Nginx反向代理，让域名指向 <code>http://localhost:4000</code>。</li>\n<li>将Hexo在本地通过 <code>hexo generate</code> 生成静态文件，在通过 <code>hexo deploy</code> 部署到VPS上面，使用Nginx直接做Web服务器。</li>\n</ul>\n<p>相比第二种方式，第一种每次写博客与更新博客时候的操作会很繁琐。所以我们使用第二种方式进行部署，这样既可以将静态文件deploy到VPS上，也可以上传到Github上用作备份，操作性和安全性上都要胜于前者。</p>\n<p>而对于第二种方式而言，常用的又有 <code>git hook</code> 和 <code>rsync</code> 两种自动部署解决方案</p>\n<h2 id=\"当我们说部署Hexo博客的时候我们在讲什么\"><a href=\"#当我们说部署Hexo博客的时候我们在讲什么\" class=\"headerlink\" title=\"当我们说部署Hexo博客的时候我们在讲什么\"></a>当我们说部署Hexo博客的时候我们在讲什么</h2><p>在我们创建的博客目录下执行 <code>hexo generate</code> 后，hexo会将我们编辑的markdown博客自动生成静态的网页，而生成的文件就存储在\b <code>public</code> 文件夹中，这其中的每一个html文件都是我们之后在网页中查看博客时候加载的对应文件，而我们在执行 <code>hexo deploy</code> 时，就是要将 <code>public</code> 文件夹下的文件全部部署到我们之前在Nginx配置中设置的 <code>root /var/www/hexo</code> 的路径中。</p>\n<h2 id=\"用rsync部署\"><a href=\"#用rsync部署\" class=\"headerlink\" title=\"用rsync部署\"></a>用rsync部署</h2><p>相比较git hook方式，这一种操作更简单，对于小白更不容易出错。</p>\n<h3 id=\"安装rsync\"><a href=\"#安装rsync\" class=\"headerlink\" title=\"安装rsync\"></a>安装rsync</h3><p>rsync的安装分为两部分：服务器端和本地<br>服务器端安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install rsync</div></pre></td></tr></table></figure>\n<blockquote>\n<p>对于Digital Ocean Ubuntu VPS，大多数的Linux系统已经默认装有 <code>rsync</code> 了，可以运行 <code>rsync</code> 测试下是否已经安装。<br>本地安装：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-rsync --save</div></pre></td></tr></table></figure>\n<h3 id=\"rsync配置\"><a href=\"#rsync配置\" class=\"headerlink\" title=\"rsync配置\"></a>rsync配置</h3><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到deploy添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: rsync</div><div class=\"line\">  host: vps-ip  # 这里填写你VPS的IP地址，比如：138.23.23.23</div><div class=\"line\">  user: vps-user # 这里填写你登陆VPS所用的用户名，比如：root</div><div class=\"line\">  root: /usr/www/blog # 这里填写你在nginx中配置的文件路径</div><div class=\"line\">  port: 22 # SSH默认端口号，不需要修改</div></pre></td></tr></table></figure>\n<p>配置完毕！在 blog 目录下执行下面一段代码，接下来就是见证奇迹的时刻</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate &amp;&amp; hexo deploy</div></pre></td></tr></table></figure>\n<h2 id=\"git-hook自动部署方案\"><a href=\"#git-hook自动部署方案\" class=\"headerlink\" title=\"git hook自动部署方案\"></a>git hook自动部署方案</h2><p>使用git hook和rsync得到的效果是等效的，也就是说，二者中选一种你喜欢的就可以完成配置。</p>\n<h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><p>本地部署工具安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>服务器端安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install git-core</div></pre></td></tr></table></figure>\n<p>新增一个名为 <code>git</code> 的用户，并给用户 <code>git</code> 赋予无需密码操作的权限（否则到后面 Hexo 部署的时候会提示无权限）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">adduser git</div><div class=\"line\">chmod 740 /etc/sudoers</div><div class=\"line\">vi /etc/sudoers</div></pre></td></tr></table></figure>\n<p>在vi编辑中找到如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">## Allow root to run any commands anywhere</div><div class=\"line\">root    ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<p>在下面添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git   ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<blockquote>\n<p>vim 操作小贴士：打开文件之后要按i进入编辑模式，编辑完以后按Esc，再输入<code>:wq</code>回车才能保存；如果想不保存直接退出请输入<code>:q!</code>。）<br>保存退出后执行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 440 /etc/sudoers</div></pre></td></tr></table></figure>\n<p>接下来要把本地的 SSH 公钥上传到 VPS 。执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">cd ~</div><div class=\"line\">mkdir .ssh &amp;&amp; cd .ssh</div><div class=\"line\">touch authorized_keys</div><div class=\"line\">vi authorized_keys</div></pre></td></tr></table></figure>\n<p>现在要打开本地的 Git Bash，输入<code>vi ~/.ssh/id_rsa.pub</code>，把里面的内容复制下来粘贴到上面打开的文件里。</p>\n<p>然后建立放部署的网页的 Git 库。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">mkdir hexo.git &amp;&amp; cd hexo.git</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure>\n<p>测试一下，如果在 Git Bash 中输入 <code>ssh git@VPS的IP地址</code> 能够远程登录的话，则表示设置成功了。</p>\n<p>如果不成功，并且你的 VPS 的 ssh 端口不是 22 的话，请在Git Bash执行vi ~/.ssh/config，输入以下内容并保存：（成功就跳过这一步）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host #VPS 的 IP</div><div class=\"line\">HostName #VPS 的 IP</div><div class=\"line\">User git</div><div class=\"line\">Port #SSH 端口</div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<h3 id=\"初始化git仓库\"><a href=\"#初始化git仓库\" class=\"headerlink\" title=\"初始化git仓库\"></a>初始化git仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /var/repo</div><div class=\"line\">cd /var/repo</div><div class=\"line\">git init --bare blog.git</div></pre></td></tr></table></figure>\n<p>执行上述代码后,我们会在 <code>/var/repo</code> 路径下创建了一个名为 <code>blog.git</code> 的裸仓库，这个仓库的功能就是将我们deploy的文件通过git hook的方式共享到 <code>/var/www/blog</code> 中，而要想实现这一功能我们还需要进行如下配置：</p>\n<p>在 <code>blog.git/hooks</code> 目录下新建一个 <code>post-receive</code> 文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var/repo/blog.git/hooks</div><div class=\"line\">vim post-receive</div></pre></td></tr></table></figure>\n<p>在 <code>post-receive</code> 中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/sh</div><div class=\"line\">git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f</div></pre></td></tr></table></figure>\n<p>设置 <code>post-receive</code> 文件的可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>提示：如果设置的路径文件夹并不存在，那么需要创建该文件夹并且赋予你所使用的用户的权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mkdir /var/www/hexo</div><div class=\"line\"><span class=\"built_in\">cd</span> /var/www</div><div class=\"line\">chown git:git hexo</div></pre></td></tr></table></figure>\n<h3 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h3><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到deploy添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">    type: git</div><div class=\"line\">    repo: root@atomlx.com:/var/repo/blog.git # 此部分修改为你自己的登陆账号和域名，冒号后面为设置的裸仓库的地址</div><div class=\"line\">    branch: master</div></pre></td></tr></table></figure>\n<p>同样在 blog 目录下执行下面一段代码，我们也可以看到我们的文件部署到了服务器上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate &amp;&amp; hexo deploy</div></pre></td></tr></table></figure>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>作为小白看到对 git hook 的教程之前有些出入，就选择了 rsync 的部署方法。Git hook 的流程只是放在这里作为对以后的参考。有什么不对的地方请谅解哦。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000006745478#articleHeader0\" target=\"_blank\" rel=\"external\">Hexo快速搭建静态博客并实现远程VPS自动部署</a></li>\n<li><a href=\"https://imp1995.github.io/2016/11/26/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3VPS%E5%B9%B6%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/\" target=\"_blank\" rel=\"external\">Hexo个人博客迁移至VPS并绑定独立域名</a></li>\n<li><a href=\"http://atomlx.com/2016/08/12/test/\" target=\"_blank\" rel=\"external\">如何部署Hexo到个人VPS</a></li>\n<li><a href=\"https://munen.cc/tech/Hexo-in-VPS.html\" target=\"_blank\" rel=\"external\">利用 GIT HOOKS 部署 HEXO 到 VPS</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Deploy my Hexo blog to VPS (Ubuntu OS at Digital Ocean)</p>","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>在本地搭建好Hexo博客后，接下来就是部署到互联网上去了。网上搜到的教程大部分都是将Hexo部署到GitHub Pages上面，这样省时省力，但是已经有了Digital Ocean的VPS还是要用一下。(当然了，GitHub上有空间限制，访问速度问题等等)。</p>\n<p>运行环境：</p>\n<blockquote>\n<p>Ubuntu 16.04.1 x64<br>nginx 服务器</p>\n</blockquote>\n<h2 id=\"准备阶段\"><a href=\"#准备阶段\" class=\"headerlink\" title=\"准备阶段\"></a>准备阶段</h2><p>网上流传的武功秘籍分为两种：</p>\n<ul>\n<li>将Hexo项目上传到VPS上面后执行 <code>hexo server</code>，之后配置Nginx反向代理，让域名指向 <code>http://localhost:4000</code>。</li>\n<li>将Hexo在本地通过 <code>hexo generate</code> 生成静态文件，在通过 <code>hexo deploy</code> 部署到VPS上面，使用Nginx直接做Web服务器。</li>\n</ul>\n<p>相比第二种方式，第一种每次写博客与更新博客时候的操作会很繁琐。所以我们使用第二种方式进行部署，这样既可以将静态文件deploy到VPS上，也可以上传到Github上用作备份，操作性和安全性上都要胜于前者。</p>\n<p>而对于第二种方式而言，常用的又有 <code>git hook</code> 和 <code>rsync</code> 两种自动部署解决方案</p>\n<h2 id=\"当我们说部署Hexo博客的时候我们在讲什么\"><a href=\"#当我们说部署Hexo博客的时候我们在讲什么\" class=\"headerlink\" title=\"当我们说部署Hexo博客的时候我们在讲什么\"></a>当我们说部署Hexo博客的时候我们在讲什么</h2><p>在我们创建的博客目录下执行 <code>hexo generate</code> 后，hexo会将我们编辑的markdown博客自动生成静态的网页，而生成的文件就存储在\b <code>public</code> 文件夹中，这其中的每一个html文件都是我们之后在网页中查看博客时候加载的对应文件，而我们在执行 <code>hexo deploy</code> 时，就是要将 <code>public</code> 文件夹下的文件全部部署到我们之前在Nginx配置中设置的 <code>root /var/www/hexo</code> 的路径中。</p>\n<h2 id=\"用rsync部署\"><a href=\"#用rsync部署\" class=\"headerlink\" title=\"用rsync部署\"></a>用rsync部署</h2><p>相比较git hook方式，这一种操作更简单，对于小白更不容易出错。</p>\n<h3 id=\"安装rsync\"><a href=\"#安装rsync\" class=\"headerlink\" title=\"安装rsync\"></a>安装rsync</h3><p>rsync的安装分为两部分：服务器端和本地<br>服务器端安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install rsync</div></pre></td></tr></table></figure>\n<blockquote>\n<p>对于Digital Ocean Ubuntu VPS，大多数的Linux系统已经默认装有 <code>rsync</code> 了，可以运行 <code>rsync</code> 测试下是否已经安装。<br>本地安装：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-rsync --save</div></pre></td></tr></table></figure>\n<h3 id=\"rsync配置\"><a href=\"#rsync配置\" class=\"headerlink\" title=\"rsync配置\"></a>rsync配置</h3><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到deploy添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">  type: rsync</div><div class=\"line\">  host: vps-ip  # 这里填写你VPS的IP地址，比如：138.23.23.23</div><div class=\"line\">  user: vps-user # 这里填写你登陆VPS所用的用户名，比如：root</div><div class=\"line\">  root: /usr/www/blog # 这里填写你在nginx中配置的文件路径</div><div class=\"line\">  port: 22 # SSH默认端口号，不需要修改</div></pre></td></tr></table></figure>\n<p>配置完毕！在 blog 目录下执行下面一段代码，接下来就是见证奇迹的时刻</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate &amp;&amp; hexo deploy</div></pre></td></tr></table></figure>\n<h2 id=\"git-hook自动部署方案\"><a href=\"#git-hook自动部署方案\" class=\"headerlink\" title=\"git hook自动部署方案\"></a>git hook自动部署方案</h2><p>使用git hook和rsync得到的效果是等效的，也就是说，二者中选一种你喜欢的就可以完成配置。</p>\n<h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><p>本地部署工具安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<p>服务器端安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get update</div><div class=\"line\">sudo apt-get install git-core</div></pre></td></tr></table></figure>\n<p>新增一个名为 <code>git</code> 的用户，并给用户 <code>git</code> 赋予无需密码操作的权限（否则到后面 Hexo 部署的时候会提示无权限）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">adduser git</div><div class=\"line\">chmod 740 /etc/sudoers</div><div class=\"line\">vi /etc/sudoers</div></pre></td></tr></table></figure>\n<p>在vi编辑中找到如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">## Allow root to run any commands anywhere</div><div class=\"line\">root    ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<p>在下面添加一行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git   ALL=(ALL)     ALL</div></pre></td></tr></table></figure>\n<blockquote>\n<p>vim 操作小贴士：打开文件之后要按i进入编辑模式，编辑完以后按Esc，再输入<code>:wq</code>回车才能保存；如果想不保存直接退出请输入<code>:q!</code>。）<br>保存退出后执行</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 440 /etc/sudoers</div></pre></td></tr></table></figure>\n<p>接下来要把本地的 SSH 公钥上传到 VPS 。执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">su git</div><div class=\"line\">cd ~</div><div class=\"line\">mkdir .ssh &amp;&amp; cd .ssh</div><div class=\"line\">touch authorized_keys</div><div class=\"line\">vi authorized_keys</div></pre></td></tr></table></figure>\n<p>现在要打开本地的 Git Bash，输入<code>vi ~/.ssh/id_rsa.pub</code>，把里面的内容复制下来粘贴到上面打开的文件里。</p>\n<p>然后建立放部署的网页的 Git 库。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd ~</div><div class=\"line\">mkdir hexo.git &amp;&amp; cd hexo.git</div><div class=\"line\">git init --bare</div></pre></td></tr></table></figure>\n<p>测试一下，如果在 Git Bash 中输入 <code>ssh git@VPS的IP地址</code> 能够远程登录的话，则表示设置成功了。</p>\n<p>如果不成功，并且你的 VPS 的 ssh 端口不是 22 的话，请在Git Bash执行vi ~/.ssh/config，输入以下内容并保存：（成功就跳过这一步）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Host #VPS 的 IP</div><div class=\"line\">HostName #VPS 的 IP</div><div class=\"line\">User git</div><div class=\"line\">Port #SSH 端口</div><div class=\"line\">IdentityFile ~/.ssh/id_rsa</div></pre></td></tr></table></figure>\n<h3 id=\"初始化git仓库\"><a href=\"#初始化git仓库\" class=\"headerlink\" title=\"初始化git仓库\"></a>初始化git仓库</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir /var/repo</div><div class=\"line\">cd /var/repo</div><div class=\"line\">git init --bare blog.git</div></pre></td></tr></table></figure>\n<p>执行上述代码后,我们会在 <code>/var/repo</code> 路径下创建了一个名为 <code>blog.git</code> 的裸仓库，这个仓库的功能就是将我们deploy的文件通过git hook的方式共享到 <code>/var/www/blog</code> 中，而要想实现这一功能我们还需要进行如下配置：</p>\n<p>在 <code>blog.git/hooks</code> 目录下新建一个 <code>post-receive</code> 文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /var/repo/blog.git/hooks</div><div class=\"line\">vim post-receive</div></pre></td></tr></table></figure>\n<p>在 <code>post-receive</code> 中添加如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/sh</div><div class=\"line\">git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f</div></pre></td></tr></table></figure>\n<p>设置 <code>post-receive</code> 文件的可执行权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod +x post-receive</div></pre></td></tr></table></figure>\n<p>提示：如果设置的路径文件夹并不存在，那么需要创建该文件夹并且赋予你所使用的用户的权限：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mkdir /var/www/hexo</div><div class=\"line\"><span class=\"built_in\">cd</span> /var/www</div><div class=\"line\">chown git:git hexo</div></pre></td></tr></table></figure>\n<h3 id=\"本地配置\"><a href=\"#本地配置\" class=\"headerlink\" title=\"本地配置\"></a>本地配置</h3><p>编辑博客文件夹目录下的 <code>_config.yml</code>，找到deploy添加如下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">deploy:</div><div class=\"line\">    type: git</div><div class=\"line\">    repo: root@atomlx.com:/var/repo/blog.git # 此部分修改为你自己的登陆账号和域名，冒号后面为设置的裸仓库的地址</div><div class=\"line\">    branch: master</div></pre></td></tr></table></figure>\n<p>同样在 blog 目录下执行下面一段代码，我们也可以看到我们的文件部署到了服务器上</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo generate &amp;&amp; hexo deploy</div></pre></td></tr></table></figure>\n<h2 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h2><p>作为小白看到对 git hook 的教程之前有些出入，就选择了 rsync 的部署方法。Git hook 的流程只是放在这里作为对以后的参考。有什么不对的地方请谅解哦。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ul>\n<li><a href=\"https://segmentfault.com/a/1190000006745478#articleHeader0\" target=\"_blank\" rel=\"external\">Hexo快速搭建静态博客并实现远程VPS自动部署</a></li>\n<li><a href=\"https://imp1995.github.io/2016/11/26/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%81%E7%A7%BB%E8%87%B3VPS%E5%B9%B6%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/\" target=\"_blank\" rel=\"external\">Hexo个人博客迁移至VPS并绑定独立域名</a></li>\n<li><a href=\"http://atomlx.com/2016/08/12/test/\" target=\"_blank\" rel=\"external\">如何部署Hexo到个人VPS</a></li>\n<li><a href=\"https://munen.cc/tech/Hexo-in-VPS.html\" target=\"_blank\" rel=\"external\">利用 GIT HOOKS 部署 HEXO 到 VPS</a></li>\n</ul>"},{"title":"Install Hadoop on Mac Sierra |Hadoop在Mac上的安装配置","date":"2017-03-29T15:01:14.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nInstallation memo for hadoop on Mac Sierra.\n\n<!-- more -->\n\nMac 系统: macOS Sierra (10.12.1)\nReference links:\n\n- [Hadoop 入门教程](http://hustlijian.github.io/tutorial/2015/06/19/Hadoop%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html) (Hadoop 2.7.0, mac)\n- [Hadoop集群安装配置教程](http://www.powerxing.com/install-hadoop-cluster/) (Hadoop 2.6.0, Ubuntu/CentOS)\n\n---\n\n### 安装Java SE\n\n\n#### 检查本机是否有Java和Java版本:\n\nRun `java -version` in your terminal to check which version of Java you have installed.\nMac 下面安装 Java，直接在官网上下载对应的 dmg. 版本选择不宜过高，会遇到不兼容的问题.\n#### 配置JAVA_HOME\n\n在`.bashrc` 或`.zshrc` 中加入 `JAVA_HOME` 设置： \n\n```\nsudo vim /etc/profile\n```\n在最后面加上以下：\n\n```\nexport JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n修改 `proflie` 之后需要执行 `source /etc/profile` 命令进行生效 需要注意的是，通过 dmg 文件安装的 jdk 地址是固定的，在`/Library/Java/JavaVirtualMachines/`里面可以找到对应版本的 JDK\n\n### 配置Mac OS ssh\n\n#### 设置Mac允许远程登陆\n\n```bash\n$ ssh localhost\n206-214:~ PeiYingchi$ ssh localhost ssh: connect to host localhost port 22: Connection refused\n```\n会有错误提示信息，表示当前用户没有权限。这个多半是系统为安全考虑，默认设置的。更改设置如下：进入system preference --> sharing --> 勾选remote login，并设置allow access for all users。再次输入`ssh localhost`，再输入密码并确认之后，可以看到ssh成功\n#### 生成公钥\n`ssh-keygen -t rsa` 一路回车，各种提示按默认不要改，等待执行完毕\n\n> `ssh-keygen`表示生成秘钥；-t表示秘钥类型。这个命令在`~/.ssh/`文件夹下创建两个文件`id_rsa`和`id_rsa.pub`，是ssh的一对儿私钥和公钥。接下来，将公钥追加到授权的key中去\n\n然后执行： `ls ~/.ssh` 可以看到两个密钥文件：`id_rsa`（私钥）`id_rsa.pub`（公钥）\n#### 设置免密码登陆\n```bash\ncat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n```\n### 安装Hadoop\n```bash\nbrew install hadoop\n```\nIf saw errors like:\n\n```bash\nCould not link:\n/usr/local/share/doc/homebrew\nPlease delete these paths and run brew update.\n```\nThen run `rm -rf /usr/local/share/doc/homebrew` 安装成功后会出现以下:\n\n```bash\nIn Hadoops config file:\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh,\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/mapred-env.sh and\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/yarn-env.sh\n$JAVA_HOME has been set to be the output of:\n  /usr/libexec/java_home\n```\n### Hadoop设置\n\n#### hadoop-env.sh配置\n\n文件在 `/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh`\n将\n\n```bash\nexport HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true\"\n```\n修改为\n\n```bash\nexport HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=\"\n```\n#### 编辑core-site.xml\n\n```xml /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/core-site.xml\n<configuration>\n  <property>\n      <name>hadoop.tmp.dir</name>  \n      <value>/usr/local/Cellar/hadoop/hdfs/tmp</value>\n    <description>A base for other temporary directories.</description>\n  </property>\n  <property>\n     <name>fs.default.name</name>                                     \n     <value>hdfs://localhost:9000</value>                             \n  </property>                                                        \n</configuration> \n```\n> 注： `fs.default.name` 保存了NameNode的位置，HDFS和MapReduce组件都需要用到它，这就是它出现在`core-site.xml` 文件中而不是 `hdfs-site.xml`文件中的原因\n#### 编辑mapred-site.xml, 设置MapReduce使用的框架\n\n可能文件名为 `mapred-site.xml.templete` , 改不改名字都可以。\n\n```xml\n<configuration>\n  <property>\n    <name>mapred.job.tracker</name>\n    <value>localhost:9001</value>\n  </property>\n</configuration>\n```\n变量`mapred.job.tracker` 保存了JobTracker的位置，因为只有MapReduce组件需要知道这个位置，所以它出现在`mapred-site.xml`文件中。\n\n#### 编辑 hdfs-site.xml\n```xml /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hdfs-site.xml\n<configuration>\n  <property>\n    <name>dfs.replication</name>\n    <value>1</value>\n  </property>\n</configuration>\n```\n变量`dfs.replication`指定了每个HDFS数据库的复制次数。 通常为3, 由于我们只有一台主机和一个伪分布式模式的DataNode，将此值修改为1。\n#### 编辑 yarn-site.xml\n```xml\n<configuration>\n    <property>\n        <name>yarn.nodemanager.aux-services</name>\n        <value>mapreduce_shuffle</value>\n    </property>\n</configuration>\n```\n### 启动Hadoop\n\n#### 格式化 hdfs\n\n`hadoop namenode -format` 这时就可以用`hstart`启动hadoop了。 可以使用 `jps` 命令验证 Hadoop是否在运行。\n#### 进入Hadoop主文件夹\n```bash\ncd /usr/local/Cellar/hadoop/2.7.3/ \nsbin/start-dfs.sh \nsbin/start-yarn.sh\n```\n为了启动Hadoop的时候避免每次都首先进到安装目录，然后再执行`sbin/start-dfs.sh` 和 `sbin/start-yarn.sh`这么麻烦，所以在编辑 `~/.profiles`文件,加上如下两行\n\n```bash\nalias hadoop_start=\"/usr/local/Cellar/hadoop/2.7.3/sbin/start-dfs.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/start-yarn.sh\"\nalias hadoop_stop=\"/usr/local/Cellar/hadoop/2.7.3/sbin/stop-yarn.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/stop-dfs.sh\"\n```\n然后执行 `source ~/.profiles` 更新。 这样就可以用 `hadoop_start` 和 `hadoop_stop` 这两个命令来启动Hadoop了。\n\n> 注意: 以后要使用`hadoop_start`之前还是要运行`source ~/.profiles`才可以哟\n### 运行一个Word Count 例子\n\n```bash\nhadoop jar /usr/local/Cellar/hadoop/2.7.3/libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 2 5\n```\n然后可以通过Web端进行监控。\nResource Manager: http://localhost:50070 \nJobTracker: http://localhost:8088 \nSpecific Node Information: http://localhost:8042 \n通过他们可以访问 HDFS filesystem, 也可以取得结果输出文件.\n#### 建立用户空间\n```bash\nhadoop fs -ls / # 查看已有user \nhdfs dfs -mkdir /user hdfs dfs -mkdir /user/$(whoami) # 这里是用户\nhdfs dfs -put ~/Documents/Hadoop/demo/Ethics.md /user/yingchi # 上传local文件\n```\n运行`wordcount`,命令如下: \n> 注意：运行实例时，当前目录设置为 `/usr/local/Cellar/hadoop/2.7.0/`\n\n```bash\nbin/hadoop jar libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /user/yingchi/Ethics.md /user/yingchi/out\n```\n运行完成后,在`/yingchi`目录下生成名为out的目录,其内容如下所示:\n\n```bash\nFound 2 items\n-rw-r--r--   1 PeiYingchi supergroup          0 2016-11-13 21:49 /user/yingchi/out/_SUCCESS\n-rw-r--r--   1 PeiYingchi supergroup      15719 2016-11-13 21:49 /user/yingchi/out/part-r-00000\n```\n\n\n\n","source":"_posts/install-hadoop-on-Mac-Sierra.md","raw":"---\ntitle: Install Hadoop on Mac Sierra |Hadoop在Mac上的安装配置\ndate: 2017-03-29 23:01:14\ntags: hadoop\ncategories: Hadoop\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nInstallation memo for hadoop on Mac Sierra.\n\n<!-- more -->\n\nMac 系统: macOS Sierra (10.12.1)\nReference links:\n\n- [Hadoop 入门教程](http://hustlijian.github.io/tutorial/2015/06/19/Hadoop%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html) (Hadoop 2.7.0, mac)\n- [Hadoop集群安装配置教程](http://www.powerxing.com/install-hadoop-cluster/) (Hadoop 2.6.0, Ubuntu/CentOS)\n\n---\n\n### 安装Java SE\n\n\n#### 检查本机是否有Java和Java版本:\n\nRun `java -version` in your terminal to check which version of Java you have installed.\nMac 下面安装 Java，直接在官网上下载对应的 dmg. 版本选择不宜过高，会遇到不兼容的问题.\n#### 配置JAVA_HOME\n\n在`.bashrc` 或`.zshrc` 中加入 `JAVA_HOME` 设置： \n\n```\nsudo vim /etc/profile\n```\n在最后面加上以下：\n\n```\nexport JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home\nexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin\n```\n修改 `proflie` 之后需要执行 `source /etc/profile` 命令进行生效 需要注意的是，通过 dmg 文件安装的 jdk 地址是固定的，在`/Library/Java/JavaVirtualMachines/`里面可以找到对应版本的 JDK\n\n### 配置Mac OS ssh\n\n#### 设置Mac允许远程登陆\n\n```bash\n$ ssh localhost\n206-214:~ PeiYingchi$ ssh localhost ssh: connect to host localhost port 22: Connection refused\n```\n会有错误提示信息，表示当前用户没有权限。这个多半是系统为安全考虑，默认设置的。更改设置如下：进入system preference --> sharing --> 勾选remote login，并设置allow access for all users。再次输入`ssh localhost`，再输入密码并确认之后，可以看到ssh成功\n#### 生成公钥\n`ssh-keygen -t rsa` 一路回车，各种提示按默认不要改，等待执行完毕\n\n> `ssh-keygen`表示生成秘钥；-t表示秘钥类型。这个命令在`~/.ssh/`文件夹下创建两个文件`id_rsa`和`id_rsa.pub`，是ssh的一对儿私钥和公钥。接下来，将公钥追加到授权的key中去\n\n然后执行： `ls ~/.ssh` 可以看到两个密钥文件：`id_rsa`（私钥）`id_rsa.pub`（公钥）\n#### 设置免密码登陆\n```bash\ncat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys\n```\n### 安装Hadoop\n```bash\nbrew install hadoop\n```\nIf saw errors like:\n\n```bash\nCould not link:\n/usr/local/share/doc/homebrew\nPlease delete these paths and run brew update.\n```\nThen run `rm -rf /usr/local/share/doc/homebrew` 安装成功后会出现以下:\n\n```bash\nIn Hadoops config file:\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh,\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/mapred-env.sh and\n  /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/yarn-env.sh\n$JAVA_HOME has been set to be the output of:\n  /usr/libexec/java_home\n```\n### Hadoop设置\n\n#### hadoop-env.sh配置\n\n文件在 `/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh`\n将\n\n```bash\nexport HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true\"\n```\n修改为\n\n```bash\nexport HADOOP_OPTS=\"$HADOOP_OPTS -Djava.net.preferIPv4Stack=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=\"\n```\n#### 编辑core-site.xml\n\n```xml /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/core-site.xml\n<configuration>\n  <property>\n      <name>hadoop.tmp.dir</name>  \n      <value>/usr/local/Cellar/hadoop/hdfs/tmp</value>\n    <description>A base for other temporary directories.</description>\n  </property>\n  <property>\n     <name>fs.default.name</name>                                     \n     <value>hdfs://localhost:9000</value>                             \n  </property>                                                        \n</configuration> \n```\n> 注： `fs.default.name` 保存了NameNode的位置，HDFS和MapReduce组件都需要用到它，这就是它出现在`core-site.xml` 文件中而不是 `hdfs-site.xml`文件中的原因\n#### 编辑mapred-site.xml, 设置MapReduce使用的框架\n\n可能文件名为 `mapred-site.xml.templete` , 改不改名字都可以。\n\n```xml\n<configuration>\n  <property>\n    <name>mapred.job.tracker</name>\n    <value>localhost:9001</value>\n  </property>\n</configuration>\n```\n变量`mapred.job.tracker` 保存了JobTracker的位置，因为只有MapReduce组件需要知道这个位置，所以它出现在`mapred-site.xml`文件中。\n\n#### 编辑 hdfs-site.xml\n```xml /usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hdfs-site.xml\n<configuration>\n  <property>\n    <name>dfs.replication</name>\n    <value>1</value>\n  </property>\n</configuration>\n```\n变量`dfs.replication`指定了每个HDFS数据库的复制次数。 通常为3, 由于我们只有一台主机和一个伪分布式模式的DataNode，将此值修改为1。\n#### 编辑 yarn-site.xml\n```xml\n<configuration>\n    <property>\n        <name>yarn.nodemanager.aux-services</name>\n        <value>mapreduce_shuffle</value>\n    </property>\n</configuration>\n```\n### 启动Hadoop\n\n#### 格式化 hdfs\n\n`hadoop namenode -format` 这时就可以用`hstart`启动hadoop了。 可以使用 `jps` 命令验证 Hadoop是否在运行。\n#### 进入Hadoop主文件夹\n```bash\ncd /usr/local/Cellar/hadoop/2.7.3/ \nsbin/start-dfs.sh \nsbin/start-yarn.sh\n```\n为了启动Hadoop的时候避免每次都首先进到安装目录，然后再执行`sbin/start-dfs.sh` 和 `sbin/start-yarn.sh`这么麻烦，所以在编辑 `~/.profiles`文件,加上如下两行\n\n```bash\nalias hadoop_start=\"/usr/local/Cellar/hadoop/2.7.3/sbin/start-dfs.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/start-yarn.sh\"\nalias hadoop_stop=\"/usr/local/Cellar/hadoop/2.7.3/sbin/stop-yarn.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/stop-dfs.sh\"\n```\n然后执行 `source ~/.profiles` 更新。 这样就可以用 `hadoop_start` 和 `hadoop_stop` 这两个命令来启动Hadoop了。\n\n> 注意: 以后要使用`hadoop_start`之前还是要运行`source ~/.profiles`才可以哟\n### 运行一个Word Count 例子\n\n```bash\nhadoop jar /usr/local/Cellar/hadoop/2.7.3/libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 2 5\n```\n然后可以通过Web端进行监控。\nResource Manager: http://localhost:50070 \nJobTracker: http://localhost:8088 \nSpecific Node Information: http://localhost:8042 \n通过他们可以访问 HDFS filesystem, 也可以取得结果输出文件.\n#### 建立用户空间\n```bash\nhadoop fs -ls / # 查看已有user \nhdfs dfs -mkdir /user hdfs dfs -mkdir /user/$(whoami) # 这里是用户\nhdfs dfs -put ~/Documents/Hadoop/demo/Ethics.md /user/yingchi # 上传local文件\n```\n运行`wordcount`,命令如下: \n> 注意：运行实例时，当前目录设置为 `/usr/local/Cellar/hadoop/2.7.0/`\n\n```bash\nbin/hadoop jar libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /user/yingchi/Ethics.md /user/yingchi/out\n```\n运行完成后,在`/yingchi`目录下生成名为out的目录,其内容如下所示:\n\n```bash\nFound 2 items\n-rw-r--r--   1 PeiYingchi supergroup          0 2016-11-13 21:49 /user/yingchi/out/_SUCCESS\n-rw-r--r--   1 PeiYingchi supergroup      15719 2016-11-13 21:49 /user/yingchi/out/part-r-00000\n```\n\n\n\n","slug":"install-hadoop-on-Mac-Sierra","published":1,"updated":"2017-03-31T11:44:54.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiv5000q0x1xvmsguz7c","content":"<p>Installation memo for hadoop on Mac Sierra.</p>\n<a id=\"more\"></a>\n<p>Mac 系统: macOS Sierra (10.12.1)<br>Reference links:</p>\n<ul>\n<li><a href=\"http://hustlijian.github.io/tutorial/2015/06/19/Hadoop%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html\" target=\"_blank\" rel=\"external\">Hadoop 入门教程</a> (Hadoop 2.7.0, mac)</li>\n<li><a href=\"http://www.powerxing.com/install-hadoop-cluster/\" target=\"_blank\" rel=\"external\">Hadoop集群安装配置教程</a> (Hadoop 2.6.0, Ubuntu/CentOS)</li>\n</ul>\n<hr>\n<h3 id=\"安装Java-SE\"><a href=\"#安装Java-SE\" class=\"headerlink\" title=\"安装Java SE\"></a>安装Java SE</h3><h4 id=\"检查本机是否有Java和Java版本\"><a href=\"#检查本机是否有Java和Java版本\" class=\"headerlink\" title=\"检查本机是否有Java和Java版本:\"></a>检查本机是否有Java和Java版本:</h4><p>Run <code>java -version</code> in your terminal to check which version of Java you have installed.<br>Mac 下面安装 Java，直接在官网上下载对应的 dmg. 版本选择不宜过高，会遇到不兼容的问题.</p>\n<h4 id=\"配置JAVA-HOME\"><a href=\"#配置JAVA-HOME\" class=\"headerlink\" title=\"配置JAVA_HOME\"></a>配置JAVA_HOME</h4><p>在<code>.bashrc</code> 或<code>.zshrc</code> 中加入 <code>JAVA_HOME</code> 设置： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/profile</div></pre></td></tr></table></figure>\n<p>在最后面加上以下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home</div><div class=\"line\">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</div></pre></td></tr></table></figure>\n<p>修改 <code>proflie</code> 之后需要执行 <code>source /etc/profile</code> 命令进行生效 需要注意的是，通过 dmg 文件安装的 jdk 地址是固定的，在<code>/Library/Java/JavaVirtualMachines/</code>里面可以找到对应版本的 JDK</p>\n<h3 id=\"配置Mac-OS-ssh\"><a href=\"#配置Mac-OS-ssh\" class=\"headerlink\" title=\"配置Mac OS ssh\"></a>配置Mac OS ssh</h3><h4 id=\"设置Mac允许远程登陆\"><a href=\"#设置Mac允许远程登陆\" class=\"headerlink\" title=\"设置Mac允许远程登陆\"></a>设置Mac允许远程登陆</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh localhost</div><div class=\"line\">206-214:~ PeiYingchi$ ssh localhost ssh: connect to host localhost port 22: Connection refused</div></pre></td></tr></table></figure>\n<p>会有错误提示信息，表示当前用户没有权限。这个多半是系统为安全考虑，默认设置的。更改设置如下：进入system preference –&gt; sharing –&gt; 勾选remote login，并设置allow access for all users。再次输入<code>ssh localhost</code>，再输入密码并确认之后，可以看到ssh成功</p>\n<h4 id=\"生成公钥\"><a href=\"#生成公钥\" class=\"headerlink\" title=\"生成公钥\"></a>生成公钥</h4><p><code>ssh-keygen -t rsa</code> 一路回车，各种提示按默认不要改，等待执行完毕</p>\n<blockquote>\n<p><code>ssh-keygen</code>表示生成秘钥；-t表示秘钥类型。这个命令在<code>~/.ssh/</code>文件夹下创建两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，是ssh的一对儿私钥和公钥。接下来，将公钥追加到授权的key中去</p>\n</blockquote>\n<p>然后执行： <code>ls ~/.ssh</code> 可以看到两个密钥文件：<code>id_rsa</code>（私钥）<code>id_rsa.pub</code>（公钥）</p>\n<h4 id=\"设置免密码登陆\"><a href=\"#设置免密码登陆\" class=\"headerlink\" title=\"设置免密码登陆\"></a>设置免密码登陆</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div></pre></td></tr></table></figure>\n<h3 id=\"安装Hadoop\"><a href=\"#安装Hadoop\" class=\"headerlink\" title=\"安装Hadoop\"></a>安装Hadoop</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install hadoop</div></pre></td></tr></table></figure>\n<p>If saw errors like:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Could not link:</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/share/doc/homebrew</div><div class=\"line\">Please delete these paths and run brew update.</div></pre></td></tr></table></figure>\n<p>Then run <code>rm -rf /usr/local/share/doc/homebrew</code> 安装成功后会出现以下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">In Hadoops config file:</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh,</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/mapred-env.sh and</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/yarn-env.sh</div><div class=\"line\"><span class=\"variable\">$JAVA_HOME</span> has been <span class=\"built_in\">set</span> to be the output of:</div><div class=\"line\">  /usr/libexec/java_home</div></pre></td></tr></table></figure>\n<h3 id=\"Hadoop设置\"><a href=\"#Hadoop设置\" class=\"headerlink\" title=\"Hadoop设置\"></a>Hadoop设置</h3><h4 id=\"hadoop-env-sh配置\"><a href=\"#hadoop-env-sh配置\" class=\"headerlink\" title=\"hadoop-env.sh配置\"></a>hadoop-env.sh配置</h4><p>文件在 <code>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh</code><br>将</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> HADOOP_OPTS=<span class=\"string\">\"<span class=\"variable\">$HADOOP_OPTS</span> -Djava.net.preferIPv4Stack=true\"</span></div></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> HADOOP_OPTS=<span class=\"string\">\"<span class=\"variable\">$HADOOP_OPTS</span> -Djava.net.preferIPv4Stack=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=\"</span></div></pre></td></tr></table></figure>\n<h4 id=\"编辑core-site-xml\"><a href=\"#编辑core-site-xml\" class=\"headerlink\" title=\"编辑core-site.xml\"></a>编辑core-site.xml</h4><figure class=\"highlight xml\"><figcaption><span>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/core-site.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/usr/local/Cellar/hadoop/hdfs/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>A base for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>                                     </div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://localhost:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>                             </div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                                                        </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注： <code>fs.default.name</code> 保存了NameNode的位置，HDFS和MapReduce组件都需要用到它，这就是它出现在<code>core-site.xml</code> 文件中而不是 <code>hdfs-site.xml</code>文件中的原因</p>\n<h4 id=\"编辑mapred-site-xml-设置MapReduce使用的框架\"><a href=\"#编辑mapred-site-xml-设置MapReduce使用的框架\" class=\"headerlink\" title=\"编辑mapred-site.xml, 设置MapReduce使用的框架\"></a>编辑mapred-site.xml, 设置MapReduce使用的框架</h4></blockquote>\n<p>可能文件名为 <code>mapred-site.xml.templete</code> , 改不改名字都可以。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>localhost:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>变量<code>mapred.job.tracker</code> 保存了JobTracker的位置，因为只有MapReduce组件需要知道这个位置，所以它出现在<code>mapred-site.xml</code>文件中。</p>\n<h4 id=\"编辑-hdfs-site-xml\"><a href=\"#编辑-hdfs-site-xml\" class=\"headerlink\" title=\"编辑 hdfs-site.xml\"></a>编辑 hdfs-site.xml</h4><figure class=\"highlight xml\"><figcaption><span>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hdfs-site.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>变量<code>dfs.replication</code>指定了每个HDFS数据库的复制次数。 通常为3, 由于我们只有一台主机和一个伪分布式模式的DataNode，将此值修改为1。</p>\n<h4 id=\"编辑-yarn-site-xml\"><a href=\"#编辑-yarn-site-xml\" class=\"headerlink\" title=\"编辑 yarn-site.xml\"></a>编辑 yarn-site.xml</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>mapreduce_shuffle<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"启动Hadoop\"><a href=\"#启动Hadoop\" class=\"headerlink\" title=\"启动Hadoop\"></a>启动Hadoop</h3><h4 id=\"格式化-hdfs\"><a href=\"#格式化-hdfs\" class=\"headerlink\" title=\"格式化 hdfs\"></a>格式化 hdfs</h4><p><code>hadoop namenode -format</code> 这时就可以用<code>hstart</code>启动hadoop了。 可以使用 <code>jps</code> 命令验证 Hadoop是否在运行。</p>\n<h4 id=\"进入Hadoop主文件夹\"><a href=\"#进入Hadoop主文件夹\" class=\"headerlink\" title=\"进入Hadoop主文件夹\"></a>进入Hadoop主文件夹</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/ </div><div class=\"line\">sbin/start-dfs.sh </div><div class=\"line\">sbin/start-yarn.sh</div></pre></td></tr></table></figure>\n<p>为了启动Hadoop的时候避免每次都首先进到安装目录，然后再执行<code>sbin/start-dfs.sh</code> 和 <code>sbin/start-yarn.sh</code>这么麻烦，所以在编辑 <code>~/.profiles</code>文件,加上如下两行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> hadoop_start=<span class=\"string\">\"/usr/local/Cellar/hadoop/2.7.3/sbin/start-dfs.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/start-yarn.sh\"</span></div><div class=\"line\"><span class=\"built_in\">alias</span> hadoop_stop=<span class=\"string\">\"/usr/local/Cellar/hadoop/2.7.3/sbin/stop-yarn.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/stop-dfs.sh\"</span></div></pre></td></tr></table></figure>\n<p>然后执行 <code>source ~/.profiles</code> 更新。 这样就可以用 <code>hadoop_start</code> 和 <code>hadoop_stop</code> 这两个命令来启动Hadoop了。</p>\n<blockquote>\n<p>注意: 以后要使用<code>hadoop_start</code>之前还是要运行<code>source ~/.profiles</code>才可以哟</p>\n<h3 id=\"运行一个Word-Count-例子\"><a href=\"#运行一个Word-Count-例子\" class=\"headerlink\" title=\"运行一个Word Count 例子\"></a>运行一个Word Count 例子</h3></blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop jar /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 2 5</div></pre></td></tr></table></figure>\n<p>然后可以通过Web端进行监控。<br>Resource Manager: <a href=\"http://localhost:50070\" target=\"_blank\" rel=\"external\">http://localhost:50070</a><br>JobTracker: <a href=\"http://localhost:8088\" target=\"_blank\" rel=\"external\">http://localhost:8088</a><br>Specific Node Information: <a href=\"http://localhost:8042\" target=\"_blank\" rel=\"external\">http://localhost:8042</a><br>通过他们可以访问 HDFS filesystem, 也可以取得结果输出文件.</p>\n<h4 id=\"建立用户空间\"><a href=\"#建立用户空间\" class=\"headerlink\" title=\"建立用户空间\"></a>建立用户空间</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop fs -ls / <span class=\"comment\"># 查看已有user </span></div><div class=\"line\">hdfs dfs -mkdir /user hdfs dfs -mkdir /user/$(whoami) <span class=\"comment\"># 这里是用户</span></div><div class=\"line\">hdfs dfs -put ~/Documents/Hadoop/demo/Ethics.md /user/yingchi <span class=\"comment\"># 上传local文件</span></div></pre></td></tr></table></figure>\n<p>运行<code>wordcount</code>,命令如下: </p>\n<blockquote>\n<p>注意：运行实例时，当前目录设置为 <code>/usr/local/Cellar/hadoop/2.7.0/</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bin/hadoop jar libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /user/yingchi/Ethics.md /user/yingchi/out</div></pre></td></tr></table></figure>\n<p>运行完成后,在<code>/yingchi</code>目录下生成名为out的目录,其内容如下所示:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Found 2 items</div><div class=\"line\">-rw-r--r--   1 PeiYingchi supergroup          0 2016-11-13 21:49 /user/yingchi/out/_SUCCESS</div><div class=\"line\">-rw-r--r--   1 PeiYingchi supergroup      15719 2016-11-13 21:49 /user/yingchi/out/part-r-00000</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Installation memo for hadoop on Mac Sierra.</p>","more":"<p>Mac 系统: macOS Sierra (10.12.1)<br>Reference links:</p>\n<ul>\n<li><a href=\"http://hustlijian.github.io/tutorial/2015/06/19/Hadoop%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8.html\" target=\"_blank\" rel=\"external\">Hadoop 入门教程</a> (Hadoop 2.7.0, mac)</li>\n<li><a href=\"http://www.powerxing.com/install-hadoop-cluster/\" target=\"_blank\" rel=\"external\">Hadoop集群安装配置教程</a> (Hadoop 2.6.0, Ubuntu/CentOS)</li>\n</ul>\n<hr>\n<h3 id=\"安装Java-SE\"><a href=\"#安装Java-SE\" class=\"headerlink\" title=\"安装Java SE\"></a>安装Java SE</h3><h4 id=\"检查本机是否有Java和Java版本\"><a href=\"#检查本机是否有Java和Java版本\" class=\"headerlink\" title=\"检查本机是否有Java和Java版本:\"></a>检查本机是否有Java和Java版本:</h4><p>Run <code>java -version</code> in your terminal to check which version of Java you have installed.<br>Mac 下面安装 Java，直接在官网上下载对应的 dmg. 版本选择不宜过高，会遇到不兼容的问题.</p>\n<h4 id=\"配置JAVA-HOME\"><a href=\"#配置JAVA-HOME\" class=\"headerlink\" title=\"配置JAVA_HOME\"></a>配置JAVA_HOME</h4><p>在<code>.bashrc</code> 或<code>.zshrc</code> 中加入 <code>JAVA_HOME</code> 设置： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo vim /etc/profile</div></pre></td></tr></table></figure>\n<p>在最后面加上以下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_71.jdk/Contents/Home</div><div class=\"line\">export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</div><div class=\"line\">export PATH=$PATH:$JAVA_HOME/bin</div></pre></td></tr></table></figure>\n<p>修改 <code>proflie</code> 之后需要执行 <code>source /etc/profile</code> 命令进行生效 需要注意的是，通过 dmg 文件安装的 jdk 地址是固定的，在<code>/Library/Java/JavaVirtualMachines/</code>里面可以找到对应版本的 JDK</p>\n<h3 id=\"配置Mac-OS-ssh\"><a href=\"#配置Mac-OS-ssh\" class=\"headerlink\" title=\"配置Mac OS ssh\"></a>配置Mac OS ssh</h3><h4 id=\"设置Mac允许远程登陆\"><a href=\"#设置Mac允许远程登陆\" class=\"headerlink\" title=\"设置Mac允许远程登陆\"></a>设置Mac允许远程登陆</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ssh localhost</div><div class=\"line\">206-214:~ PeiYingchi$ ssh localhost ssh: connect to host localhost port 22: Connection refused</div></pre></td></tr></table></figure>\n<p>会有错误提示信息，表示当前用户没有权限。这个多半是系统为安全考虑，默认设置的。更改设置如下：进入system preference –&gt; sharing –&gt; 勾选remote login，并设置allow access for all users。再次输入<code>ssh localhost</code>，再输入密码并确认之后，可以看到ssh成功</p>\n<h4 id=\"生成公钥\"><a href=\"#生成公钥\" class=\"headerlink\" title=\"生成公钥\"></a>生成公钥</h4><p><code>ssh-keygen -t rsa</code> 一路回车，各种提示按默认不要改，等待执行完毕</p>\n<blockquote>\n<p><code>ssh-keygen</code>表示生成秘钥；-t表示秘钥类型。这个命令在<code>~/.ssh/</code>文件夹下创建两个文件<code>id_rsa</code>和<code>id_rsa.pub</code>，是ssh的一对儿私钥和公钥。接下来，将公钥追加到授权的key中去</p>\n</blockquote>\n<p>然后执行： <code>ls ~/.ssh</code> 可以看到两个密钥文件：<code>id_rsa</code>（私钥）<code>id_rsa.pub</code>（公钥）</p>\n<h4 id=\"设置免密码登陆\"><a href=\"#设置免密码登陆\" class=\"headerlink\" title=\"设置免密码登陆\"></a>设置免密码登陆</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</div></pre></td></tr></table></figure>\n<h3 id=\"安装Hadoop\"><a href=\"#安装Hadoop\" class=\"headerlink\" title=\"安装Hadoop\"></a>安装Hadoop</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install hadoop</div></pre></td></tr></table></figure>\n<p>If saw errors like:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Could not link:</div><div class=\"line\">/usr/<span class=\"built_in\">local</span>/share/doc/homebrew</div><div class=\"line\">Please delete these paths and run brew update.</div></pre></td></tr></table></figure>\n<p>Then run <code>rm -rf /usr/local/share/doc/homebrew</code> 安装成功后会出现以下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">In Hadoops config file:</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh,</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/mapred-env.sh and</div><div class=\"line\">  /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/etc/hadoop/yarn-env.sh</div><div class=\"line\"><span class=\"variable\">$JAVA_HOME</span> has been <span class=\"built_in\">set</span> to be the output of:</div><div class=\"line\">  /usr/libexec/java_home</div></pre></td></tr></table></figure>\n<h3 id=\"Hadoop设置\"><a href=\"#Hadoop设置\" class=\"headerlink\" title=\"Hadoop设置\"></a>Hadoop设置</h3><h4 id=\"hadoop-env-sh配置\"><a href=\"#hadoop-env-sh配置\" class=\"headerlink\" title=\"hadoop-env.sh配置\"></a>hadoop-env.sh配置</h4><p>文件在 <code>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hadoop-env.sh</code><br>将</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> HADOOP_OPTS=<span class=\"string\">\"<span class=\"variable\">$HADOOP_OPTS</span> -Djava.net.preferIPv4Stack=true\"</span></div></pre></td></tr></table></figure>\n<p>修改为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">export</span> HADOOP_OPTS=<span class=\"string\">\"<span class=\"variable\">$HADOOP_OPTS</span> -Djava.net.preferIPv4Stack=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=\"</span></div></pre></td></tr></table></figure>\n<h4 id=\"编辑core-site-xml\"><a href=\"#编辑core-site-xml\" class=\"headerlink\" title=\"编辑core-site.xml\"></a>编辑core-site.xml</h4><figure class=\"highlight xml\"><figcaption><span>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/core-site.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </div><div class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/usr/local/Cellar/hadoop/hdfs/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>A base for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>                                     </div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://localhost:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>                             </div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                                                        </div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注： <code>fs.default.name</code> 保存了NameNode的位置，HDFS和MapReduce组件都需要用到它，这就是它出现在<code>core-site.xml</code> 文件中而不是 <code>hdfs-site.xml</code>文件中的原因</p>\n<h4 id=\"编辑mapred-site-xml-设置MapReduce使用的框架\"><a href=\"#编辑mapred-site-xml-设置MapReduce使用的框架\" class=\"headerlink\" title=\"编辑mapred-site.xml, 设置MapReduce使用的框架\"></a>编辑mapred-site.xml, 设置MapReduce使用的框架</h4></blockquote>\n<p>可能文件名为 <code>mapred-site.xml.templete</code> , 改不改名字都可以。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>localhost:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>变量<code>mapred.job.tracker</code> 保存了JobTracker的位置，因为只有MapReduce组件需要知道这个位置，所以它出现在<code>mapred-site.xml</code>文件中。</p>\n<h4 id=\"编辑-hdfs-site-xml\"><a href=\"#编辑-hdfs-site-xml\" class=\"headerlink\" title=\"编辑 hdfs-site.xml\"></a>编辑 hdfs-site.xml</h4><figure class=\"highlight xml\"><figcaption><span>/usr/local/Cellar/hadoop/2.7.3/libexec/etc/hadoop/hdfs-site.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>变量<code>dfs.replication</code>指定了每个HDFS数据库的复制次数。 通常为3, 由于我们只有一台主机和一个伪分布式模式的DataNode，将此值修改为1。</p>\n<h4 id=\"编辑-yarn-site-xml\"><a href=\"#编辑-yarn-site-xml\" class=\"headerlink\" title=\"编辑 yarn-site.xml\"></a>编辑 yarn-site.xml</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>yarn.nodemanager.aux-services<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>mapreduce_shuffle<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"启动Hadoop\"><a href=\"#启动Hadoop\" class=\"headerlink\" title=\"启动Hadoop\"></a>启动Hadoop</h3><h4 id=\"格式化-hdfs\"><a href=\"#格式化-hdfs\" class=\"headerlink\" title=\"格式化 hdfs\"></a>格式化 hdfs</h4><p><code>hadoop namenode -format</code> 这时就可以用<code>hstart</code>启动hadoop了。 可以使用 <code>jps</code> 命令验证 Hadoop是否在运行。</p>\n<h4 id=\"进入Hadoop主文件夹\"><a href=\"#进入Hadoop主文件夹\" class=\"headerlink\" title=\"进入Hadoop主文件夹\"></a>进入Hadoop主文件夹</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/ </div><div class=\"line\">sbin/start-dfs.sh </div><div class=\"line\">sbin/start-yarn.sh</div></pre></td></tr></table></figure>\n<p>为了启动Hadoop的时候避免每次都首先进到安装目录，然后再执行<code>sbin/start-dfs.sh</code> 和 <code>sbin/start-yarn.sh</code>这么麻烦，所以在编辑 <code>~/.profiles</code>文件,加上如下两行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> hadoop_start=<span class=\"string\">\"/usr/local/Cellar/hadoop/2.7.3/sbin/start-dfs.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/start-yarn.sh\"</span></div><div class=\"line\"><span class=\"built_in\">alias</span> hadoop_stop=<span class=\"string\">\"/usr/local/Cellar/hadoop/2.7.3/sbin/stop-yarn.sh;/usr/local/Cellar/hadoop/2.7.3/sbin/stop-dfs.sh\"</span></div></pre></td></tr></table></figure>\n<p>然后执行 <code>source ~/.profiles</code> 更新。 这样就可以用 <code>hadoop_start</code> 和 <code>hadoop_stop</code> 这两个命令来启动Hadoop了。</p>\n<blockquote>\n<p>注意: 以后要使用<code>hadoop_start</code>之前还是要运行<code>source ~/.profiles</code>才可以哟</p>\n<h3 id=\"运行一个Word-Count-例子\"><a href=\"#运行一个Word-Count-例子\" class=\"headerlink\" title=\"运行一个Word Count 例子\"></a>运行一个Word Count 例子</h3></blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop jar /usr/<span class=\"built_in\">local</span>/Cellar/hadoop/2.7.3/libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 2 5</div></pre></td></tr></table></figure>\n<p>然后可以通过Web端进行监控。<br>Resource Manager: <a href=\"http://localhost:50070\" target=\"_blank\" rel=\"external\">http://localhost:50070</a><br>JobTracker: <a href=\"http://localhost:8088\" target=\"_blank\" rel=\"external\">http://localhost:8088</a><br>Specific Node Information: <a href=\"http://localhost:8042\" target=\"_blank\" rel=\"external\">http://localhost:8042</a><br>通过他们可以访问 HDFS filesystem, 也可以取得结果输出文件.</p>\n<h4 id=\"建立用户空间\"><a href=\"#建立用户空间\" class=\"headerlink\" title=\"建立用户空间\"></a>建立用户空间</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hadoop fs -ls / <span class=\"comment\"># 查看已有user </span></div><div class=\"line\">hdfs dfs -mkdir /user hdfs dfs -mkdir /user/$(whoami) <span class=\"comment\"># 这里是用户</span></div><div class=\"line\">hdfs dfs -put ~/Documents/Hadoop/demo/Ethics.md /user/yingchi <span class=\"comment\"># 上传local文件</span></div></pre></td></tr></table></figure>\n<p>运行<code>wordcount</code>,命令如下: </p>\n<blockquote>\n<p>注意：运行实例时，当前目录设置为 <code>/usr/local/Cellar/hadoop/2.7.0/</code></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">bin/hadoop jar libexec/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount /user/yingchi/Ethics.md /user/yingchi/out</div></pre></td></tr></table></figure>\n<p>运行完成后,在<code>/yingchi</code>目录下生成名为out的目录,其内容如下所示:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">Found 2 items</div><div class=\"line\">-rw-r--r--   1 PeiYingchi supergroup          0 2016-11-13 21:49 /user/yingchi/out/_SUCCESS</div><div class=\"line\">-rw-r--r--   1 PeiYingchi supergroup      15719 2016-11-13 21:49 /user/yingchi/out/part-r-00000</div></pre></td></tr></table></figure>"},{"title":"Hexo Icarus Theme Settings |Icarus主题设置","date":"2017-03-10T15:34:33.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\n关于Hexo Icarus主题配置的详细介绍，和相关的一些小技巧。\n<!--more -->\n\n## 前言\n\n此篇不介绍HEXO的搭建，只讲ICARUS的个性化配置，HEXO的配置在国内也有很多的教程。\n教程参考了[这里：作者MoRan_Sky](http://moransky.xyz/2017/01/13/HEXO%20-%20Icarus%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/), [这里：作者Lemon](http://lemon23.me/2016/10/21/Hexo%E7%9A%84%E8%BF%87%E5%9D%91%E8%AE%B0/)和[这里：作者Fengyu](http://qiufengyu.me/2016/10/14/theme-custom/)。\n\n发布者已经把基本的配置步骤写在了wiki里，还包括FQA，如果有什么解决不了的问题也可以到[Icarus GitHub Wiki](https://github.com/ppoffice/hexo-theme-icarus/wiki)去提问，或看有没有和你同样问题的回答。\n\n\n## ICARUS主题\n\n### 什么是ICARUS\n\n- 一种很清爽的HEXO主题\n- 安装了评论，分享框架，非常之方便\n\n### ICARUS安装\n\nICARUS主题包可以在[这里](https://github.com/ppoffice/hexo-theme-icarus)找到，但更多人是采用GIT来下载的，切换到HEXO根目录,然后打入：\n\n```zsh\ngit clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus\n```\n\n下载之后将根目录里的\n\n```yml\ntheme: 你之前的主题\n```\n\n改成：\n\n```yml\ntheme: icarus\n```\n\n接下来可以输入`hexo s`来在本机生成，然后在 https://localhost:4000 打开博客主页。\n\n## 主题设置\n### 自带可更改项目\n\n#### LOGO配置\n\n在博客页面的左上角，有一个LOGO，因为我们没有更改，所有这是作者的LOGO。\n\n先确定你的LOGO图片的后缀是.png，然后把你的LOGO图片重命名为logo.png，然后在你主题文件中的css/images/文件夹，将这张图片粘贴来替换之前的图片。\n\n#### 用户信息配置\n\n在主页的左边，这里显示的是博客作者的信息。\n\n打开主题的_config文件，找到profile一栏，你可以自定义你的profile信息。\n\n```yml _config.yml\nprofile:\n    enabled: true #是否显示博客作者信息在左侧\n    avatar: css/images/avatar.png #博客作者的头像，可以到相应的路径去替换\n    gravatar: #如果这里写入邮箱的话，头像会重新加载\n    author: PPOffice #作者名\n    author_title: Web Developer & Designer #一句话描述自己\n    location: Harbin, China #位置\n    follow: https://github.com/ppoffice/ #关注我按钮点击去到的网址\n```\n\n如果想把`FOLLOW`按钮稍作修改，变成`联系我`，并且把链接变成发送邮件到自己的邮箱的话：\n\n```yml\n    follow: mailto:wulala@123.com #效果是直接到发送邮件的界面，把languages/zh_CN.yml中的follow信息改成了联系我\n```\n#### 标签，分类和关于\n\n在最上方的菜单栏，我们点击”标签”，”分类”，”关于”都会显示无法找到文件，ICARUS主题很好，它为我们预设了这三个分类。\n\n在主题的`_source`文件里，把里头的三个文件全部复制，然后粘贴到HEXO跟目录的source文件夹，再刷新一下网页，就可以看见啦。\n\n#### 代码高亮\n\nICARUS主题预设了许多代码高亮的主题，具体的名称可以在主题目录的`source/css/_highlight`文件夹里找到。\n把主题的`_config`文件里的highlight类型换成你喜欢的类型。\n\n关于选择代码高亮语言的问题，请看[这里](http://www.tuicool.com/articles/aamiimI)。\n\n#### 搜索\n\nICARUS主题提供了3种搜索方式，个人喜欢insight，当然你也可以选择baidu或者swiftype。\n\n使用insight的话先把博客根目录下面的`_config.yml`里面的\n\n```yml\nsearch:\n    insight: false\n```\n改成\n\n```yml\nsearch:\n    insight: true\n```\n接下来需要安装一个小插件：\n\n```zsh\nnpm install hexo-generator-json-content --save\n```\n接下来可以刷新一下网页，点击右上角的搜索框，就会发现已经成功配置了。\n\n#### 删除搜索按钮\n\n如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的`layout/search/index.ejs`，将里面的:\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <button type=\"submit\" class=\"search-form-submit\"></button>\n</form>\n```\n改成：\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <!--button type=\"submit\" class=\"search-form-submit\"></button-->\n</form>\n```\n之后你就会发现那个搜索按钮没了。\n\n#### 多说评论\n\n评论是个很重要的东西，这可以让你和读者进行沟通。\n\n如果需要开启评论功能，需要先去相应的地方注册账号，然后按照提示把ID或名字添加上。点击[这里](https://github.com/ppoffice/hexo-theme-icarus/wiki/Comment) 跟着做就对了。剩下一些评论框自定义的样式就自行百度，或注册后在网站内进行更改设置就好了。\n\n多说：在多说官网先创建一个账号，然后再[这里](http://duoshuo.com/create-site/)创建一个站点，站点地址写博客的地址，在多说域名那里按照要求填入，填入的名称（也就是去掉.duoshuo.com）就是多说的shortname。\n\nICARUS已经为你写好了评论的框架，你不需要自己搭建，你只需要把主题的_config文件中的comment改成这样：\n\n```yml\ncomment:\n    disqus: #写入你的disqus shortname, if have\n    duoshuo: #写入你的多说shortname, if have\n    youyan: #写入你的友言shortname, if have\n```\n之后刷新页面，拉到下面，就会看到评论的界面啦。你可以前往你自己的多说域名然后自定义评论。\n对于想使用Disqus的用户，去Disqus官网新建个账户。Create a new forum， 然后按照官方指南把自己的forum integrate到博客来。现在对于Hexo平台还没有integrate好的选项，没关系，等到你选择自己的forum名字的时候记住那个shortname，到icarus主题里的`_config`文件里填上就好了。主题会帮你做好所有的integrate。\n\n#### 分享\n\n在本地使用bdshare，jiathis都是可以的，但在Github上神奇的消失了。我也试过bshare，dsshare，但还是神奇的消失了，读者可以自己的试一下。如果你也用Github Page，建议把主题的`_config`文件中的share改成:\n\n```\nshare: addtoany\n```\n\n#### 友情链接\n\nICARUS自带友情链接功能，在主题的`_config`中的miscellaneous里：\n\n```yml\nlinks:\n    显示名: 链接\n```\n比如：\n\n```yml\nlinks:\n    GitHub: http://github.com\n    MCBBS: http://mcbbs.net\n```\n\n### 个性化修改\n#### 删除搜索按钮\n\n如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的`layout/search/index.ejs`，将里面的:\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <button type=\"submit\" class=\"search-form-submit\"></button>\n</form>\n```\n改成：\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <!--button type=\"submit\" class=\"search-form-submit\"></button-->\n</form>\n```\n之后你就会发现那个搜索按钮没了。\n\n#### 把文章界面放宽\n\n在ICARUS主题里，如果你把屏幕放的宽一点，真正的文章就只有中间一小条，我们需要稍微把文章DIV放宽一点。\n\n把主题的`source/css/_variables.styl`文件打开，翻到43行左右，把：\n\n```\nmain-column = 7\n```\n改成\n\n```\nmain-column = 10 //或者也可以改成9，着看个人喜好，我觉得10正好合适\n```\n\n#### 设置友情链接为打开新页面\n\n之前的友情链接会在自身的博客覆盖，如果想要在新窗口打开（比较推荐这样）。\n\n把主题文件的`layout/widget/links.ejs`打开，把：\n\n```ejs\n<li>\n     <a href=\"<%- theme.miscellaneous.links[i] %>\"><%= i %></a>\n</li>\n```\n改成\n\n```ejs\n<li>\n     <a href=\"<%- theme.miscellaneous.links[i] %>\" target=\"_blank\"><%= i %></a>\n</li>\n```\n\n#### 社会链接\n\n在关注我按钮的下面的下面，有一排图标，这就是社会链接，也就是你在别的地方的首页。它是fa fa-icon，ICARUS自带FontAwesome，所有你再安装的时候只要写入class名就可以。详细的图标内容可以在[这里](http://www.yeahzan.com/fa/facss.html)找到。\n\n格式：`fa-后面的内容，图标: 链接`\n\n打开主题的`_config`文件：\n\n```yml\nsocial_links:\n    github: #你的Github首页\n    envelope: #你的邮箱\n    user: #博客主页\n    reorder: #博客分类页面\n    sort-amount-asc: #博客历程页面\n```\n在这里，我们只需要输入fa-后面的内容当图标就行了。\n\n#### 自定义社会链接title\n\n在社会链接的图标上停留的时候，会弹出图标名的title，但有时候我们想自定义title，怎么办呢？\n\n打开主题文件中的`layout/common/profile.ejs`文件，把：\n\n```ejs\n<a href=\"<%- url_for(theme.customize.social_links[i]) %>\"   target=\"_blank\" title=\"<%= i %>\" <%= tooltipClass %>>\n    <i class=\"fa fa-<%= i %>\"></i>\n</a>\n```\n\n改成：\n\n```ejs\n<a href=\"<%- url_for(theme.customize.social_links[i].link) %>\" target=\"_blank\" title=\"<%= theme.customize.social_links[i].title %>\" <%= tooltipClass %>>\n    <i class=\"fa fa-<%= i %>\"></i>\n</a>\n```\n那么我们在config里的social_links的表达内容就是：\n\n```yml\n图标名: \n    link: 链接\n    title: 鼠标选中的文本\n```\n\n#### 横幅和略缩图\n\n在HEXO的根目录source/_posts文件夹，里面有你的文章，ICARUS允许你为文字设置横幅与略缩图，切记都要在两个—之间输入。\n略缩图的设置方式：`thumbnail：图片`\n\n横幅的设置方式：`banner：图片`\n\n#### 修改代码的的边距\n\n修改之前的代码块长这样：\n\n<img src=\"https://imgur.com/jAcwO7V.jpg\" class=\"img-shadow\" />\n\n这个代码块的边距个人觉得有点大了。尤其对于只有一两行的代码，很占空间。\n从哪里能改呢？先从主体的CSS文件看起：`~/hexo_blog/themes/icarus/source/css/style.styl`\n里面与code有关的有两个地方，改了在第30行附近的设置，发现并没有什么变化。再往下看，发现这个另外一个文件被调用了 `@import \"_highlight/index\"`，于是我们去`~/hexo_blog/themes/icarus/source/css/——highlight/index.styl`看看：\n\n```styl index.styl\n.highlight\n    margin: 0px\n    display: block\n    overflow-x: auto\n    padding: 15px 20px\n    font-size: font-size\n    font-family: font-mono\n    line-height: font-size * line-height\n    table\n        margin: 0\n        width: auto\n        td\n            border: none\n        td.code\n            padding-right: 20px\n    .gutter\n        pre\n            color: #666\n            text-align: right\n            padding-right: 20px\n```\n我把`padding`相关的参数改成10px\n\n#### 给图片加阴影\n有时候添加的图片可能会与文章背景混淆，使得读者看不清到底哪部分是图片哪部分是文章。使用`img-shadow`为图片添加边角阴影可以更加凸显图片的位置，也能更美观。\n在`article.styl`里面加入以下：\n\n```styl\n.img-shadow\n  box-shadow: 3px 2px 3px #ddd;\n```\n关于CSS3 shadow属性的参数具体可以参考[W3School的Tutorial](https://www.w3schools.com/css/css3_shadows.asp)\n\n使用HTML语法插入图片:\n\n```html\n<img src=\"http://test.jpg\" class=\"img-shadow\" />\n\n```\n\n\n#### 修改引用的渲染格式\n改动之前的是这样的：\n<img src=\"https://imgur.com/RQ1uF3x.jpg\" class=\"img-shadow\" />\n\n\n个人不是很喜欢这种模式。不简洁，也占空间。\n同样从从主体的CSS文件看起：`~/hexo_blog/themes/icarus/source/css/style.styl`，发现调用了`@import \"_partial/article\"`。打开它发现对blockquote的设置如下：\n\n```style article.styl\n    blockquote\n        position: static\n        font-family: font-serif\n        font-size: 1.1em\n        margin: 0 -20px\n        padding: 10px 20px 10px 54px\n        background: #fcfcfc\n        border-left: 4px solid #eee\n        &:before\n            top: 20px\n            left: 10px\n            content: \"\\f10d\"\n            color: #e2e2e2\n            font-size: 32px;\n            font-family: FontAwesome\n            text-align: center\n            position: static\n        footer\n            font-size: font-size\n            margin: line-height 0\n            font-family: font-sans\n            cite\n                &:before\n                    content: \"—\"\n                    padding: 0 0.5em\n```\n我把它改为下面这样\n\n```styl\n    blockquote\n        position: static\n        font-family: font-sans\n        font-size: 1em\n        margin: 0 0 1.3em 0\n        padding: 6px\n        background: #fcfcfc\n        border-left: 5px solid #ef9024\n        border-top: 1px solid $grey-light\n        border-bottom: 1px solid $grey-light\n        border-right: 1px solid $grey-light\n        cite::before {\n            content: \"-\";\n            padding: 0 5px;\n        }\n    blockquote p {\n        margin: 5px; }\n```\n\n> testing blockquote\n\n#### 在Post页面关闭侧边栏\n点进去文章的时候觉得侧边栏(分类，标签...)让人觉得有点多余，不能专心看文。就想找方法把它设置为只在首页显示而不在文章页面显示。\n\n打开`~/hexo_blog/themes/icarus/layout/layout.ejs`会找到下面一行代码\n\n```ejs layout.ejs\n<% if (theme.custom.sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n```\n`theme.custom.sidebar` 指的是主题`_config.yml`里面的参数。我们可以对应的找到`custom`下面的`sidebar`。发现它只有`left`, `right`两个设置。\n\n没关系，那我们就自己加个参数在`_config.yml`里面吧：\n\n```yml _config.yml\n# Added by Yingchi\npost_sidebar: false  #display sidebar in post page if true\nhome_sidebar: true #display sidebar in home page if true\n```\n现在在回到`layout.ejs`把之前的三行改成下面这样的：\n\n```ejs layout.ejs\n<% if (is_home() && theme.home_sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n<% if (is_post() && theme.post_sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n```\n> `is_post()`, `is_home()` 是hexo自带的函数\n\nWait, 以为现在就万事大吉了么，事情并没有这么简单。。你会发现文章的宽度并不会自动调整。打开JavaScript Console会发现文章所在元素是`<section id=\"main\">`，我们现在就去主题的文件里找对它的设置。\n找到文件`~/hexo_blog/themes/icarus/source/css/style.styl`\n\n```styl style.styl\n#main\n    @media mq-normal\n        column(main-column)\n    @media mq-tablet\n        if sidebar\n            column(main-column-tablet)\n        else\n            width: 100%\n```\n改成下面这样：\n\n```styl style.styl\n#main\n    @media mq-normal\n        column(main-column)\n    @media mq-tablet\n        if is_home() and home_sidebar\n            column(main-column-tablet)\n        if is_post() and post_sidebar\n            column(main-column-tablet)\n        else\n            width: 100%\n```\n> `@media xxx`, `side_bar` etc 都是在别处(`_variables.styl`)定义好的CSS规则和变量\n\n接下来打开 `~/hexo_blog/themes/icarus/source/css/_variables.styl`\n在`//Sidebar`这个部分加入我们在上面用到的变量：\n\n```styl _variables.styl\n// Sidebar\nsidebar = hexo-config(\"customize.sidebar\")\nthumbnail-default-small = 'images/thumb-default-small.png'\nhome_sidebar = hexo-config(\"home_sidebar\")\npost_sidebar = hexo-config(\"post_sidebar\")\n```\n\n#### 更多\n如果还想自定义CSS的话，主题样式文件都在`themes/icarus/source/css/_partial`里，对照着页面文件找到对应的class样式去修改吧。\n\n比如我这里发现在打开文章的时候，显示的效果并不是很理想。\n<img src=\"https://imgur.com/j3hbYi7.jpg\" class=\"img-shadow\" width=\"600px\">\n\n时候可以在测试页面按`cmd+opt+j`调出Javascript console查看元素。会发现它是从根目录下`public/css/style.css`而来，但是我们直接改这里的话是没有用的。因为所有`public`文件夹下都是由`hexo g`生成的。\n\n所以这里可以更改我们所用主题的css生成文件。例如我的在这个路径下`~/hexo_blog/themes/icarus/source/css`\n\n桑心的是，我试图修改了`_variables.styl`里面的sidebar-column之类，然后运行\n\n```bash\n$ hexo clean\nINFO  Deleted database.\nINFO  Deleted public folder.\n$ hexo g\n$ hexo s\n```\n发现并没有什么*用。。。 \n过了几天意识到作为没有基础的小白，思路已经错了。我想要做到的是在文章页面只显示文章，并且居中，而不现实profile和sidebar。在主CSS文件里面改的话，它并不能辨别这个页面是否是文章页面，改动`@media`下面的内容会对所有页面的`#main`元素造成影响。\n\n所以去查看了关于Hexo主题开发的一些教程，发现对于不同类型页面一般是由主题下的`layout`文件夹里的`*.layout`文件控制。\n查了简单的`ejs`语法资料，修改成下面的样子\n\n```html layout.ejs\n    <div id=\"container\">\n        <%- partial('common/header') %>\n        <div class=\"outer\">\n            <% if (theme.customize.profile.enabled && !is_post()) { %>\n                <%- partial('common/profile', null, {cache: !config.relative_link}) %>\n            <% } %>\n            <% if (is_post()) { %>\n                <script type='text/javascript'>\n                $('body').append(\"<style type='text/css'>@media screen and (min-width: 1200px) { #main {margin: auto; width: 70%; display: block; float:none;}}</style>\");\n                </script>\n                <script type='text/javascript'>\n                document.querySelector('style').textContent += \"@media screen and (max-width: 1199px) and (min-width: 800px) { #main {margin: auto; width: 70%; display: block; float:none;}}\"\n                </script>\n            <% } %>\n            <section id=\"main\"><%- body %></section>\n            <% if (is_home() && theme.home_sidebar) { %>\n                <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n            <% } %>\n            <% if (is_post() && theme.post_sidebar) { %>\n                <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n            <% } %>\n        </div>\n        <%- partial('common/footer', null, {cache: !config.relative_link}) %>\n        <%- partial('common/scripts') %>\n    </div>\n    \n```\n> 注意：代码内两种改变css的方法都可用，放在这里只是给自己做个记录\n\n然后就好啦~\n\n\n","source":"_posts/hexo-icarus-settings.md","raw":"---\ntitle: Hexo Icarus Theme Settings |Icarus主题设置\ndate: 2017-03-10 23:34:33\ntags: hexo\ncategories: Hexo\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\n关于Hexo Icarus主题配置的详细介绍，和相关的一些小技巧。\n<!--more -->\n\n## 前言\n\n此篇不介绍HEXO的搭建，只讲ICARUS的个性化配置，HEXO的配置在国内也有很多的教程。\n教程参考了[这里：作者MoRan_Sky](http://moransky.xyz/2017/01/13/HEXO%20-%20Icarus%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/), [这里：作者Lemon](http://lemon23.me/2016/10/21/Hexo%E7%9A%84%E8%BF%87%E5%9D%91%E8%AE%B0/)和[这里：作者Fengyu](http://qiufengyu.me/2016/10/14/theme-custom/)。\n\n发布者已经把基本的配置步骤写在了wiki里，还包括FQA，如果有什么解决不了的问题也可以到[Icarus GitHub Wiki](https://github.com/ppoffice/hexo-theme-icarus/wiki)去提问，或看有没有和你同样问题的回答。\n\n\n## ICARUS主题\n\n### 什么是ICARUS\n\n- 一种很清爽的HEXO主题\n- 安装了评论，分享框架，非常之方便\n\n### ICARUS安装\n\nICARUS主题包可以在[这里](https://github.com/ppoffice/hexo-theme-icarus)找到，但更多人是采用GIT来下载的，切换到HEXO根目录,然后打入：\n\n```zsh\ngit clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus\n```\n\n下载之后将根目录里的\n\n```yml\ntheme: 你之前的主题\n```\n\n改成：\n\n```yml\ntheme: icarus\n```\n\n接下来可以输入`hexo s`来在本机生成，然后在 https://localhost:4000 打开博客主页。\n\n## 主题设置\n### 自带可更改项目\n\n#### LOGO配置\n\n在博客页面的左上角，有一个LOGO，因为我们没有更改，所有这是作者的LOGO。\n\n先确定你的LOGO图片的后缀是.png，然后把你的LOGO图片重命名为logo.png，然后在你主题文件中的css/images/文件夹，将这张图片粘贴来替换之前的图片。\n\n#### 用户信息配置\n\n在主页的左边，这里显示的是博客作者的信息。\n\n打开主题的_config文件，找到profile一栏，你可以自定义你的profile信息。\n\n```yml _config.yml\nprofile:\n    enabled: true #是否显示博客作者信息在左侧\n    avatar: css/images/avatar.png #博客作者的头像，可以到相应的路径去替换\n    gravatar: #如果这里写入邮箱的话，头像会重新加载\n    author: PPOffice #作者名\n    author_title: Web Developer & Designer #一句话描述自己\n    location: Harbin, China #位置\n    follow: https://github.com/ppoffice/ #关注我按钮点击去到的网址\n```\n\n如果想把`FOLLOW`按钮稍作修改，变成`联系我`，并且把链接变成发送邮件到自己的邮箱的话：\n\n```yml\n    follow: mailto:wulala@123.com #效果是直接到发送邮件的界面，把languages/zh_CN.yml中的follow信息改成了联系我\n```\n#### 标签，分类和关于\n\n在最上方的菜单栏，我们点击”标签”，”分类”，”关于”都会显示无法找到文件，ICARUS主题很好，它为我们预设了这三个分类。\n\n在主题的`_source`文件里，把里头的三个文件全部复制，然后粘贴到HEXO跟目录的source文件夹，再刷新一下网页，就可以看见啦。\n\n#### 代码高亮\n\nICARUS主题预设了许多代码高亮的主题，具体的名称可以在主题目录的`source/css/_highlight`文件夹里找到。\n把主题的`_config`文件里的highlight类型换成你喜欢的类型。\n\n关于选择代码高亮语言的问题，请看[这里](http://www.tuicool.com/articles/aamiimI)。\n\n#### 搜索\n\nICARUS主题提供了3种搜索方式，个人喜欢insight，当然你也可以选择baidu或者swiftype。\n\n使用insight的话先把博客根目录下面的`_config.yml`里面的\n\n```yml\nsearch:\n    insight: false\n```\n改成\n\n```yml\nsearch:\n    insight: true\n```\n接下来需要安装一个小插件：\n\n```zsh\nnpm install hexo-generator-json-content --save\n```\n接下来可以刷新一下网页，点击右上角的搜索框，就会发现已经成功配置了。\n\n#### 删除搜索按钮\n\n如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的`layout/search/index.ejs`，将里面的:\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <button type=\"submit\" class=\"search-form-submit\"></button>\n</form>\n```\n改成：\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <!--button type=\"submit\" class=\"search-form-submit\"></button-->\n</form>\n```\n之后你就会发现那个搜索按钮没了。\n\n#### 多说评论\n\n评论是个很重要的东西，这可以让你和读者进行沟通。\n\n如果需要开启评论功能，需要先去相应的地方注册账号，然后按照提示把ID或名字添加上。点击[这里](https://github.com/ppoffice/hexo-theme-icarus/wiki/Comment) 跟着做就对了。剩下一些评论框自定义的样式就自行百度，或注册后在网站内进行更改设置就好了。\n\n多说：在多说官网先创建一个账号，然后再[这里](http://duoshuo.com/create-site/)创建一个站点，站点地址写博客的地址，在多说域名那里按照要求填入，填入的名称（也就是去掉.duoshuo.com）就是多说的shortname。\n\nICARUS已经为你写好了评论的框架，你不需要自己搭建，你只需要把主题的_config文件中的comment改成这样：\n\n```yml\ncomment:\n    disqus: #写入你的disqus shortname, if have\n    duoshuo: #写入你的多说shortname, if have\n    youyan: #写入你的友言shortname, if have\n```\n之后刷新页面，拉到下面，就会看到评论的界面啦。你可以前往你自己的多说域名然后自定义评论。\n对于想使用Disqus的用户，去Disqus官网新建个账户。Create a new forum， 然后按照官方指南把自己的forum integrate到博客来。现在对于Hexo平台还没有integrate好的选项，没关系，等到你选择自己的forum名字的时候记住那个shortname，到icarus主题里的`_config`文件里填上就好了。主题会帮你做好所有的integrate。\n\n#### 分享\n\n在本地使用bdshare，jiathis都是可以的，但在Github上神奇的消失了。我也试过bshare，dsshare，但还是神奇的消失了，读者可以自己的试一下。如果你也用Github Page，建议把主题的`_config`文件中的share改成:\n\n```\nshare: addtoany\n```\n\n#### 友情链接\n\nICARUS自带友情链接功能，在主题的`_config`中的miscellaneous里：\n\n```yml\nlinks:\n    显示名: 链接\n```\n比如：\n\n```yml\nlinks:\n    GitHub: http://github.com\n    MCBBS: http://mcbbs.net\n```\n\n### 个性化修改\n#### 删除搜索按钮\n\n如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的`layout/search/index.ejs`，将里面的:\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <button type=\"submit\" class=\"search-form-submit\"></button>\n</form>\n```\n改成：\n\n```html\n<form class=\"search-form\">\n    <input type=\"text\" class=\"ins-search-input search-form-input\" placeholder=\"<%= __('index.search') %>\" />\n    <!--button type=\"submit\" class=\"search-form-submit\"></button-->\n</form>\n```\n之后你就会发现那个搜索按钮没了。\n\n#### 把文章界面放宽\n\n在ICARUS主题里，如果你把屏幕放的宽一点，真正的文章就只有中间一小条，我们需要稍微把文章DIV放宽一点。\n\n把主题的`source/css/_variables.styl`文件打开，翻到43行左右，把：\n\n```\nmain-column = 7\n```\n改成\n\n```\nmain-column = 10 //或者也可以改成9，着看个人喜好，我觉得10正好合适\n```\n\n#### 设置友情链接为打开新页面\n\n之前的友情链接会在自身的博客覆盖，如果想要在新窗口打开（比较推荐这样）。\n\n把主题文件的`layout/widget/links.ejs`打开，把：\n\n```ejs\n<li>\n     <a href=\"<%- theme.miscellaneous.links[i] %>\"><%= i %></a>\n</li>\n```\n改成\n\n```ejs\n<li>\n     <a href=\"<%- theme.miscellaneous.links[i] %>\" target=\"_blank\"><%= i %></a>\n</li>\n```\n\n#### 社会链接\n\n在关注我按钮的下面的下面，有一排图标，这就是社会链接，也就是你在别的地方的首页。它是fa fa-icon，ICARUS自带FontAwesome，所有你再安装的时候只要写入class名就可以。详细的图标内容可以在[这里](http://www.yeahzan.com/fa/facss.html)找到。\n\n格式：`fa-后面的内容，图标: 链接`\n\n打开主题的`_config`文件：\n\n```yml\nsocial_links:\n    github: #你的Github首页\n    envelope: #你的邮箱\n    user: #博客主页\n    reorder: #博客分类页面\n    sort-amount-asc: #博客历程页面\n```\n在这里，我们只需要输入fa-后面的内容当图标就行了。\n\n#### 自定义社会链接title\n\n在社会链接的图标上停留的时候，会弹出图标名的title，但有时候我们想自定义title，怎么办呢？\n\n打开主题文件中的`layout/common/profile.ejs`文件，把：\n\n```ejs\n<a href=\"<%- url_for(theme.customize.social_links[i]) %>\"   target=\"_blank\" title=\"<%= i %>\" <%= tooltipClass %>>\n    <i class=\"fa fa-<%= i %>\"></i>\n</a>\n```\n\n改成：\n\n```ejs\n<a href=\"<%- url_for(theme.customize.social_links[i].link) %>\" target=\"_blank\" title=\"<%= theme.customize.social_links[i].title %>\" <%= tooltipClass %>>\n    <i class=\"fa fa-<%= i %>\"></i>\n</a>\n```\n那么我们在config里的social_links的表达内容就是：\n\n```yml\n图标名: \n    link: 链接\n    title: 鼠标选中的文本\n```\n\n#### 横幅和略缩图\n\n在HEXO的根目录source/_posts文件夹，里面有你的文章，ICARUS允许你为文字设置横幅与略缩图，切记都要在两个—之间输入。\n略缩图的设置方式：`thumbnail：图片`\n\n横幅的设置方式：`banner：图片`\n\n#### 修改代码的的边距\n\n修改之前的代码块长这样：\n\n<img src=\"https://imgur.com/jAcwO7V.jpg\" class=\"img-shadow\" />\n\n这个代码块的边距个人觉得有点大了。尤其对于只有一两行的代码，很占空间。\n从哪里能改呢？先从主体的CSS文件看起：`~/hexo_blog/themes/icarus/source/css/style.styl`\n里面与code有关的有两个地方，改了在第30行附近的设置，发现并没有什么变化。再往下看，发现这个另外一个文件被调用了 `@import \"_highlight/index\"`，于是我们去`~/hexo_blog/themes/icarus/source/css/——highlight/index.styl`看看：\n\n```styl index.styl\n.highlight\n    margin: 0px\n    display: block\n    overflow-x: auto\n    padding: 15px 20px\n    font-size: font-size\n    font-family: font-mono\n    line-height: font-size * line-height\n    table\n        margin: 0\n        width: auto\n        td\n            border: none\n        td.code\n            padding-right: 20px\n    .gutter\n        pre\n            color: #666\n            text-align: right\n            padding-right: 20px\n```\n我把`padding`相关的参数改成10px\n\n#### 给图片加阴影\n有时候添加的图片可能会与文章背景混淆，使得读者看不清到底哪部分是图片哪部分是文章。使用`img-shadow`为图片添加边角阴影可以更加凸显图片的位置，也能更美观。\n在`article.styl`里面加入以下：\n\n```styl\n.img-shadow\n  box-shadow: 3px 2px 3px #ddd;\n```\n关于CSS3 shadow属性的参数具体可以参考[W3School的Tutorial](https://www.w3schools.com/css/css3_shadows.asp)\n\n使用HTML语法插入图片:\n\n```html\n<img src=\"http://test.jpg\" class=\"img-shadow\" />\n\n```\n\n\n#### 修改引用的渲染格式\n改动之前的是这样的：\n<img src=\"https://imgur.com/RQ1uF3x.jpg\" class=\"img-shadow\" />\n\n\n个人不是很喜欢这种模式。不简洁，也占空间。\n同样从从主体的CSS文件看起：`~/hexo_blog/themes/icarus/source/css/style.styl`，发现调用了`@import \"_partial/article\"`。打开它发现对blockquote的设置如下：\n\n```style article.styl\n    blockquote\n        position: static\n        font-family: font-serif\n        font-size: 1.1em\n        margin: 0 -20px\n        padding: 10px 20px 10px 54px\n        background: #fcfcfc\n        border-left: 4px solid #eee\n        &:before\n            top: 20px\n            left: 10px\n            content: \"\\f10d\"\n            color: #e2e2e2\n            font-size: 32px;\n            font-family: FontAwesome\n            text-align: center\n            position: static\n        footer\n            font-size: font-size\n            margin: line-height 0\n            font-family: font-sans\n            cite\n                &:before\n                    content: \"—\"\n                    padding: 0 0.5em\n```\n我把它改为下面这样\n\n```styl\n    blockquote\n        position: static\n        font-family: font-sans\n        font-size: 1em\n        margin: 0 0 1.3em 0\n        padding: 6px\n        background: #fcfcfc\n        border-left: 5px solid #ef9024\n        border-top: 1px solid $grey-light\n        border-bottom: 1px solid $grey-light\n        border-right: 1px solid $grey-light\n        cite::before {\n            content: \"-\";\n            padding: 0 5px;\n        }\n    blockquote p {\n        margin: 5px; }\n```\n\n> testing blockquote\n\n#### 在Post页面关闭侧边栏\n点进去文章的时候觉得侧边栏(分类，标签...)让人觉得有点多余，不能专心看文。就想找方法把它设置为只在首页显示而不在文章页面显示。\n\n打开`~/hexo_blog/themes/icarus/layout/layout.ejs`会找到下面一行代码\n\n```ejs layout.ejs\n<% if (theme.custom.sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n```\n`theme.custom.sidebar` 指的是主题`_config.yml`里面的参数。我们可以对应的找到`custom`下面的`sidebar`。发现它只有`left`, `right`两个设置。\n\n没关系，那我们就自己加个参数在`_config.yml`里面吧：\n\n```yml _config.yml\n# Added by Yingchi\npost_sidebar: false  #display sidebar in post page if true\nhome_sidebar: true #display sidebar in home page if true\n```\n现在在回到`layout.ejs`把之前的三行改成下面这样的：\n\n```ejs layout.ejs\n<% if (is_home() && theme.home_sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n<% if (is_post() && theme.post_sidebar) { %>\n    <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n<% } %>\n```\n> `is_post()`, `is_home()` 是hexo自带的函数\n\nWait, 以为现在就万事大吉了么，事情并没有这么简单。。你会发现文章的宽度并不会自动调整。打开JavaScript Console会发现文章所在元素是`<section id=\"main\">`，我们现在就去主题的文件里找对它的设置。\n找到文件`~/hexo_blog/themes/icarus/source/css/style.styl`\n\n```styl style.styl\n#main\n    @media mq-normal\n        column(main-column)\n    @media mq-tablet\n        if sidebar\n            column(main-column-tablet)\n        else\n            width: 100%\n```\n改成下面这样：\n\n```styl style.styl\n#main\n    @media mq-normal\n        column(main-column)\n    @media mq-tablet\n        if is_home() and home_sidebar\n            column(main-column-tablet)\n        if is_post() and post_sidebar\n            column(main-column-tablet)\n        else\n            width: 100%\n```\n> `@media xxx`, `side_bar` etc 都是在别处(`_variables.styl`)定义好的CSS规则和变量\n\n接下来打开 `~/hexo_blog/themes/icarus/source/css/_variables.styl`\n在`//Sidebar`这个部分加入我们在上面用到的变量：\n\n```styl _variables.styl\n// Sidebar\nsidebar = hexo-config(\"customize.sidebar\")\nthumbnail-default-small = 'images/thumb-default-small.png'\nhome_sidebar = hexo-config(\"home_sidebar\")\npost_sidebar = hexo-config(\"post_sidebar\")\n```\n\n#### 更多\n如果还想自定义CSS的话，主题样式文件都在`themes/icarus/source/css/_partial`里，对照着页面文件找到对应的class样式去修改吧。\n\n比如我这里发现在打开文章的时候，显示的效果并不是很理想。\n<img src=\"https://imgur.com/j3hbYi7.jpg\" class=\"img-shadow\" width=\"600px\">\n\n时候可以在测试页面按`cmd+opt+j`调出Javascript console查看元素。会发现它是从根目录下`public/css/style.css`而来，但是我们直接改这里的话是没有用的。因为所有`public`文件夹下都是由`hexo g`生成的。\n\n所以这里可以更改我们所用主题的css生成文件。例如我的在这个路径下`~/hexo_blog/themes/icarus/source/css`\n\n桑心的是，我试图修改了`_variables.styl`里面的sidebar-column之类，然后运行\n\n```bash\n$ hexo clean\nINFO  Deleted database.\nINFO  Deleted public folder.\n$ hexo g\n$ hexo s\n```\n发现并没有什么*用。。。 \n过了几天意识到作为没有基础的小白，思路已经错了。我想要做到的是在文章页面只显示文章，并且居中，而不现实profile和sidebar。在主CSS文件里面改的话，它并不能辨别这个页面是否是文章页面，改动`@media`下面的内容会对所有页面的`#main`元素造成影响。\n\n所以去查看了关于Hexo主题开发的一些教程，发现对于不同类型页面一般是由主题下的`layout`文件夹里的`*.layout`文件控制。\n查了简单的`ejs`语法资料，修改成下面的样子\n\n```html layout.ejs\n    <div id=\"container\">\n        <%- partial('common/header') %>\n        <div class=\"outer\">\n            <% if (theme.customize.profile.enabled && !is_post()) { %>\n                <%- partial('common/profile', null, {cache: !config.relative_link}) %>\n            <% } %>\n            <% if (is_post()) { %>\n                <script type='text/javascript'>\n                $('body').append(\"<style type='text/css'>@media screen and (min-width: 1200px) { #main {margin: auto; width: 70%; display: block; float:none;}}</style>\");\n                </script>\n                <script type='text/javascript'>\n                document.querySelector('style').textContent += \"@media screen and (max-width: 1199px) and (min-width: 800px) { #main {margin: auto; width: 70%; display: block; float:none;}}\"\n                </script>\n            <% } %>\n            <section id=\"main\"><%- body %></section>\n            <% if (is_home() && theme.home_sidebar) { %>\n                <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n            <% } %>\n            <% if (is_post() && theme.post_sidebar) { %>\n                <%- partial('common/sidebar', null, {cache: !config.relative_link}) %>\n            <% } %>\n        </div>\n        <%- partial('common/footer', null, {cache: !config.relative_link}) %>\n        <%- partial('common/scripts') %>\n    </div>\n    \n```\n> 注意：代码内两种改变css的方法都可用，放在这里只是给自己做个记录\n\n然后就好啦~\n\n\n","slug":"hexo-icarus-settings","published":1,"updated":"2017-03-19T08:08:39.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiv7000t0x1xdis2s4d3","content":"<p>关于Hexo Icarus主题配置的详细介绍，和相关的一些小技巧。<br><a id=\"more\"></a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>此篇不介绍HEXO的搭建，只讲ICARUS的个性化配置，HEXO的配置在国内也有很多的教程。<br>教程参考了<a href=\"http://moransky.xyz/2017/01/13/HEXO%20-%20Icarus%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/\" target=\"_blank\" rel=\"external\">这里：作者MoRan_Sky</a>, <a href=\"http://lemon23.me/2016/10/21/Hexo%E7%9A%84%E8%BF%87%E5%9D%91%E8%AE%B0/\" target=\"_blank\" rel=\"external\">这里：作者Lemon</a>和<a href=\"http://qiufengyu.me/2016/10/14/theme-custom/\" target=\"_blank\" rel=\"external\">这里：作者Fengyu</a>。</p>\n<p>发布者已经把基本的配置步骤写在了wiki里，还包括FQA，如果有什么解决不了的问题也可以到<a href=\"https://github.com/ppoffice/hexo-theme-icarus/wiki\" target=\"_blank\" rel=\"external\">Icarus GitHub Wiki</a>去提问，或看有没有和你同样问题的回答。</p>\n<h2 id=\"ICARUS主题\"><a href=\"#ICARUS主题\" class=\"headerlink\" title=\"ICARUS主题\"></a>ICARUS主题</h2><h3 id=\"什么是ICARUS\"><a href=\"#什么是ICARUS\" class=\"headerlink\" title=\"什么是ICARUS\"></a>什么是ICARUS</h3><ul>\n<li>一种很清爽的HEXO主题</li>\n<li>安装了评论，分享框架，非常之方便</li>\n</ul>\n<h3 id=\"ICARUS安装\"><a href=\"#ICARUS安装\" class=\"headerlink\" title=\"ICARUS安装\"></a>ICARUS安装</h3><p>ICARUS主题包可以在<a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"external\">这里</a>找到，但更多人是采用GIT来下载的，切换到HEXO根目录,然后打入：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus</div></pre></td></tr></table></figure>\n<p>下载之后将根目录里的</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">你之前的主题</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">icarus</span></div></pre></td></tr></table></figure>\n<p>接下来可以输入<code>hexo s</code>来在本机生成，然后在 <a href=\"https://localhost:4000\" target=\"_blank\" rel=\"external\">https://localhost:4000</a> 打开博客主页。</p>\n<h2 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h2><h3 id=\"自带可更改项目\"><a href=\"#自带可更改项目\" class=\"headerlink\" title=\"自带可更改项目\"></a>自带可更改项目</h3><h4 id=\"LOGO配置\"><a href=\"#LOGO配置\" class=\"headerlink\" title=\"LOGO配置\"></a>LOGO配置</h4><p>在博客页面的左上角，有一个LOGO，因为我们没有更改，所有这是作者的LOGO。</p>\n<p>先确定你的LOGO图片的后缀是.png，然后把你的LOGO图片重命名为logo.png，然后在你主题文件中的css/images/文件夹，将这张图片粘贴来替换之前的图片。</p>\n<h4 id=\"用户信息配置\"><a href=\"#用户信息配置\" class=\"headerlink\" title=\"用户信息配置\"></a>用户信息配置</h4><p>在主页的左边，这里显示的是博客作者的信息。</p>\n<p>打开主题的_config文件，找到profile一栏，你可以自定义你的profile信息。</p>\n<figure class=\"highlight yml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">profile:</span></div><div class=\"line\"><span class=\"attr\">    enabled:</span> <span class=\"literal\">true</span> <span class=\"comment\">#是否显示博客作者信息在左侧</span></div><div class=\"line\"><span class=\"attr\">    avatar:</span> <span class=\"string\">css/images/avatar.png</span> <span class=\"comment\">#博客作者的头像，可以到相应的路径去替换</span></div><div class=\"line\"><span class=\"attr\">    gravatar:</span> <span class=\"comment\">#如果这里写入邮箱的话，头像会重新加载</span></div><div class=\"line\"><span class=\"attr\">    author:</span> <span class=\"string\">PPOffice</span> <span class=\"comment\">#作者名</span></div><div class=\"line\"><span class=\"attr\">    author_title:</span> <span class=\"string\">Web</span> <span class=\"string\">Developer</span> <span class=\"string\">&amp;</span> <span class=\"string\">Designer</span> <span class=\"comment\">#一句话描述自己</span></div><div class=\"line\"><span class=\"attr\">    location:</span> <span class=\"string\">Harbin,</span> <span class=\"string\">China</span> <span class=\"comment\">#位置</span></div><div class=\"line\"><span class=\"attr\">    follow:</span> <span class=\"attr\">https://github.com/ppoffice/</span> <span class=\"comment\">#关注我按钮点击去到的网址</span></div></pre></td></tr></table></figure>\n<p>如果想把<code>FOLLOW</code>按钮稍作修改，变成<code>联系我</code>，并且把链接变成发送邮件到自己的邮箱的话：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">follow:</span> <span class=\"attr\">mailto:wulala@123.com</span> <span class=\"comment\">#效果是直接到发送邮件的界面，把languages/zh_CN.yml中的follow信息改成了联系我</span></div></pre></td></tr></table></figure>\n<h4 id=\"标签，分类和关于\"><a href=\"#标签，分类和关于\" class=\"headerlink\" title=\"标签，分类和关于\"></a>标签，分类和关于</h4><p>在最上方的菜单栏，我们点击”标签”，”分类”，”关于”都会显示无法找到文件，ICARUS主题很好，它为我们预设了这三个分类。</p>\n<p>在主题的<code>_source</code>文件里，把里头的三个文件全部复制，然后粘贴到HEXO跟目录的source文件夹，再刷新一下网页，就可以看见啦。</p>\n<h4 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h4><p>ICARUS主题预设了许多代码高亮的主题，具体的名称可以在主题目录的<code>source/css/_highlight</code>文件夹里找到。<br>把主题的<code>_config</code>文件里的highlight类型换成你喜欢的类型。</p>\n<p>关于选择代码高亮语言的问题，请看<a href=\"http://www.tuicool.com/articles/aamiimI\" target=\"_blank\" rel=\"external\">这里</a>。</p>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><p>ICARUS主题提供了3种搜索方式，个人喜欢insight，当然你也可以选择baidu或者swiftype。</p>\n<p>使用insight的话先把博客根目录下面的<code>_config.yml</code>里面的</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">    insight:</span> <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">    insight:</span> <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>接下来需要安装一个小插件：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-generator-json-content --save</div></pre></td></tr></table></figure>\n<p>接下来可以刷新一下网页，点击右上角的搜索框，就会发现已经成功配置了。</p>\n<h4 id=\"删除搜索按钮\"><a href=\"#删除搜索按钮\" class=\"headerlink\" title=\"删除搜索按钮\"></a>删除搜索按钮</h4><p>如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的<code>layout/search/index.ejs</code>，将里面的:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form-submit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>之后你就会发现那个搜索按钮没了。</p>\n<h4 id=\"多说评论\"><a href=\"#多说评论\" class=\"headerlink\" title=\"多说评论\"></a>多说评论</h4><p>评论是个很重要的东西，这可以让你和读者进行沟通。</p>\n<p>如果需要开启评论功能，需要先去相应的地方注册账号，然后按照提示把ID或名字添加上。点击<a href=\"https://github.com/ppoffice/hexo-theme-icarus/wiki/Comment\" target=\"_blank\" rel=\"external\">这里</a> 跟着做就对了。剩下一些评论框自定义的样式就自行百度，或注册后在网站内进行更改设置就好了。</p>\n<p>多说：在多说官网先创建一个账号，然后再<a href=\"http://duoshuo.com/create-site/\" target=\"_blank\" rel=\"external\">这里</a>创建一个站点，站点地址写博客的地址，在多说域名那里按照要求填入，填入的名称（也就是去掉.duoshuo.com）就是多说的shortname。</p>\n<p>ICARUS已经为你写好了评论的框架，你不需要自己搭建，你只需要把主题的_config文件中的comment改成这样：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">comment:</span></div><div class=\"line\"><span class=\"attr\">    disqus:</span> <span class=\"comment\">#写入你的disqus shortname, if have</span></div><div class=\"line\"><span class=\"attr\">    duoshuo:</span> <span class=\"comment\">#写入你的多说shortname, if have</span></div><div class=\"line\"><span class=\"attr\">    youyan:</span> <span class=\"comment\">#写入你的友言shortname, if have</span></div></pre></td></tr></table></figure>\n<p>之后刷新页面，拉到下面，就会看到评论的界面啦。你可以前往你自己的多说域名然后自定义评论。<br>对于想使用Disqus的用户，去Disqus官网新建个账户。Create a new forum， 然后按照官方指南把自己的forum integrate到博客来。现在对于Hexo平台还没有integrate好的选项，没关系，等到你选择自己的forum名字的时候记住那个shortname，到icarus主题里的<code>_config</code>文件里填上就好了。主题会帮你做好所有的integrate。</p>\n<h4 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h4><p>在本地使用bdshare，jiathis都是可以的，但在Github上神奇的消失了。我也试过bshare，dsshare，但还是神奇的消失了，读者可以自己的试一下。如果你也用Github Page，建议把主题的<code>_config</code>文件中的share改成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">share: addtoany</div></pre></td></tr></table></figure>\n<h4 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h4><p>ICARUS自带友情链接功能，在主题的<code>_config</code>中的miscellaneous里：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">links:</span></div><div class=\"line\">    <span class=\"string\">显示名:</span> <span class=\"string\">链接</span></div></pre></td></tr></table></figure>\n<p>比如：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">links:</span></div><div class=\"line\"><span class=\"attr\">    GitHub:</span> <span class=\"attr\">http://github.com</span></div><div class=\"line\"><span class=\"attr\">    MCBBS:</span> <span class=\"attr\">http://mcbbs.net</span></div></pre></td></tr></table></figure>\n<h3 id=\"个性化修改\"><a href=\"#个性化修改\" class=\"headerlink\" title=\"个性化修改\"></a>个性化修改</h3><h4 id=\"删除搜索按钮-1\"><a href=\"#删除搜索按钮-1\" class=\"headerlink\" title=\"删除搜索按钮\"></a>删除搜索按钮</h4><p>如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的<code>layout/search/index.ejs</code>，将里面的:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form-submit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>之后你就会发现那个搜索按钮没了。</p>\n<h4 id=\"把文章界面放宽\"><a href=\"#把文章界面放宽\" class=\"headerlink\" title=\"把文章界面放宽\"></a>把文章界面放宽</h4><p>在ICARUS主题里，如果你把屏幕放的宽一点，真正的文章就只有中间一小条，我们需要稍微把文章DIV放宽一点。</p>\n<p>把主题的<code>source/css/_variables.styl</code>文件打开，翻到43行左右，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">main-column = 7</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">main-column = 10 //或者也可以改成9，着看个人喜好，我觉得10正好合适</div></pre></td></tr></table></figure>\n<h4 id=\"设置友情链接为打开新页面\"><a href=\"#设置友情链接为打开新页面\" class=\"headerlink\" title=\"设置友情链接为打开新页面\"></a>设置友情链接为打开新页面</h4><p>之前的友情链接会在自身的博客覆盖，如果想要在新窗口打开（比较推荐这样）。</p>\n<p>把主题文件的<code>layout/widget/links.ejs</code>打开，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;</div><div class=\"line\">     &lt;a href=&quot;&lt;%- theme.miscellaneous.links[i] %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;</div><div class=\"line\">&lt;/li&gt;</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;</div><div class=\"line\">     &lt;a href=&quot;&lt;%- theme.miscellaneous.links[i] %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;</div><div class=\"line\">&lt;/li&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"社会链接\"><a href=\"#社会链接\" class=\"headerlink\" title=\"社会链接\"></a>社会链接</h4><p>在关注我按钮的下面的下面，有一排图标，这就是社会链接，也就是你在别的地方的首页。它是fa fa-icon，ICARUS自带FontAwesome，所有你再安装的时候只要写入class名就可以。详细的图标内容可以在<a href=\"http://www.yeahzan.com/fa/facss.html\" target=\"_blank\" rel=\"external\">这里</a>找到。</p>\n<p>格式：<code>fa-后面的内容，图标: 链接</code></p>\n<p>打开主题的<code>_config</code>文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">social_links:</span></div><div class=\"line\"><span class=\"attr\">    github:</span> <span class=\"comment\">#你的Github首页</span></div><div class=\"line\"><span class=\"attr\">    envelope:</span> <span class=\"comment\">#你的邮箱</span></div><div class=\"line\"><span class=\"attr\">    user:</span> <span class=\"comment\">#博客主页</span></div><div class=\"line\"><span class=\"attr\">    reorder:</span> <span class=\"comment\">#博客分类页面</span></div><div class=\"line\"><span class=\"attr\">    sort-amount-asc:</span> <span class=\"comment\">#博客历程页面</span></div></pre></td></tr></table></figure>\n<p>在这里，我们只需要输入fa-后面的内容当图标就行了。</p>\n<h4 id=\"自定义社会链接title\"><a href=\"#自定义社会链接title\" class=\"headerlink\" title=\"自定义社会链接title\"></a>自定义社会链接title</h4><p>在社会链接的图标上停留的时候，会弹出图标名的title，但有时候我们想自定义title，怎么办呢？</p>\n<p>打开主题文件中的<code>layout/common/profile.ejs</code>文件，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&lt;%- url_for(theme.customize.social_links[i]) %&gt;&quot;   target=&quot;_blank&quot; title=&quot;&lt;%= i %&gt;&quot; &lt;%= tooltipClass %&gt;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&lt;%- url_for(theme.customize.social_links[i].link) %&gt;&quot; target=&quot;_blank&quot; title=&quot;&lt;%= theme.customize.social_links[i].title %&gt;&quot; &lt;%= tooltipClass %&gt;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>那么我们在config里的social_links的表达内容就是：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">图标名:</span> </div><div class=\"line\"><span class=\"attr\">    link:</span> <span class=\"string\">链接</span></div><div class=\"line\"><span class=\"attr\">    title:</span> <span class=\"string\">鼠标选中的文本</span></div></pre></td></tr></table></figure>\n<h4 id=\"横幅和略缩图\"><a href=\"#横幅和略缩图\" class=\"headerlink\" title=\"横幅和略缩图\"></a>横幅和略缩图</h4><p>在HEXO的根目录source/_posts文件夹，里面有你的文章，ICARUS允许你为文字设置横幅与略缩图，切记都要在两个—之间输入。<br>略缩图的设置方式：<code>thumbnail：图片</code></p>\n<p>横幅的设置方式：<code>banner：图片</code></p>\n<h4 id=\"修改代码的的边距\"><a href=\"#修改代码的的边距\" class=\"headerlink\" title=\"修改代码的的边距\"></a>修改代码的的边距</h4><p>修改之前的代码块长这样：</p>\n<p><img src=\"https://imgur.com/jAcwO7V.jpg\" class=\"img-shadow\"></p>\n<p>这个代码块的边距个人觉得有点大了。尤其对于只有一两行的代码，很占空间。<br>从哪里能改呢？先从主体的CSS文件看起：<code>~/hexo_blog/themes/icarus/source/css/style.styl</code><br>里面与code有关的有两个地方，改了在第30行附近的设置，发现并没有什么变化。再往下看，发现这个另外一个文件被调用了 <code>@import &quot;_highlight/index&quot;</code>，于是我们去<code>~/hexo_blog/themes/icarus/source/css/——highlight/index.styl</code>看看：</p>\n<figure class=\"highlight styl\"><figcaption><span>index.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">.highlight</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: block</div><div class=\"line\">    <span class=\"attribute\">overflow-x</span>: auto</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span> <span class=\"number\">20px</span></div><div class=\"line\">    <span class=\"attribute\">font-size</span>: font-size</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: font-mono</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: font-size * line-height</div><div class=\"line\">    table</div><div class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"attribute\">width</span>: auto</div><div class=\"line\">        td</div><div class=\"line\">            <span class=\"attribute\">border</span>: none</div><div class=\"line\">        <span class=\"selector-tag\">td</span>.code</div><div class=\"line\">            <span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span></div><div class=\"line\">    .gutter</div><div class=\"line\">        pre</div><div class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#666</span></div><div class=\"line\">            <span class=\"attribute\">text-align</span>: right</div><div class=\"line\">            <span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span></div></pre></td></tr></table></figure>\n<p>我把<code>padding</code>相关的参数改成10px</p>\n<h4 id=\"给图片加阴影\"><a href=\"#给图片加阴影\" class=\"headerlink\" title=\"给图片加阴影\"></a>给图片加阴影</h4><p>有时候添加的图片可能会与文章背景混淆，使得读者看不清到底哪部分是图片哪部分是文章。使用<code>img-shadow</code>为图片添加边角阴影可以更加凸显图片的位置，也能更美观。<br>在<code>article.styl</code>里面加入以下：</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.img-shadow</div><div class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">3px</span> <span class=\"number\">#ddd</span>;</div></pre></td></tr></table></figure>\n<p>关于CSS3 shadow属性的参数具体可以参考<a href=\"https://www.w3schools.com/css/css3_shadows.asp\" target=\"_blank\" rel=\"external\">W3School的Tutorial</a></p>\n<p>使用HTML语法插入图片:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://test.jpg\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-shadow\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"修改引用的渲染格式\"><a href=\"#修改引用的渲染格式\" class=\"headerlink\" title=\"修改引用的渲染格式\"></a>修改引用的渲染格式</h4><p>改动之前的是这样的：<br><img src=\"https://imgur.com/RQ1uF3x.jpg\" class=\"img-shadow\"></p>\n<p>个人不是很喜欢这种模式。不简洁，也占空间。<br>同样从从主体的CSS文件看起：<code>~/hexo_blog/themes/icarus/source/css/style.styl</code>，发现调用了<code>@import &quot;_partial/article&quot;</code>。打开它发现对blockquote的设置如下：</p>\n<figure class=\"highlight plain\"><figcaption><span>article.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">blockquote</div><div class=\"line\">    position: static</div><div class=\"line\">    font-family: font-serif</div><div class=\"line\">    font-size: 1.1em</div><div class=\"line\">    margin: 0 -20px</div><div class=\"line\">    padding: 10px 20px 10px 54px</div><div class=\"line\">    background: #fcfcfc</div><div class=\"line\">    border-left: 4px solid #eee</div><div class=\"line\">    &amp;:before</div><div class=\"line\">        top: 20px</div><div class=\"line\">        left: 10px</div><div class=\"line\">        content: &quot;\\f10d&quot;</div><div class=\"line\">        color: #e2e2e2</div><div class=\"line\">        font-size: 32px;</div><div class=\"line\">        font-family: FontAwesome</div><div class=\"line\">        text-align: center</div><div class=\"line\">        position: static</div><div class=\"line\">    footer</div><div class=\"line\">        font-size: font-size</div><div class=\"line\">        margin: line-height 0</div><div class=\"line\">        font-family: font-sans</div><div class=\"line\">        cite</div><div class=\"line\">            &amp;:before</div><div class=\"line\">                content: &quot;—&quot;</div><div class=\"line\">                padding: 0 0.5em</div></pre></td></tr></table></figure>\n<p>我把它改为下面这样</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">blockquote</div><div class=\"line\">    <span class=\"attribute\">position</span>: static</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: font-sans</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1em</span></div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1.3em</span> <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span></div><div class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fcfcfc</span></div><div class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ef9024</span></div><div class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"selector-tag\">cite</span>::before &#123;</div><div class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"-\"</span>;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"selector-tag\">blockquote</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>; &#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>testing blockquote</p>\n</blockquote>\n<h4 id=\"在Post页面关闭侧边栏\"><a href=\"#在Post页面关闭侧边栏\" class=\"headerlink\" title=\"在Post页面关闭侧边栏\"></a>在Post页面关闭侧边栏</h4><p>点进去文章的时候觉得侧边栏(分类，标签…)让人觉得有点多余，不能专心看文。就想找方法把它设置为只在首页显示而不在文章页面显示。</p>\n<p>打开<code>~/hexo_blog/themes/icarus/layout/layout.ejs</code>会找到下面一行代码</p>\n<figure class=\"highlight plain\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (theme.custom.sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<p><code>theme.custom.sidebar</code> 指的是主题<code>_config.yml</code>里面的参数。我们可以对应的找到<code>custom</code>下面的<code>sidebar</code>。发现它只有<code>left</code>, <code>right</code>两个设置。</p>\n<p>没关系，那我们就自己加个参数在<code>_config.yml</code>里面吧：</p>\n<figure class=\"highlight yml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Added by Yingchi</span></div><div class=\"line\"><span class=\"attr\">post_sidebar:</span> <span class=\"literal\">false</span>  <span class=\"comment\">#display sidebar in post page if true</span></div><div class=\"line\"><span class=\"attr\">home_sidebar:</span> <span class=\"literal\">true</span> <span class=\"comment\">#display sidebar in home page if true</span></div></pre></td></tr></table></figure>\n<p>现在在回到<code>layout.ejs</code>把之前的三行改成下面这样的：</p>\n<figure class=\"highlight plain\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (is_home() &amp;&amp; theme.home_sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div><div class=\"line\">&lt;% if (is_post() &amp;&amp; theme.post_sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>is_post()</code>, <code>is_home()</code> 是hexo自带的函数</p>\n</blockquote>\n<p>Wait, 以为现在就万事大吉了么，事情并没有这么简单。。你会发现文章的宽度并不会自动调整。打开JavaScript Console会发现文章所在元素是<code>&lt;section id=&quot;main&quot;&gt;</code>，我们现在就去主题的文件里找对它的设置。<br>找到文件<code>~/hexo_blog/themes/icarus/source/css/style.styl</code></p>\n<figure class=\"highlight styl\"><figcaption><span>style.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#main</div><div class=\"line\">    @media mq-<span class=\"attribute\">normal</span></div><div class=\"line\">        column(main-column)</div><div class=\"line\">    @media mq-tablet</div><div class=\"line\">        <span class=\"keyword\">if</span> sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div></pre></td></tr></table></figure>\n<p>改成下面这样：</p>\n<figure class=\"highlight styl\"><figcaption><span>style.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#main</div><div class=\"line\">    @media mq-<span class=\"attribute\">normal</span></div><div class=\"line\">        column(main-column)</div><div class=\"line\">    @media mq-tablet</div><div class=\"line\">        <span class=\"keyword\">if</span> is_home() and home_sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">if</span> is_post() and post_sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>@media xxx</code>, <code>side_bar</code> etc 都是在别处(<code>_variables.styl</code>)定义好的CSS规则和变量</p>\n</blockquote>\n<p>接下来打开 <code>~/hexo_blog/themes/icarus/source/css/_variables.styl</code><br>在<code>//Sidebar</code>这个部分加入我们在上面用到的变量：</p>\n<figure class=\"highlight styl\"><figcaption><span>_variables.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Sidebar</span></div><div class=\"line\">sidebar = hexo-config(<span class=\"string\">\"customize.sidebar\"</span>)</div><div class=\"line\">thumbnail-default-small = <span class=\"string\">'images/thumb-default-small.png'</span></div><div class=\"line\">home_sidebar = hexo-config(<span class=\"string\">\"home_sidebar\"</span>)</div><div class=\"line\">post_sidebar = hexo-config(<span class=\"string\">\"post_sidebar\"</span>)</div></pre></td></tr></table></figure>\n<h4 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h4><p>如果还想自定义CSS的话，主题样式文件都在<code>themes/icarus/source/css/_partial</code>里，对照着页面文件找到对应的class样式去修改吧。</p>\n<p>比如我这里发现在打开文章的时候，显示的效果并不是很理想。<br><img src=\"https://imgur.com/j3hbYi7.jpg\" class=\"img-shadow\" width=\"600px\"></p>\n<p>时候可以在测试页面按<code>cmd+opt+j</code>调出Javascript console查看元素。会发现它是从根目录下<code>public/css/style.css</code>而来，但是我们直接改这里的话是没有用的。因为所有<code>public</code>文件夹下都是由<code>hexo g</code>生成的。</p>\n<p>所以这里可以更改我们所用主题的css生成文件。例如我的在这个路径下<code>~/hexo_blog/themes/icarus/source/css</code></p>\n<p>桑心的是，我试图修改了<code>_variables.styl</code>里面的sidebar-column之类，然后运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">INFO  Deleted database.</div><div class=\"line\">INFO  Deleted public folder.</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>发现并没有什么*用。。。<br>过了几天意识到作为没有基础的小白，思路已经错了。我想要做到的是在文章页面只显示文章，并且居中，而不现实profile和sidebar。在主CSS文件里面改的话，它并不能辨别这个页面是否是文章页面，改动<code>@media</code>下面的内容会对所有页面的<code>#main</code>元素造成影响。</p>\n<p>所以去查看了关于Hexo主题开发的一些教程，发现对于不同类型页面一般是由主题下的<code>layout</code>文件夹里的<code>*.layout</code>文件控制。<br>查了简单的<code>ejs</code>语法资料，修改成下面的样子</p>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">header</span>') %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"outer\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.customize.profile.enabled</span> &amp;&amp; !<span class=\"attr\">is_post</span>()) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">profile</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_post</span>()) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"xml\">            $('body').append(\"<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/css'</span>&gt;</span><span class=\"undefined\">@media screen and (min-width: 1200px) &#123; #main &#123;margin: auto; width: 70%; display: block; float:none;&#125;&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\");</span></div><div class=\"line\"><span class=\"undefined\">            </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'style'</span>).textContent += <span class=\"string\">\"@media screen and (max-width: 1199px) and (min-width: 800px) &#123; #main &#123;margin: auto; width: 70%; display: block; float:none;&#125;&#125;\"</span></span></div><div class=\"line\"><span class=\"undefined\">            </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_home</span>() &amp;&amp; <span class=\"attr\">theme.home_sidebar</span>) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">sidebar</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_post</span>() &amp;&amp; <span class=\"attr\">theme.post_sidebar</span>) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">sidebar</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">footer</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">scripts</span>') %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：代码内两种改变css的方法都可用，放在这里只是给自己做个记录</p>\n</blockquote>\n<p>然后就好啦~</p>\n","site":{"data":{}},"excerpt":"<p>关于Hexo Icarus主题配置的详细介绍，和相关的一些小技巧。<br>","more":"</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>此篇不介绍HEXO的搭建，只讲ICARUS的个性化配置，HEXO的配置在国内也有很多的教程。<br>教程参考了<a href=\"http://moransky.xyz/2017/01/13/HEXO%20-%20Icarus%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/\" target=\"_blank\" rel=\"external\">这里：作者MoRan_Sky</a>, <a href=\"http://lemon23.me/2016/10/21/Hexo%E7%9A%84%E8%BF%87%E5%9D%91%E8%AE%B0/\" target=\"_blank\" rel=\"external\">这里：作者Lemon</a>和<a href=\"http://qiufengyu.me/2016/10/14/theme-custom/\" target=\"_blank\" rel=\"external\">这里：作者Fengyu</a>。</p>\n<p>发布者已经把基本的配置步骤写在了wiki里，还包括FQA，如果有什么解决不了的问题也可以到<a href=\"https://github.com/ppoffice/hexo-theme-icarus/wiki\" target=\"_blank\" rel=\"external\">Icarus GitHub Wiki</a>去提问，或看有没有和你同样问题的回答。</p>\n<h2 id=\"ICARUS主题\"><a href=\"#ICARUS主题\" class=\"headerlink\" title=\"ICARUS主题\"></a>ICARUS主题</h2><h3 id=\"什么是ICARUS\"><a href=\"#什么是ICARUS\" class=\"headerlink\" title=\"什么是ICARUS\"></a>什么是ICARUS</h3><ul>\n<li>一种很清爽的HEXO主题</li>\n<li>安装了评论，分享框架，非常之方便</li>\n</ul>\n<h3 id=\"ICARUS安装\"><a href=\"#ICARUS安装\" class=\"headerlink\" title=\"ICARUS安装\"></a>ICARUS安装</h3><p>ICARUS主题包可以在<a href=\"https://github.com/ppoffice/hexo-theme-icarus\" target=\"_blank\" rel=\"external\">这里</a>找到，但更多人是采用GIT来下载的，切换到HEXO根目录,然后打入：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus</div></pre></td></tr></table></figure>\n<p>下载之后将根目录里的</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">你之前的主题</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">theme:</span> <span class=\"string\">icarus</span></div></pre></td></tr></table></figure>\n<p>接下来可以输入<code>hexo s</code>来在本机生成，然后在 <a href=\"https://localhost:4000\" target=\"_blank\" rel=\"external\">https://localhost:4000</a> 打开博客主页。</p>\n<h2 id=\"主题设置\"><a href=\"#主题设置\" class=\"headerlink\" title=\"主题设置\"></a>主题设置</h2><h3 id=\"自带可更改项目\"><a href=\"#自带可更改项目\" class=\"headerlink\" title=\"自带可更改项目\"></a>自带可更改项目</h3><h4 id=\"LOGO配置\"><a href=\"#LOGO配置\" class=\"headerlink\" title=\"LOGO配置\"></a>LOGO配置</h4><p>在博客页面的左上角，有一个LOGO，因为我们没有更改，所有这是作者的LOGO。</p>\n<p>先确定你的LOGO图片的后缀是.png，然后把你的LOGO图片重命名为logo.png，然后在你主题文件中的css/images/文件夹，将这张图片粘贴来替换之前的图片。</p>\n<h4 id=\"用户信息配置\"><a href=\"#用户信息配置\" class=\"headerlink\" title=\"用户信息配置\"></a>用户信息配置</h4><p>在主页的左边，这里显示的是博客作者的信息。</p>\n<p>打开主题的_config文件，找到profile一栏，你可以自定义你的profile信息。</p>\n<figure class=\"highlight yml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">profile:</span></div><div class=\"line\"><span class=\"attr\">    enabled:</span> <span class=\"literal\">true</span> <span class=\"comment\">#是否显示博客作者信息在左侧</span></div><div class=\"line\"><span class=\"attr\">    avatar:</span> <span class=\"string\">css/images/avatar.png</span> <span class=\"comment\">#博客作者的头像，可以到相应的路径去替换</span></div><div class=\"line\"><span class=\"attr\">    gravatar:</span> <span class=\"comment\">#如果这里写入邮箱的话，头像会重新加载</span></div><div class=\"line\"><span class=\"attr\">    author:</span> <span class=\"string\">PPOffice</span> <span class=\"comment\">#作者名</span></div><div class=\"line\"><span class=\"attr\">    author_title:</span> <span class=\"string\">Web</span> <span class=\"string\">Developer</span> <span class=\"string\">&amp;</span> <span class=\"string\">Designer</span> <span class=\"comment\">#一句话描述自己</span></div><div class=\"line\"><span class=\"attr\">    location:</span> <span class=\"string\">Harbin,</span> <span class=\"string\">China</span> <span class=\"comment\">#位置</span></div><div class=\"line\"><span class=\"attr\">    follow:</span> <span class=\"attr\">https://github.com/ppoffice/</span> <span class=\"comment\">#关注我按钮点击去到的网址</span></div></pre></td></tr></table></figure>\n<p>如果想把<code>FOLLOW</code>按钮稍作修改，变成<code>联系我</code>，并且把链接变成发送邮件到自己的邮箱的话：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">follow:</span> <span class=\"attr\">mailto:wulala@123.com</span> <span class=\"comment\">#效果是直接到发送邮件的界面，把languages/zh_CN.yml中的follow信息改成了联系我</span></div></pre></td></tr></table></figure>\n<h4 id=\"标签，分类和关于\"><a href=\"#标签，分类和关于\" class=\"headerlink\" title=\"标签，分类和关于\"></a>标签，分类和关于</h4><p>在最上方的菜单栏，我们点击”标签”，”分类”，”关于”都会显示无法找到文件，ICARUS主题很好，它为我们预设了这三个分类。</p>\n<p>在主题的<code>_source</code>文件里，把里头的三个文件全部复制，然后粘贴到HEXO跟目录的source文件夹，再刷新一下网页，就可以看见啦。</p>\n<h4 id=\"代码高亮\"><a href=\"#代码高亮\" class=\"headerlink\" title=\"代码高亮\"></a>代码高亮</h4><p>ICARUS主题预设了许多代码高亮的主题，具体的名称可以在主题目录的<code>source/css/_highlight</code>文件夹里找到。<br>把主题的<code>_config</code>文件里的highlight类型换成你喜欢的类型。</p>\n<p>关于选择代码高亮语言的问题，请看<a href=\"http://www.tuicool.com/articles/aamiimI\" target=\"_blank\" rel=\"external\">这里</a>。</p>\n<h4 id=\"搜索\"><a href=\"#搜索\" class=\"headerlink\" title=\"搜索\"></a>搜索</h4><p>ICARUS主题提供了3种搜索方式，个人喜欢insight，当然你也可以选择baidu或者swiftype。</p>\n<p>使用insight的话先把博客根目录下面的<code>_config.yml</code>里面的</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">    insight:</span> <span class=\"literal\">false</span></div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">search:</span></div><div class=\"line\"><span class=\"attr\">    insight:</span> <span class=\"literal\">true</span></div></pre></td></tr></table></figure>\n<p>接下来需要安装一个小插件：</p>\n<figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-generator-json-content --save</div></pre></td></tr></table></figure>\n<p>接下来可以刷新一下网页，点击右上角的搜索框，就会发现已经成功配置了。</p>\n<h4 id=\"删除搜索按钮\"><a href=\"#删除搜索按钮\" class=\"headerlink\" title=\"删除搜索按钮\"></a>删除搜索按钮</h4><p>如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的<code>layout/search/index.ejs</code>，将里面的:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form-submit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>之后你就会发现那个搜索按钮没了。</p>\n<h4 id=\"多说评论\"><a href=\"#多说评论\" class=\"headerlink\" title=\"多说评论\"></a>多说评论</h4><p>评论是个很重要的东西，这可以让你和读者进行沟通。</p>\n<p>如果需要开启评论功能，需要先去相应的地方注册账号，然后按照提示把ID或名字添加上。点击<a href=\"https://github.com/ppoffice/hexo-theme-icarus/wiki/Comment\" target=\"_blank\" rel=\"external\">这里</a> 跟着做就对了。剩下一些评论框自定义的样式就自行百度，或注册后在网站内进行更改设置就好了。</p>\n<p>多说：在多说官网先创建一个账号，然后再<a href=\"http://duoshuo.com/create-site/\" target=\"_blank\" rel=\"external\">这里</a>创建一个站点，站点地址写博客的地址，在多说域名那里按照要求填入，填入的名称（也就是去掉.duoshuo.com）就是多说的shortname。</p>\n<p>ICARUS已经为你写好了评论的框架，你不需要自己搭建，你只需要把主题的_config文件中的comment改成这样：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">comment:</span></div><div class=\"line\"><span class=\"attr\">    disqus:</span> <span class=\"comment\">#写入你的disqus shortname, if have</span></div><div class=\"line\"><span class=\"attr\">    duoshuo:</span> <span class=\"comment\">#写入你的多说shortname, if have</span></div><div class=\"line\"><span class=\"attr\">    youyan:</span> <span class=\"comment\">#写入你的友言shortname, if have</span></div></pre></td></tr></table></figure>\n<p>之后刷新页面，拉到下面，就会看到评论的界面啦。你可以前往你自己的多说域名然后自定义评论。<br>对于想使用Disqus的用户，去Disqus官网新建个账户。Create a new forum， 然后按照官方指南把自己的forum integrate到博客来。现在对于Hexo平台还没有integrate好的选项，没关系，等到你选择自己的forum名字的时候记住那个shortname，到icarus主题里的<code>_config</code>文件里填上就好了。主题会帮你做好所有的integrate。</p>\n<h4 id=\"分享\"><a href=\"#分享\" class=\"headerlink\" title=\"分享\"></a>分享</h4><p>在本地使用bdshare，jiathis都是可以的，但在Github上神奇的消失了。我也试过bshare，dsshare，但还是神奇的消失了，读者可以自己的试一下。如果你也用Github Page，建议把主题的<code>_config</code>文件中的share改成:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">share: addtoany</div></pre></td></tr></table></figure>\n<h4 id=\"友情链接\"><a href=\"#友情链接\" class=\"headerlink\" title=\"友情链接\"></a>友情链接</h4><p>ICARUS自带友情链接功能，在主题的<code>_config</code>中的miscellaneous里：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">links:</span></div><div class=\"line\">    <span class=\"string\">显示名:</span> <span class=\"string\">链接</span></div></pre></td></tr></table></figure>\n<p>比如：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">links:</span></div><div class=\"line\"><span class=\"attr\">    GitHub:</span> <span class=\"attr\">http://github.com</span></div><div class=\"line\"><span class=\"attr\">    MCBBS:</span> <span class=\"attr\">http://mcbbs.net</span></div></pre></td></tr></table></figure>\n<h3 id=\"个性化修改\"><a href=\"#个性化修改\" class=\"headerlink\" title=\"个性化修改\"></a>个性化修改</h3><h4 id=\"删除搜索按钮-1\"><a href=\"#删除搜索按钮-1\" class=\"headerlink\" title=\"删除搜索按钮\"></a>删除搜索按钮</h4><p>如果使用的是insight搜索，所以那个搜索按钮没有什么意义，可以找到主题文件中的<code>layout/search/index.ejs</code>，将里面的:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form-submit\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">class</span>=<span class=\"string\">\"search-form\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"ins-search-input search-form-input\"</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">\"&lt;%= __('index.search') %&gt;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--button type=\"submit\" class=\"search-form-submit\"&gt;&lt;/button--&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div></pre></td></tr></table></figure>\n<p>之后你就会发现那个搜索按钮没了。</p>\n<h4 id=\"把文章界面放宽\"><a href=\"#把文章界面放宽\" class=\"headerlink\" title=\"把文章界面放宽\"></a>把文章界面放宽</h4><p>在ICARUS主题里，如果你把屏幕放的宽一点，真正的文章就只有中间一小条，我们需要稍微把文章DIV放宽一点。</p>\n<p>把主题的<code>source/css/_variables.styl</code>文件打开，翻到43行左右，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">main-column = 7</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">main-column = 10 //或者也可以改成9，着看个人喜好，我觉得10正好合适</div></pre></td></tr></table></figure>\n<h4 id=\"设置友情链接为打开新页面\"><a href=\"#设置友情链接为打开新页面\" class=\"headerlink\" title=\"设置友情链接为打开新页面\"></a>设置友情链接为打开新页面</h4><p>之前的友情链接会在自身的博客覆盖，如果想要在新窗口打开（比较推荐这样）。</p>\n<p>把主题文件的<code>layout/widget/links.ejs</code>打开，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;</div><div class=\"line\">     &lt;a href=&quot;&lt;%- theme.miscellaneous.links[i] %&gt;&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;</div><div class=\"line\">&lt;/li&gt;</div></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;li&gt;</div><div class=\"line\">     &lt;a href=&quot;&lt;%- theme.miscellaneous.links[i] %&gt;&quot; target=&quot;_blank&quot;&gt;&lt;%= i %&gt;&lt;/a&gt;</div><div class=\"line\">&lt;/li&gt;</div></pre></td></tr></table></figure>\n<h4 id=\"社会链接\"><a href=\"#社会链接\" class=\"headerlink\" title=\"社会链接\"></a>社会链接</h4><p>在关注我按钮的下面的下面，有一排图标，这就是社会链接，也就是你在别的地方的首页。它是fa fa-icon，ICARUS自带FontAwesome，所有你再安装的时候只要写入class名就可以。详细的图标内容可以在<a href=\"http://www.yeahzan.com/fa/facss.html\" target=\"_blank\" rel=\"external\">这里</a>找到。</p>\n<p>格式：<code>fa-后面的内容，图标: 链接</code></p>\n<p>打开主题的<code>_config</code>文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attr\">social_links:</span></div><div class=\"line\"><span class=\"attr\">    github:</span> <span class=\"comment\">#你的Github首页</span></div><div class=\"line\"><span class=\"attr\">    envelope:</span> <span class=\"comment\">#你的邮箱</span></div><div class=\"line\"><span class=\"attr\">    user:</span> <span class=\"comment\">#博客主页</span></div><div class=\"line\"><span class=\"attr\">    reorder:</span> <span class=\"comment\">#博客分类页面</span></div><div class=\"line\"><span class=\"attr\">    sort-amount-asc:</span> <span class=\"comment\">#博客历程页面</span></div></pre></td></tr></table></figure>\n<p>在这里，我们只需要输入fa-后面的内容当图标就行了。</p>\n<h4 id=\"自定义社会链接title\"><a href=\"#自定义社会链接title\" class=\"headerlink\" title=\"自定义社会链接title\"></a>自定义社会链接title</h4><p>在社会链接的图标上停留的时候，会弹出图标名的title，但有时候我们想自定义title，怎么办呢？</p>\n<p>打开主题文件中的<code>layout/common/profile.ejs</code>文件，把：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&lt;%- url_for(theme.customize.social_links[i]) %&gt;&quot;   target=&quot;_blank&quot; title=&quot;&lt;%= i %&gt;&quot; &lt;%= tooltipClass %&gt;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>改成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;a href=&quot;&lt;%- url_for(theme.customize.social_links[i].link) %&gt;&quot; target=&quot;_blank&quot; title=&quot;&lt;%= theme.customize.social_links[i].title %&gt;&quot; &lt;%= tooltipClass %&gt;&gt;</div><div class=\"line\">    &lt;i class=&quot;fa fa-&lt;%= i %&gt;&quot;&gt;&lt;/i&gt;</div><div class=\"line\">&lt;/a&gt;</div></pre></td></tr></table></figure>\n<p>那么我们在config里的social_links的表达内容就是：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">图标名:</span> </div><div class=\"line\"><span class=\"attr\">    link:</span> <span class=\"string\">链接</span></div><div class=\"line\"><span class=\"attr\">    title:</span> <span class=\"string\">鼠标选中的文本</span></div></pre></td></tr></table></figure>\n<h4 id=\"横幅和略缩图\"><a href=\"#横幅和略缩图\" class=\"headerlink\" title=\"横幅和略缩图\"></a>横幅和略缩图</h4><p>在HEXO的根目录source/_posts文件夹，里面有你的文章，ICARUS允许你为文字设置横幅与略缩图，切记都要在两个—之间输入。<br>略缩图的设置方式：<code>thumbnail：图片</code></p>\n<p>横幅的设置方式：<code>banner：图片</code></p>\n<h4 id=\"修改代码的的边距\"><a href=\"#修改代码的的边距\" class=\"headerlink\" title=\"修改代码的的边距\"></a>修改代码的的边距</h4><p>修改之前的代码块长这样：</p>\n<p><img src=\"https://imgur.com/jAcwO7V.jpg\" class=\"img-shadow\"></p>\n<p>这个代码块的边距个人觉得有点大了。尤其对于只有一两行的代码，很占空间。<br>从哪里能改呢？先从主体的CSS文件看起：<code>~/hexo_blog/themes/icarus/source/css/style.styl</code><br>里面与code有关的有两个地方，改了在第30行附近的设置，发现并没有什么变化。再往下看，发现这个另外一个文件被调用了 <code>@import &quot;_highlight/index&quot;</code>，于是我们去<code>~/hexo_blog/themes/icarus/source/css/——highlight/index.styl</code>看看：</p>\n<figure class=\"highlight styl\"><figcaption><span>index.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">.highlight</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0px</span></div><div class=\"line\">    <span class=\"attribute\">display</span>: block</div><div class=\"line\">    <span class=\"attribute\">overflow-x</span>: auto</div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span> <span class=\"number\">20px</span></div><div class=\"line\">    <span class=\"attribute\">font-size</span>: font-size</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: font-mono</div><div class=\"line\">    <span class=\"attribute\">line-height</span>: font-size * line-height</div><div class=\"line\">    table</div><div class=\"line\">        <span class=\"attribute\">margin</span>: <span class=\"number\">0</span></div><div class=\"line\">        <span class=\"attribute\">width</span>: auto</div><div class=\"line\">        td</div><div class=\"line\">            <span class=\"attribute\">border</span>: none</div><div class=\"line\">        <span class=\"selector-tag\">td</span>.code</div><div class=\"line\">            <span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span></div><div class=\"line\">    .gutter</div><div class=\"line\">        pre</div><div class=\"line\">            <span class=\"attribute\">color</span>: <span class=\"number\">#666</span></div><div class=\"line\">            <span class=\"attribute\">text-align</span>: right</div><div class=\"line\">            <span class=\"attribute\">padding-right</span>: <span class=\"number\">20px</span></div></pre></td></tr></table></figure>\n<p>我把<code>padding</code>相关的参数改成10px</p>\n<h4 id=\"给图片加阴影\"><a href=\"#给图片加阴影\" class=\"headerlink\" title=\"给图片加阴影\"></a>给图片加阴影</h4><p>有时候添加的图片可能会与文章背景混淆，使得读者看不清到底哪部分是图片哪部分是文章。使用<code>img-shadow</code>为图片添加边角阴影可以更加凸显图片的位置，也能更美观。<br>在<code>article.styl</code>里面加入以下：</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.img-shadow</div><div class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">3px</span> <span class=\"number\">2px</span> <span class=\"number\">3px</span> <span class=\"number\">#ddd</span>;</div></pre></td></tr></table></figure>\n<p>关于CSS3 shadow属性的参数具体可以参考<a href=\"https://www.w3schools.com/css/css3_shadows.asp\" target=\"_blank\" rel=\"external\">W3School的Tutorial</a></p>\n<p>使用HTML语法插入图片:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://test.jpg\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"img-shadow\"</span> /&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"修改引用的渲染格式\"><a href=\"#修改引用的渲染格式\" class=\"headerlink\" title=\"修改引用的渲染格式\"></a>修改引用的渲染格式</h4><p>改动之前的是这样的：<br><img src=\"https://imgur.com/RQ1uF3x.jpg\" class=\"img-shadow\"></p>\n<p>个人不是很喜欢这种模式。不简洁，也占空间。<br>同样从从主体的CSS文件看起：<code>~/hexo_blog/themes/icarus/source/css/style.styl</code>，发现调用了<code>@import &quot;_partial/article&quot;</code>。打开它发现对blockquote的设置如下：</p>\n<figure class=\"highlight plain\"><figcaption><span>article.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">blockquote</div><div class=\"line\">    position: static</div><div class=\"line\">    font-family: font-serif</div><div class=\"line\">    font-size: 1.1em</div><div class=\"line\">    margin: 0 -20px</div><div class=\"line\">    padding: 10px 20px 10px 54px</div><div class=\"line\">    background: #fcfcfc</div><div class=\"line\">    border-left: 4px solid #eee</div><div class=\"line\">    &amp;:before</div><div class=\"line\">        top: 20px</div><div class=\"line\">        left: 10px</div><div class=\"line\">        content: &quot;\\f10d&quot;</div><div class=\"line\">        color: #e2e2e2</div><div class=\"line\">        font-size: 32px;</div><div class=\"line\">        font-family: FontAwesome</div><div class=\"line\">        text-align: center</div><div class=\"line\">        position: static</div><div class=\"line\">    footer</div><div class=\"line\">        font-size: font-size</div><div class=\"line\">        margin: line-height 0</div><div class=\"line\">        font-family: font-sans</div><div class=\"line\">        cite</div><div class=\"line\">            &amp;:before</div><div class=\"line\">                content: &quot;—&quot;</div><div class=\"line\">                padding: 0 0.5em</div></pre></td></tr></table></figure>\n<p>我把它改为下面这样</p>\n<figure class=\"highlight styl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">blockquote</div><div class=\"line\">    <span class=\"attribute\">position</span>: static</div><div class=\"line\">    <span class=\"attribute\">font-family</span>: font-sans</div><div class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">1em</span></div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">1.3em</span> <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">6px</span></div><div class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#fcfcfc</span></div><div class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">5px</span> solid <span class=\"number\">#ef9024</span></div><div class=\"line\">    <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"attribute\">border-right</span>: <span class=\"number\">1px</span> solid <span class=\"variable\">$grey</span>-light</div><div class=\"line\">    <span class=\"selector-tag\">cite</span>::before &#123;</div><div class=\"line\">        <span class=\"attribute\">content</span>: <span class=\"string\">\"-\"</span>;</div><div class=\"line\">        <span class=\"attribute\">padding</span>: <span class=\"number\">0</span> <span class=\"number\">5px</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"><span class=\"selector-tag\">blockquote</span> <span class=\"selector-tag\">p</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">5px</span>; &#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>testing blockquote</p>\n</blockquote>\n<h4 id=\"在Post页面关闭侧边栏\"><a href=\"#在Post页面关闭侧边栏\" class=\"headerlink\" title=\"在Post页面关闭侧边栏\"></a>在Post页面关闭侧边栏</h4><p>点进去文章的时候觉得侧边栏(分类，标签…)让人觉得有点多余，不能专心看文。就想找方法把它设置为只在首页显示而不在文章页面显示。</p>\n<p>打开<code>~/hexo_blog/themes/icarus/layout/layout.ejs</code>会找到下面一行代码</p>\n<figure class=\"highlight plain\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (theme.custom.sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<p><code>theme.custom.sidebar</code> 指的是主题<code>_config.yml</code>里面的参数。我们可以对应的找到<code>custom</code>下面的<code>sidebar</code>。发现它只有<code>left</code>, <code>right</code>两个设置。</p>\n<p>没关系，那我们就自己加个参数在<code>_config.yml</code>里面吧：</p>\n<figure class=\"highlight yml\"><figcaption><span>_config.yml</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Added by Yingchi</span></div><div class=\"line\"><span class=\"attr\">post_sidebar:</span> <span class=\"literal\">false</span>  <span class=\"comment\">#display sidebar in post page if true</span></div><div class=\"line\"><span class=\"attr\">home_sidebar:</span> <span class=\"literal\">true</span> <span class=\"comment\">#display sidebar in home page if true</span></div></pre></td></tr></table></figure>\n<p>现在在回到<code>layout.ejs</code>把之前的三行改成下面这样的：</p>\n<figure class=\"highlight plain\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% if (is_home() &amp;&amp; theme.home_sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div><div class=\"line\">&lt;% if (is_post() &amp;&amp; theme.post_sidebar) &#123; %&gt;</div><div class=\"line\">    &lt;%- partial(&apos;common/sidebar&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</div><div class=\"line\">&lt;% &#125; %&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>is_post()</code>, <code>is_home()</code> 是hexo自带的函数</p>\n</blockquote>\n<p>Wait, 以为现在就万事大吉了么，事情并没有这么简单。。你会发现文章的宽度并不会自动调整。打开JavaScript Console会发现文章所在元素是<code>&lt;section id=&quot;main&quot;&gt;</code>，我们现在就去主题的文件里找对它的设置。<br>找到文件<code>~/hexo_blog/themes/icarus/source/css/style.styl</code></p>\n<figure class=\"highlight styl\"><figcaption><span>style.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">#main</div><div class=\"line\">    @media mq-<span class=\"attribute\">normal</span></div><div class=\"line\">        column(main-column)</div><div class=\"line\">    @media mq-tablet</div><div class=\"line\">        <span class=\"keyword\">if</span> sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div></pre></td></tr></table></figure>\n<p>改成下面这样：</p>\n<figure class=\"highlight styl\"><figcaption><span>style.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">#main</div><div class=\"line\">    @media mq-<span class=\"attribute\">normal</span></div><div class=\"line\">        column(main-column)</div><div class=\"line\">    @media mq-tablet</div><div class=\"line\">        <span class=\"keyword\">if</span> is_home() and home_sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">if</span> is_post() and post_sidebar</div><div class=\"line\">            column(main-column-tablet)</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">            <span class=\"attribute\">width</span>: <span class=\"number\">100%</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p><code>@media xxx</code>, <code>side_bar</code> etc 都是在别处(<code>_variables.styl</code>)定义好的CSS规则和变量</p>\n</blockquote>\n<p>接下来打开 <code>~/hexo_blog/themes/icarus/source/css/_variables.styl</code><br>在<code>//Sidebar</code>这个部分加入我们在上面用到的变量：</p>\n<figure class=\"highlight styl\"><figcaption><span>_variables.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// Sidebar</span></div><div class=\"line\">sidebar = hexo-config(<span class=\"string\">\"customize.sidebar\"</span>)</div><div class=\"line\">thumbnail-default-small = <span class=\"string\">'images/thumb-default-small.png'</span></div><div class=\"line\">home_sidebar = hexo-config(<span class=\"string\">\"home_sidebar\"</span>)</div><div class=\"line\">post_sidebar = hexo-config(<span class=\"string\">\"post_sidebar\"</span>)</div></pre></td></tr></table></figure>\n<h4 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h4><p>如果还想自定义CSS的话，主题样式文件都在<code>themes/icarus/source/css/_partial</code>里，对照着页面文件找到对应的class样式去修改吧。</p>\n<p>比如我这里发现在打开文章的时候，显示的效果并不是很理想。<br><img src=\"https://imgur.com/j3hbYi7.jpg\" class=\"img-shadow\" width=\"600px\"></p>\n<p>时候可以在测试页面按<code>cmd+opt+j</code>调出Javascript console查看元素。会发现它是从根目录下<code>public/css/style.css</code>而来，但是我们直接改这里的话是没有用的。因为所有<code>public</code>文件夹下都是由<code>hexo g</code>生成的。</p>\n<p>所以这里可以更改我们所用主题的css生成文件。例如我的在这个路径下<code>~/hexo_blog/themes/icarus/source/css</code></p>\n<p>桑心的是，我试图修改了<code>_variables.styl</code>里面的sidebar-column之类，然后运行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo clean</div><div class=\"line\">INFO  Deleted database.</div><div class=\"line\">INFO  Deleted public folder.</div><div class=\"line\">$ hexo g</div><div class=\"line\">$ hexo s</div></pre></td></tr></table></figure>\n<p>发现并没有什么*用。。。<br>过了几天意识到作为没有基础的小白，思路已经错了。我想要做到的是在文章页面只显示文章，并且居中，而不现实profile和sidebar。在主CSS文件里面改的话，它并不能辨别这个页面是否是文章页面，改动<code>@media</code>下面的内容会对所有页面的<code>#main</code>元素造成影响。</p>\n<p>所以去查看了关于Hexo主题开发的一些教程，发现对于不同类型页面一般是由主题下的<code>layout</code>文件夹里的<code>*.layout</code>文件控制。<br>查了简单的<code>ejs</code>语法资料，修改成下面的样子</p>\n<figure class=\"highlight html\"><figcaption><span>layout.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"container\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">header</span>') %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"outer\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.customize.profile.enabled</span> &amp;&amp; !<span class=\"attr\">is_post</span>()) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">profile</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_post</span>()) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"xml\">            $('body').append(\"<span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/css'</span>&gt;</span><span class=\"undefined\">@media screen and (min-width: 1200px) &#123; #main &#123;margin: auto; width: 70%; display: block; float:none;&#125;&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\");</span></div><div class=\"line\"><span class=\"undefined\">            </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">'text/javascript'</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"javascript\">            <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'style'</span>).textContent += <span class=\"string\">\"@media screen and (max-width: 1199px) and (min-width: 800px) &#123; #main &#123;margin: auto; width: 70%; display: block; float:none;&#125;&#125;\"</span></span></div><div class=\"line\"><span class=\"undefined\">            </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">section</span> <span class=\"attr\">id</span>=<span class=\"string\">\"main\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">body</span> %&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_home</span>() &amp;&amp; <span class=\"attr\">theme.home_sidebar</span>) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">sidebar</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">is_post</span>() &amp;&amp; <span class=\"attr\">theme.post_sidebar</span>) &#123; %&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">sidebar</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">footer</span>', <span class=\"attr\">null</span>, &#123;<span class=\"attr\">cache:</span> !<span class=\"attr\">config.relative_link</span>&#125;) %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">common</span>/<span class=\"attr\">scripts</span>') %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：代码内两种改变css的方法都可用，放在这里只是给自己做个记录</p>\n</blockquote>\n<p>然后就好啦~</p>"},{"title":"Work with GitHub and Multiple Accounts on one computer","date":"2018-02-08T14:45:43.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nOn my company laptop, I want to be able to use my personal github account as well as the company one, and to push commits to repos using the proper account. How could I do that?\n<!-- more -->\n\nThanks Eric for the [tutorial](https://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574)\n\n## Scenario:\nI have 2 github accounts, one for my own and one for the company. \nOn the company laptop, I have copied my own github ssh keys. But the new company github account has no ssh key yet.\n\nLet's denote the 2 accounts as follows:\n\n```java\npuppy@gmail.com // personal\npuppy@company.com // company \n```\n### Step 1 - Create a New SSH Key for company account\n\n```bash\nssh-keygen -t rsa -C \"puppy@company.com\"\n```\nBe careful that you don't over-write your existing key for your personal account. Instead, when prompted, save the file as `id_rsa_COMPANY`. In my case, I've saved the file to `~/.ssh/id_rsa_COMPANY`.\n\n### Step 2 - Attach the New Key\nNext, login to your second GitHub account, browse to \"Account Overview,\" and attach the new key, within the \"SSH Public Keys\" section. To retrieve the value of the key that you just created, return to the Terminal, and type: `cat ~/.ssh/id_rsa_COMPANY.pub`. Copy the entire string that is displayed, and paste this into the GitHub textarea. Feel free to give it any title you wish\n\nNext, because we saved our key with a unique name, we need to tell SSH about it. Within the Terminal, type: `ssh-add ~/.ssh/id_rsa_COMPANY`. If successful, you'll see a response of \"Identity Added.\"\n\n\n### Step 3 - Create a Config File\nNow, it's time to specify when we wish to push to our personal account, and when we should instead push to our company account. To do so, let's create a config file.\n\nopen `~/.ssh/config`, if it doesn't exist, create it by `touch ~/.ssh/config`\n\nNow, add the following to the config file:\n\n```bash\n#Default GitHub\nHost github.com\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_rsa\n  \nHost github-COMPANY\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_rsa_COMPANY\n```\n\n### Step 4 - Try it Out\nTo push the repo to your own github account:\n\n```bash\ngit remote add origin git@github:yingchi/fastai-notes.git\n```\n\nTo push the repo to company github account:\n\n```bash\ngit remote add origin git@github-COMPANY:COMPANY/testing.git\n```\n\nClone from company private repo:\n\n```bash\ngit clone git@github-COMPANY:COMPANY/lalala.git\n```\n\n### Setting your github account for a single repository\n```bash\n$ git config user.email \"email@example.com\"\n```\nConfirm that you have set the email address correctly in Git:\n\n```bash\n$ git config user.email\nemail@example.com\n```\n\n\n\n\n\n\n\n","source":"_posts/push-to-github-with-multiple-accounts.md","raw":"---\ntitle: Work with GitHub and Multiple Accounts on one computer\ndate: 2018-02-08 22:45:43\ntags: git\ncategories: Others\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nOn my company laptop, I want to be able to use my personal github account as well as the company one, and to push commits to repos using the proper account. How could I do that?\n<!-- more -->\n\nThanks Eric for the [tutorial](https://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574)\n\n## Scenario:\nI have 2 github accounts, one for my own and one for the company. \nOn the company laptop, I have copied my own github ssh keys. But the new company github account has no ssh key yet.\n\nLet's denote the 2 accounts as follows:\n\n```java\npuppy@gmail.com // personal\npuppy@company.com // company \n```\n### Step 1 - Create a New SSH Key for company account\n\n```bash\nssh-keygen -t rsa -C \"puppy@company.com\"\n```\nBe careful that you don't over-write your existing key for your personal account. Instead, when prompted, save the file as `id_rsa_COMPANY`. In my case, I've saved the file to `~/.ssh/id_rsa_COMPANY`.\n\n### Step 2 - Attach the New Key\nNext, login to your second GitHub account, browse to \"Account Overview,\" and attach the new key, within the \"SSH Public Keys\" section. To retrieve the value of the key that you just created, return to the Terminal, and type: `cat ~/.ssh/id_rsa_COMPANY.pub`. Copy the entire string that is displayed, and paste this into the GitHub textarea. Feel free to give it any title you wish\n\nNext, because we saved our key with a unique name, we need to tell SSH about it. Within the Terminal, type: `ssh-add ~/.ssh/id_rsa_COMPANY`. If successful, you'll see a response of \"Identity Added.\"\n\n\n### Step 3 - Create a Config File\nNow, it's time to specify when we wish to push to our personal account, and when we should instead push to our company account. To do so, let's create a config file.\n\nopen `~/.ssh/config`, if it doesn't exist, create it by `touch ~/.ssh/config`\n\nNow, add the following to the config file:\n\n```bash\n#Default GitHub\nHost github.com\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_rsa\n  \nHost github-COMPANY\n  HostName github.com\n  User git\n  IdentityFile ~/.ssh/id_rsa_COMPANY\n```\n\n### Step 4 - Try it Out\nTo push the repo to your own github account:\n\n```bash\ngit remote add origin git@github:yingchi/fastai-notes.git\n```\n\nTo push the repo to company github account:\n\n```bash\ngit remote add origin git@github-COMPANY:COMPANY/testing.git\n```\n\nClone from company private repo:\n\n```bash\ngit clone git@github-COMPANY:COMPANY/lalala.git\n```\n\n### Setting your github account for a single repository\n```bash\n$ git config user.email \"email@example.com\"\n```\nConfirm that you have set the email address correctly in Git:\n\n```bash\n$ git config user.email\nemail@example.com\n```\n\n\n\n\n\n\n\n","slug":"push-to-github-with-multiple-accounts","published":1,"updated":"2018-02-08T13:39:41.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwiva000x0x1xuho4qfbh","content":"<p>On my company laptop, I want to be able to use my personal github account as well as the company one, and to push commits to repos using the proper account. How could I do that?<br><a id=\"more\"></a></p>\n<p>Thanks Eric for the <a href=\"https://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574\" target=\"_blank\" rel=\"external\">tutorial</a></p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario:\"></a>Scenario:</h2><p>I have 2 github accounts, one for my own and one for the company.<br>On the company laptop, I have copied my own github ssh keys. But the new company github account has no ssh key yet.</p>\n<p>Let’s denote the 2 accounts as follows:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">puppy<span class=\"meta\">@gmail</span>.com <span class=\"comment\">// personal</span></div><div class=\"line\">puppy<span class=\"meta\">@company</span>.com <span class=\"comment\">// company</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-1-Create-a-New-SSH-Key-for-company-account\"><a href=\"#Step-1-Create-a-New-SSH-Key-for-company-account\" class=\"headerlink\" title=\"Step 1 - Create a New SSH Key for company account\"></a>Step 1 - Create a New SSH Key for company account</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"puppy@company.com\"</span></div></pre></td></tr></table></figure>\n<p>Be careful that you don’t over-write your existing key for your personal account. Instead, when prompted, save the file as <code>id_rsa_COMPANY</code>. In my case, I’ve saved the file to <code>~/.ssh/id_rsa_COMPANY</code>.</p>\n<h3 id=\"Step-2-Attach-the-New-Key\"><a href=\"#Step-2-Attach-the-New-Key\" class=\"headerlink\" title=\"Step 2 - Attach the New Key\"></a>Step 2 - Attach the New Key</h3><p>Next, login to your second GitHub account, browse to “Account Overview,” and attach the new key, within the “SSH Public Keys” section. To retrieve the value of the key that you just created, return to the Terminal, and type: <code>cat ~/.ssh/id_rsa_COMPANY.pub</code>. Copy the entire string that is displayed, and paste this into the GitHub textarea. Feel free to give it any title you wish</p>\n<p>Next, because we saved our key with a unique name, we need to tell SSH about it. Within the Terminal, type: <code>ssh-add ~/.ssh/id_rsa_COMPANY</code>. If successful, you’ll see a response of “Identity Added.”</p>\n<h3 id=\"Step-3-Create-a-Config-File\"><a href=\"#Step-3-Create-a-Config-File\" class=\"headerlink\" title=\"Step 3 - Create a Config File\"></a>Step 3 - Create a Config File</h3><p>Now, it’s time to specify when we wish to push to our personal account, and when we should instead push to our company account. To do so, let’s create a config file.</p>\n<p>open <code>~/.ssh/config</code>, if it doesn’t exist, create it by <code>touch ~/.ssh/config</code></p>\n<p>Now, add the following to the config file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#Default GitHub</span></div><div class=\"line\">Host github.com</div><div class=\"line\">  HostName github.com</div><div class=\"line\">  User git</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">  </div><div class=\"line\">Host github-COMPANY</div><div class=\"line\">  HostName github.com</div><div class=\"line\">  User git</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa_COMPANY</div></pre></td></tr></table></figure>\n<h3 id=\"Step-4-Try-it-Out\"><a href=\"#Step-4-Try-it-Out\" class=\"headerlink\" title=\"Step 4 - Try it Out\"></a>Step 4 - Try it Out</h3><p>To push the repo to your own github account:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github:yingchi/fastai-notes.git</div></pre></td></tr></table></figure>\n<p>To push the repo to company github account:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github-COMPANY:COMPANY/testing.git</div></pre></td></tr></table></figure>\n<p>Clone from company private repo:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> git@github-COMPANY:COMPANY/lalala.git</div></pre></td></tr></table></figure>\n<h3 id=\"Setting-your-github-account-for-a-single-repository\"><a href=\"#Setting-your-github-account-for-a-single-repository\" class=\"headerlink\" title=\"Setting your github account for a single repository\"></a>Setting your github account for a single repository</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config user.email <span class=\"string\">\"email@example.com\"</span></div></pre></td></tr></table></figure>\n<p>Confirm that you have set the email address correctly in Git:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config user.email</div><div class=\"line\">email@example.com</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>On my company laptop, I want to be able to use my personal github account as well as the company one, and to push commits to repos using the proper account. How could I do that?<br>","more":"</p>\n<p>Thanks Eric for the <a href=\"https://code.tutsplus.com/tutorials/quick-tip-how-to-work-with-github-and-multiple-accounts--net-22574\" target=\"_blank\" rel=\"external\">tutorial</a></p>\n<h2 id=\"Scenario\"><a href=\"#Scenario\" class=\"headerlink\" title=\"Scenario:\"></a>Scenario:</h2><p>I have 2 github accounts, one for my own and one for the company.<br>On the company laptop, I have copied my own github ssh keys. But the new company github account has no ssh key yet.</p>\n<p>Let’s denote the 2 accounts as follows:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">puppy<span class=\"meta\">@gmail</span>.com <span class=\"comment\">// personal</span></div><div class=\"line\">puppy<span class=\"meta\">@company</span>.com <span class=\"comment\">// company</span></div></pre></td></tr></table></figure>\n<h3 id=\"Step-1-Create-a-New-SSH-Key-for-company-account\"><a href=\"#Step-1-Create-a-New-SSH-Key-for-company-account\" class=\"headerlink\" title=\"Step 1 - Create a New SSH Key for company account\"></a>Step 1 - Create a New SSH Key for company account</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"puppy@company.com\"</span></div></pre></td></tr></table></figure>\n<p>Be careful that you don’t over-write your existing key for your personal account. Instead, when prompted, save the file as <code>id_rsa_COMPANY</code>. In my case, I’ve saved the file to <code>~/.ssh/id_rsa_COMPANY</code>.</p>\n<h3 id=\"Step-2-Attach-the-New-Key\"><a href=\"#Step-2-Attach-the-New-Key\" class=\"headerlink\" title=\"Step 2 - Attach the New Key\"></a>Step 2 - Attach the New Key</h3><p>Next, login to your second GitHub account, browse to “Account Overview,” and attach the new key, within the “SSH Public Keys” section. To retrieve the value of the key that you just created, return to the Terminal, and type: <code>cat ~/.ssh/id_rsa_COMPANY.pub</code>. Copy the entire string that is displayed, and paste this into the GitHub textarea. Feel free to give it any title you wish</p>\n<p>Next, because we saved our key with a unique name, we need to tell SSH about it. Within the Terminal, type: <code>ssh-add ~/.ssh/id_rsa_COMPANY</code>. If successful, you’ll see a response of “Identity Added.”</p>\n<h3 id=\"Step-3-Create-a-Config-File\"><a href=\"#Step-3-Create-a-Config-File\" class=\"headerlink\" title=\"Step 3 - Create a Config File\"></a>Step 3 - Create a Config File</h3><p>Now, it’s time to specify when we wish to push to our personal account, and when we should instead push to our company account. To do so, let’s create a config file.</p>\n<p>open <code>~/.ssh/config</code>, if it doesn’t exist, create it by <code>touch ~/.ssh/config</code></p>\n<p>Now, add the following to the config file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#Default GitHub</span></div><div class=\"line\">Host github.com</div><div class=\"line\">  HostName github.com</div><div class=\"line\">  User git</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa</div><div class=\"line\">  </div><div class=\"line\">Host github-COMPANY</div><div class=\"line\">  HostName github.com</div><div class=\"line\">  User git</div><div class=\"line\">  IdentityFile ~/.ssh/id_rsa_COMPANY</div></pre></td></tr></table></figure>\n<h3 id=\"Step-4-Try-it-Out\"><a href=\"#Step-4-Try-it-Out\" class=\"headerlink\" title=\"Step 4 - Try it Out\"></a>Step 4 - Try it Out</h3><p>To push the repo to your own github account:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github:yingchi/fastai-notes.git</div></pre></td></tr></table></figure>\n<p>To push the repo to company github account:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin git@github-COMPANY:COMPANY/testing.git</div></pre></td></tr></table></figure>\n<p>Clone from company private repo:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> git@github-COMPANY:COMPANY/lalala.git</div></pre></td></tr></table></figure>\n<h3 id=\"Setting-your-github-account-for-a-single-repository\"><a href=\"#Setting-your-github-account-for-a-single-repository\" class=\"headerlink\" title=\"Setting your github account for a single repository\"></a>Setting your github account for a single repository</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config user.email <span class=\"string\">\"email@example.com\"</span></div></pre></td></tr></table></figure>\n<p>Confirm that you have set the email address correctly in Git:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git config user.email</div><div class=\"line\">email@example.com</div></pre></td></tr></table></figure>"},{"title":"Setup Hexo Locally on Mac OS |Hexo在Mac的本地安装","date":"2017-03-02T09:54:17.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nMy memo for installing Hexo on my local computer (Mac OS: Sierra v 10.12.3)\n<!-- more -->\n\n### Make sure `Git` and `Node.js` is installed\n### 创建网站目录\n在任意位置创建一个文件夹，作为网站目录，并通过 cd 命令进入文件夹\n`cd ~/Documents/Passion/mysite`\n### 安装 Hexo\n```bash\nnpm install -g hexo-cli\nhexo init\nnpm install\nhexo d -fg\nhexo server\n```\n> When running the first command, I encountered error like `Error: Cannot find module '...`. If you face the same thing, try the following link to fix it. https://gist.github.com/DanHerbert/9520689\n\n打开 http://localhost:4000 即可看到你的站点（当然还没有发布到网络）。\n以后加了新的文章或者改动之后，直接`hexo server`就可以在4000端口检测了。\n\n参考资料：\nhttp://blog.fens.me/hexo-blog-github/\n\nHexo Themes:\nhttps://github.com/letiantian/huno\nhttps://www.zhihu.com/question/24422335\n\n我喜欢的：\nhttps://github.com/raytaylorlin/hexo-theme-raytaylorism\nhttp://blog.zhangruipeng.me/hexo-theme-icarus/about/\nhttp://keyin.me/\n\n### 遇到的问题：\n重启机器后hexo和npm都不见了，显示错误如下：\n`zsh: command not found: npm`\n`zsh: command not found: hexo`\n执行命令 `ls ~/.npm` 发现执行文件都在此目录下\n\n解决步骤：\n\n**1. 卸载已经安装的 `node`, `npm`, 和 `nvm` (if exists)**\n\nTo completely uninstall node + npm is to do the following:\n\ngo to /usr/local/lib and delete any node and node_modules\ngo to /usr/local/include and delete any node and node_modules directory\nif you installed with brew install node, then run brew uninstall node in your terminal\ncheck your Home directory for any local or lib or include folders, and delete any node or node_modules from there\ngo to /usr/local/bin and delete any node executable\n> http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/\n\n`rm -rf $NVM_DIR ~/.npm ~/.bower`\n\n**2. 在Terminal运行下列命令来安装`nvm`**\n> `nvm` 是`Nodejs`版本管理器\n\nPlease check the official `nvm` docs for the latest version link.\n\n```bash\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash\n```\n安装之后请重启Terminal\n\n**3. 安装切换各版本 node/npm**\n\n```bash\n# 查看有哪些版本可供安装：\nnvm ls-remote\n# 安装最新稳定版本\nnvm install stable\n# 这里再安装一个0.12.7版本 并把它设为默认\nnvm install 0.12.7\nnvm alias default 0.12.7 \n```\n**4. 使用 .nvmrc 文件配置项目所使用的 node 版本**\n如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：\n\n```bash\ncd <项目根目录>  #进入项目根目录\necho 4 > .nvmrc #添加 .nvmrc 文件\nnvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本\nnode -v #查看 node 是否切换为对应版本\n```\n\n其他人遇到的类似问题解决方法:\n\nhttps://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/\n\n\n\n\n\n\n","source":"_posts/setup-hexo-locally-on-mac-OS.md","raw":"---\ntitle: Setup Hexo Locally on Mac OS |Hexo在Mac的本地安装\ndate: 2017-03-02 17:54:17\ntags: hexo\ncategories: Hexo\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nMy memo for installing Hexo on my local computer (Mac OS: Sierra v 10.12.3)\n<!-- more -->\n\n### Make sure `Git` and `Node.js` is installed\n### 创建网站目录\n在任意位置创建一个文件夹，作为网站目录，并通过 cd 命令进入文件夹\n`cd ~/Documents/Passion/mysite`\n### 安装 Hexo\n```bash\nnpm install -g hexo-cli\nhexo init\nnpm install\nhexo d -fg\nhexo server\n```\n> When running the first command, I encountered error like `Error: Cannot find module '...`. If you face the same thing, try the following link to fix it. https://gist.github.com/DanHerbert/9520689\n\n打开 http://localhost:4000 即可看到你的站点（当然还没有发布到网络）。\n以后加了新的文章或者改动之后，直接`hexo server`就可以在4000端口检测了。\n\n参考资料：\nhttp://blog.fens.me/hexo-blog-github/\n\nHexo Themes:\nhttps://github.com/letiantian/huno\nhttps://www.zhihu.com/question/24422335\n\n我喜欢的：\nhttps://github.com/raytaylorlin/hexo-theme-raytaylorism\nhttp://blog.zhangruipeng.me/hexo-theme-icarus/about/\nhttp://keyin.me/\n\n### 遇到的问题：\n重启机器后hexo和npm都不见了，显示错误如下：\n`zsh: command not found: npm`\n`zsh: command not found: hexo`\n执行命令 `ls ~/.npm` 发现执行文件都在此目录下\n\n解决步骤：\n\n**1. 卸载已经安装的 `node`, `npm`, 和 `nvm` (if exists)**\n\nTo completely uninstall node + npm is to do the following:\n\ngo to /usr/local/lib and delete any node and node_modules\ngo to /usr/local/include and delete any node and node_modules directory\nif you installed with brew install node, then run brew uninstall node in your terminal\ncheck your Home directory for any local or lib or include folders, and delete any node or node_modules from there\ngo to /usr/local/bin and delete any node executable\n> http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/\n\n`rm -rf $NVM_DIR ~/.npm ~/.bower`\n\n**2. 在Terminal运行下列命令来安装`nvm`**\n> `nvm` 是`Nodejs`版本管理器\n\nPlease check the official `nvm` docs for the latest version link.\n\n```bash\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash\n```\n安装之后请重启Terminal\n\n**3. 安装切换各版本 node/npm**\n\n```bash\n# 查看有哪些版本可供安装：\nnvm ls-remote\n# 安装最新稳定版本\nnvm install stable\n# 这里再安装一个0.12.7版本 并把它设为默认\nnvm install 0.12.7\nnvm alias default 0.12.7 \n```\n**4. 使用 .nvmrc 文件配置项目所使用的 node 版本**\n如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：\n\n```bash\ncd <项目根目录>  #进入项目根目录\necho 4 > .nvmrc #添加 .nvmrc 文件\nnvm use #无需指定版本号，会自动使用 .nvmrc 文件中配置的版本\nnode -v #查看 node 是否切换为对应版本\n```\n\n其他人遇到的类似问题解决方法:\n\nhttps://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/\n\n\n\n\n\n\n","slug":"setup-hexo-locally-on-mac-OS","published":1,"updated":"2017-03-20T10:43:10.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwivb00100x1x5fx6imsq","content":"<p>My memo for installing Hexo on my local computer (Mac OS: Sierra v 10.12.3)<br><a id=\"more\"></a></p>\n<h3 id=\"Make-sure-Git-and-Node-js-is-installed\"><a href=\"#Make-sure-Git-and-Node-js-is-installed\" class=\"headerlink\" title=\"Make sure Git and Node.js is installed\"></a>Make sure <code>Git</code> and <code>Node.js</code> is installed</h3><h3 id=\"创建网站目录\"><a href=\"#创建网站目录\" class=\"headerlink\" title=\"创建网站目录\"></a>创建网站目录</h3><p>在任意位置创建一个文件夹，作为网站目录，并通过 cd 命令进入文件夹<br><code>cd ~/Documents/Passion/mysite</code></p>\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div><div class=\"line\">hexo init</div><div class=\"line\">npm install</div><div class=\"line\">hexo d -<span class=\"built_in\">fg</span></div><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<blockquote>\n<p>When running the first command, I encountered error like <code>Error: Cannot find module &#39;...</code>. If you face the same thing, try the following link to fix it. <a href=\"https://gist.github.com/DanHerbert/9520689\" target=\"_blank\" rel=\"external\">https://gist.github.com/DanHerbert/9520689</a></p>\n</blockquote>\n<p>打开 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 即可看到你的站点（当然还没有发布到网络）。<br>以后加了新的文章或者改动之后，直接<code>hexo server</code>就可以在4000端口检测了。</p>\n<p>参考资料：<br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>Hexo Themes:<br><a href=\"https://github.com/letiantian/huno\" target=\"_blank\" rel=\"external\">https://github.com/letiantian/huno</a><br><a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24422335</a></p>\n<p>我喜欢的：<br><a href=\"https://github.com/raytaylorlin/hexo-theme-raytaylorism\" target=\"_blank\" rel=\"external\">https://github.com/raytaylorlin/hexo-theme-raytaylorism</a><br><a href=\"http://blog.zhangruipeng.me/hexo-theme-icarus/about/\" target=\"_blank\" rel=\"external\">http://blog.zhangruipeng.me/hexo-theme-icarus/about/</a><br><a href=\"http://keyin.me/\" target=\"_blank\" rel=\"external\">http://keyin.me/</a></p>\n<h3 id=\"遇到的问题：\"><a href=\"#遇到的问题：\" class=\"headerlink\" title=\"遇到的问题：\"></a>遇到的问题：</h3><p>重启机器后hexo和npm都不见了，显示错误如下：<br><code>zsh: command not found: npm</code><br><code>zsh: command not found: hexo</code><br>执行命令 <code>ls ~/.npm</code> 发现执行文件都在此目录下</p>\n<p>解决步骤：</p>\n<p><strong>1. 卸载已经安装的 <code>node</code>, <code>npm</code>, 和 <code>nvm</code> (if exists)</strong></p>\n<p>To completely uninstall node + npm is to do the following:</p>\n<p>go to /usr/local/lib and delete any node and node_modules<br>go to /usr/local/include and delete any node and node_modules directory<br>if you installed with brew install node, then run brew uninstall node in your terminal<br>check your Home directory for any local or lib or include folders, and delete any node or node_modules from there<br>go to /usr/local/bin and delete any node executable</p>\n<blockquote>\n<p><a href=\"http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/\" target=\"_blank\" rel=\"external\">http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/</a></p>\n</blockquote>\n<p><code>rm -rf $NVM_DIR ~/.npm ~/.bower</code></p>\n<p><strong>2. 在Terminal运行下列命令来安装<code>nvm</code></strong></p>\n<blockquote>\n<p><code>nvm</code> 是<code>Nodejs</code>版本管理器</p>\n</blockquote>\n<p>Please check the official <code>nvm</code> docs for the latest version link.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</div></pre></td></tr></table></figure>\n<p>安装之后请重启Terminal</p>\n<p><strong>3. 安装切换各版本 node/npm</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 查看有哪些版本可供安装：</span></div><div class=\"line\">nvm ls-remote</div><div class=\"line\"><span class=\"comment\"># 安装最新稳定版本</span></div><div class=\"line\">nvm install stable</div><div class=\"line\"><span class=\"comment\"># 这里再安装一个0.12.7版本 并把它设为默认</span></div><div class=\"line\">nvm install 0.12.7</div><div class=\"line\">nvm <span class=\"built_in\">alias</span> default 0.12.7</div></pre></td></tr></table></figure>\n<p><strong>4. 使用 .nvmrc 文件配置项目所使用的 node 版本</strong><br>如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> &lt;项目根目录&gt;  <span class=\"comment\">#进入项目根目录</span></div><div class=\"line\"><span class=\"built_in\">echo</span> 4 &gt; .nvmrc <span class=\"comment\">#添加 .nvmrc 文件</span></div><div class=\"line\">nvm use <span class=\"comment\">#无需指定版本号，会自动使用 .nvmrc 文件中配置的版本</span></div><div class=\"line\">node -v <span class=\"comment\">#查看 node 是否切换为对应版本</span></div></pre></td></tr></table></figure>\n<p>其他人遇到的类似问题解决方法:</p>\n<p><a href=\"https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/\" target=\"_blank\" rel=\"external\">https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/</a></p>\n","site":{"data":{}},"excerpt":"<p>My memo for installing Hexo on my local computer (Mac OS: Sierra v 10.12.3)<br>","more":"</p>\n<h3 id=\"Make-sure-Git-and-Node-js-is-installed\"><a href=\"#Make-sure-Git-and-Node-js-is-installed\" class=\"headerlink\" title=\"Make sure Git and Node.js is installed\"></a>Make sure <code>Git</code> and <code>Node.js</code> is installed</h3><h3 id=\"创建网站目录\"><a href=\"#创建网站目录\" class=\"headerlink\" title=\"创建网站目录\"></a>创建网站目录</h3><p>在任意位置创建一个文件夹，作为网站目录，并通过 cd 命令进入文件夹<br><code>cd ~/Documents/Passion/mysite</code></p>\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div><div class=\"line\">hexo init</div><div class=\"line\">npm install</div><div class=\"line\">hexo d -<span class=\"built_in\">fg</span></div><div class=\"line\">hexo server</div></pre></td></tr></table></figure>\n<blockquote>\n<p>When running the first command, I encountered error like <code>Error: Cannot find module &#39;...</code>. If you face the same thing, try the following link to fix it. <a href=\"https://gist.github.com/DanHerbert/9520689\" target=\"_blank\" rel=\"external\">https://gist.github.com/DanHerbert/9520689</a></p>\n</blockquote>\n<p>打开 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"external\">http://localhost:4000</a> 即可看到你的站点（当然还没有发布到网络）。<br>以后加了新的文章或者改动之后，直接<code>hexo server</code>就可以在4000端口检测了。</p>\n<p>参考资料：<br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>Hexo Themes:<br><a href=\"https://github.com/letiantian/huno\" target=\"_blank\" rel=\"external\">https://github.com/letiantian/huno</a><br><a href=\"https://www.zhihu.com/question/24422335\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/24422335</a></p>\n<p>我喜欢的：<br><a href=\"https://github.com/raytaylorlin/hexo-theme-raytaylorism\" target=\"_blank\" rel=\"external\">https://github.com/raytaylorlin/hexo-theme-raytaylorism</a><br><a href=\"http://blog.zhangruipeng.me/hexo-theme-icarus/about/\" target=\"_blank\" rel=\"external\">http://blog.zhangruipeng.me/hexo-theme-icarus/about/</a><br><a href=\"http://keyin.me/\" target=\"_blank\" rel=\"external\">http://keyin.me/</a></p>\n<h3 id=\"遇到的问题：\"><a href=\"#遇到的问题：\" class=\"headerlink\" title=\"遇到的问题：\"></a>遇到的问题：</h3><p>重启机器后hexo和npm都不见了，显示错误如下：<br><code>zsh: command not found: npm</code><br><code>zsh: command not found: hexo</code><br>执行命令 <code>ls ~/.npm</code> 发现执行文件都在此目录下</p>\n<p>解决步骤：</p>\n<p><strong>1. 卸载已经安装的 <code>node</code>, <code>npm</code>, 和 <code>nvm</code> (if exists)</strong></p>\n<p>To completely uninstall node + npm is to do the following:</p>\n<p>go to /usr/local/lib and delete any node and node_modules<br>go to /usr/local/include and delete any node and node_modules directory<br>if you installed with brew install node, then run brew uninstall node in your terminal<br>check your Home directory for any local or lib or include folders, and delete any node or node_modules from there<br>go to /usr/local/bin and delete any node executable</p>\n<blockquote>\n<p><a href=\"http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/\" target=\"_blank\" rel=\"external\">http://refactor.ghost.io/2016/01/17/how-do-i-completely-uninstall-node-js-and-reinstall-from-beginning-mac-os-x/</a></p>\n</blockquote>\n<p><code>rm -rf $NVM_DIR ~/.npm ~/.bower</code></p>\n<p><strong>2. 在Terminal运行下列命令来安装<code>nvm</code></strong></p>\n<blockquote>\n<p><code>nvm</code> 是<code>Nodejs</code>版本管理器</p>\n</blockquote>\n<p>Please check the official <code>nvm</code> docs for the latest version link.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash</div></pre></td></tr></table></figure>\n<p>安装之后请重启Terminal</p>\n<p><strong>3. 安装切换各版本 node/npm</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 查看有哪些版本可供安装：</span></div><div class=\"line\">nvm ls-remote</div><div class=\"line\"><span class=\"comment\"># 安装最新稳定版本</span></div><div class=\"line\">nvm install stable</div><div class=\"line\"><span class=\"comment\"># 这里再安装一个0.12.7版本 并把它设为默认</span></div><div class=\"line\">nvm install 0.12.7</div><div class=\"line\">nvm <span class=\"built_in\">alias</span> default 0.12.7</div></pre></td></tr></table></figure>\n<p><strong>4. 使用 .nvmrc 文件配置项目所使用的 node 版本</strong><br>如果你的默认 node 版本（通过 nvm alias 命令设置的）与项目所需的版本不同，则可在项目根目录或其任意父级目录中创建 .nvmrc 文件，在文件中指定使用的 node 版本号，例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">cd</span> &lt;项目根目录&gt;  <span class=\"comment\">#进入项目根目录</span></div><div class=\"line\"><span class=\"built_in\">echo</span> 4 &gt; .nvmrc <span class=\"comment\">#添加 .nvmrc 文件</span></div><div class=\"line\">nvm use <span class=\"comment\">#无需指定版本号，会自动使用 .nvmrc 文件中配置的版本</span></div><div class=\"line\">node -v <span class=\"comment\">#查看 node 是否切换为对应版本</span></div></pre></td></tr></table></figure>\n<p>其他人遇到的类似问题解决方法:</p>\n<p><a href=\"https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/\" target=\"_blank\" rel=\"external\">https://yrom.net/blog/2016/08/10/auto-load-node-on-zsh-startup/</a></p>"},{"title":"Speed Up Oh-My-Zsh","date":"2017-08-17T14:45:43.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nOh-my-zsh is becoming unbearably slow...\n\nHere are some approaches to speed up it.\n<!-- more -->\n\n### Intro\nI'm not a computer science expert, so I always choose to bear with the small issues happing on my laptop. My personal as well as working laptops are all Mac. And I use [iTerm2](https://www.iterm2.com/) and [Oh-My-Zsh](http://ohmyz.sh/) to replace the default Terminal. For the zsh theme, I recommend `mrtazz`.\n\nOne of the costs of using Oh-my-zsh is that the startup times are slow. That’s what everyone says.\n\nBut recently, I am getting more and more frustrated by the slow startup times. By searching online, I found [this tutorial](https://bennycwong.github.io/post/speeding-up-oh-my-zsh/) really helpful. \n\nThe following are the steps I took to improve my oh-my-zsh experience:\n\n### Step 1: Benchmarking Current Performance\n\nLet's measure how long it takes to start a new shell session:\n\n```bash\n$ /usr/bin/time zsh -i -c exit\n5.46 real         3.58 user         1.37 sys   \n```\n\n5.5 seconds??? That is not good at all.\n\n### Step 2: Check What Slows It Down\n\nNow, please pay attention. Run the following command in your Terminal, and take note of the portion where the output pauses a bit. \n\n```bash\n$ zsh -xv\n```\n\nFor my case, I found the portion for setting `hadoop & hive` parameters, and also for setting up `nvm` tend to get stuck for a while.\n\n### Step 3: Remove the Unnecessary Parts\n\nAs I don't need `hadoop` and `nvm` that often, I decided to prevent them from auto-loading during starting up zsh.\n\nSo I made the following changes in my `~/.zshrc` file:\n\n* Comment out the Hadoop Hive exports commands\n\n```bash\n#hadoop & hive\n#export HADOOP_HOME=$(brew --prefix hadoop) # /usr/local/Cellar/hadoop/2.7.3/\n#export HIVE_HOME=$(brew --prefix hive)/libexec\n#export HCAT_HOME=$(brew --prefix hive)/libexec/hcatalog\n#export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\n#export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\"\n```\n\n* Comment out the nvm loading command. Instead, create an alias for it so that I can easily load it when I need it.\n\n```bash\n#nvm\nexport NVM_DIR=\"$HOME/.nvm\"\n#[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\nalias loadnvm='[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"'\n```\n\n### The End\nThat's all~ Now let's quite the Terminal and reopen it. \nTest the time again:\n\n```bash\n$ /usr/bin/time zsh -i -c exit\n0.48 real         0.25 user         0.15 sys\n```\n\nYeah.\n\n\n\n\n\n\n","source":"_posts/speed-up-oh-my-zsh.md","raw":"---\ntitle: Speed Up Oh-My-Zsh\ndate: 2017-08-17 22:45:43\ntags: shell\ncategories: Others\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nOh-my-zsh is becoming unbearably slow...\n\nHere are some approaches to speed up it.\n<!-- more -->\n\n### Intro\nI'm not a computer science expert, so I always choose to bear with the small issues happing on my laptop. My personal as well as working laptops are all Mac. And I use [iTerm2](https://www.iterm2.com/) and [Oh-My-Zsh](http://ohmyz.sh/) to replace the default Terminal. For the zsh theme, I recommend `mrtazz`.\n\nOne of the costs of using Oh-my-zsh is that the startup times are slow. That’s what everyone says.\n\nBut recently, I am getting more and more frustrated by the slow startup times. By searching online, I found [this tutorial](https://bennycwong.github.io/post/speeding-up-oh-my-zsh/) really helpful. \n\nThe following are the steps I took to improve my oh-my-zsh experience:\n\n### Step 1: Benchmarking Current Performance\n\nLet's measure how long it takes to start a new shell session:\n\n```bash\n$ /usr/bin/time zsh -i -c exit\n5.46 real         3.58 user         1.37 sys   \n```\n\n5.5 seconds??? That is not good at all.\n\n### Step 2: Check What Slows It Down\n\nNow, please pay attention. Run the following command in your Terminal, and take note of the portion where the output pauses a bit. \n\n```bash\n$ zsh -xv\n```\n\nFor my case, I found the portion for setting `hadoop & hive` parameters, and also for setting up `nvm` tend to get stuck for a while.\n\n### Step 3: Remove the Unnecessary Parts\n\nAs I don't need `hadoop` and `nvm` that often, I decided to prevent them from auto-loading during starting up zsh.\n\nSo I made the following changes in my `~/.zshrc` file:\n\n* Comment out the Hadoop Hive exports commands\n\n```bash\n#hadoop & hive\n#export HADOOP_HOME=$(brew --prefix hadoop) # /usr/local/Cellar/hadoop/2.7.3/\n#export HIVE_HOME=$(brew --prefix hive)/libexec\n#export HCAT_HOME=$(brew --prefix hive)/libexec/hcatalog\n#export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\n#export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\"\n```\n\n* Comment out the nvm loading command. Instead, create an alias for it so that I can easily load it when I need it.\n\n```bash\n#nvm\nexport NVM_DIR=\"$HOME/.nvm\"\n#[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\nalias loadnvm='[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"'\n```\n\n### The End\nThat's all~ Now let's quite the Terminal and reopen it. \nTest the time again:\n\n```bash\n$ /usr/bin/time zsh -i -c exit\n0.48 real         0.25 user         0.15 sys\n```\n\nYeah.\n\n\n\n\n\n\n","slug":"speed-up-oh-my-zsh","published":1,"updated":"2017-09-26T10:21:06.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwive00140x1xxnwol92n","content":"<p>Oh-my-zsh is becoming unbearably slow…</p>\n<p>Here are some approaches to speed up it.<br><a id=\"more\"></a></p>\n<h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><p>I’m not a computer science expert, so I always choose to bear with the small issues happing on my laptop. My personal as well as working laptops are all Mac. And I use <a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">iTerm2</a> and <a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">Oh-My-Zsh</a> to replace the default Terminal. For the zsh theme, I recommend <code>mrtazz</code>.</p>\n<p>One of the costs of using Oh-my-zsh is that the startup times are slow. That’s what everyone says.</p>\n<p>But recently, I am getting more and more frustrated by the slow startup times. By searching online, I found <a href=\"https://bennycwong.github.io/post/speeding-up-oh-my-zsh/\" target=\"_blank\" rel=\"external\">this tutorial</a> really helpful. </p>\n<p>The following are the steps I took to improve my oh-my-zsh experience:</p>\n<h3 id=\"Step-1-Benchmarking-Current-Performance\"><a href=\"#Step-1-Benchmarking-Current-Performance\" class=\"headerlink\" title=\"Step 1: Benchmarking Current Performance\"></a>Step 1: Benchmarking Current Performance</h3><p>Let’s measure how long it takes to start a new shell session:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ /usr/bin/time zsh -i -c <span class=\"built_in\">exit</span></div><div class=\"line\">5.46 real         3.58 user         1.37 sys</div></pre></td></tr></table></figure>\n<p>5.5 seconds??? That is not good at all.</p>\n<h3 id=\"Step-2-Check-What-Slows-It-Down\"><a href=\"#Step-2-Check-What-Slows-It-Down\" class=\"headerlink\" title=\"Step 2: Check What Slows It Down\"></a>Step 2: Check What Slows It Down</h3><p>Now, please pay attention. Run the following command in your Terminal, and take note of the portion where the output pauses a bit. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ zsh -xv</div></pre></td></tr></table></figure>\n<p>For my case, I found the portion for setting <code>hadoop &amp; hive</code> parameters, and also for setting up <code>nvm</code> tend to get stuck for a while.</p>\n<h3 id=\"Step-3-Remove-the-Unnecessary-Parts\"><a href=\"#Step-3-Remove-the-Unnecessary-Parts\" class=\"headerlink\" title=\"Step 3: Remove the Unnecessary Parts\"></a>Step 3: Remove the Unnecessary Parts</h3><p>As I don’t need <code>hadoop</code> and <code>nvm</code> that often, I decided to prevent them from auto-loading during starting up zsh.</p>\n<p>So I made the following changes in my <code>~/.zshrc</code> file:</p>\n<ul>\n<li>Comment out the Hadoop Hive exports commands</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#hadoop &amp; hive</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_HOME=$(brew --prefix hadoop) # /usr/local/Cellar/hadoop/2.7.3/</span></div><div class=\"line\"><span class=\"comment\">#export HIVE_HOME=$(brew --prefix hive)/libexec</span></div><div class=\"line\"><span class=\"comment\">#export HCAT_HOME=$(brew --prefix hive)/libexec/hcatalog</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\"</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Comment out the nvm loading command. Instead, create an alias for it so that I can easily load it when I need it.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#nvm</span></div><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\"><span class=\"comment\">#[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm</span></div><div class=\"line\"><span class=\"built_in\">alias</span> loadnvm=<span class=\"string\">'[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; . \"$NVM_DIR/nvm.sh\"'</span></div></pre></td></tr></table></figure>\n<h3 id=\"The-End\"><a href=\"#The-End\" class=\"headerlink\" title=\"The End\"></a>The End</h3><p>That’s all~ Now let’s quite the Terminal and reopen it.<br>Test the time again:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ /usr/bin/time zsh -i -c <span class=\"built_in\">exit</span></div><div class=\"line\">0.48 real         0.25 user         0.15 sys</div></pre></td></tr></table></figure>\n<p>Yeah.</p>\n","site":{"data":{}},"excerpt":"<p>Oh-my-zsh is becoming unbearably slow…</p>\n<p>Here are some approaches to speed up it.<br>","more":"</p>\n<h3 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h3><p>I’m not a computer science expert, so I always choose to bear with the small issues happing on my laptop. My personal as well as working laptops are all Mac. And I use <a href=\"https://www.iterm2.com/\" target=\"_blank\" rel=\"external\">iTerm2</a> and <a href=\"http://ohmyz.sh/\" target=\"_blank\" rel=\"external\">Oh-My-Zsh</a> to replace the default Terminal. For the zsh theme, I recommend <code>mrtazz</code>.</p>\n<p>One of the costs of using Oh-my-zsh is that the startup times are slow. That’s what everyone says.</p>\n<p>But recently, I am getting more and more frustrated by the slow startup times. By searching online, I found <a href=\"https://bennycwong.github.io/post/speeding-up-oh-my-zsh/\" target=\"_blank\" rel=\"external\">this tutorial</a> really helpful. </p>\n<p>The following are the steps I took to improve my oh-my-zsh experience:</p>\n<h3 id=\"Step-1-Benchmarking-Current-Performance\"><a href=\"#Step-1-Benchmarking-Current-Performance\" class=\"headerlink\" title=\"Step 1: Benchmarking Current Performance\"></a>Step 1: Benchmarking Current Performance</h3><p>Let’s measure how long it takes to start a new shell session:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ /usr/bin/time zsh -i -c <span class=\"built_in\">exit</span></div><div class=\"line\">5.46 real         3.58 user         1.37 sys</div></pre></td></tr></table></figure>\n<p>5.5 seconds??? That is not good at all.</p>\n<h3 id=\"Step-2-Check-What-Slows-It-Down\"><a href=\"#Step-2-Check-What-Slows-It-Down\" class=\"headerlink\" title=\"Step 2: Check What Slows It Down\"></a>Step 2: Check What Slows It Down</h3><p>Now, please pay attention. Run the following command in your Terminal, and take note of the portion where the output pauses a bit. </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ zsh -xv</div></pre></td></tr></table></figure>\n<p>For my case, I found the portion for setting <code>hadoop &amp; hive</code> parameters, and also for setting up <code>nvm</code> tend to get stuck for a while.</p>\n<h3 id=\"Step-3-Remove-the-Unnecessary-Parts\"><a href=\"#Step-3-Remove-the-Unnecessary-Parts\" class=\"headerlink\" title=\"Step 3: Remove the Unnecessary Parts\"></a>Step 3: Remove the Unnecessary Parts</h3><p>As I don’t need <code>hadoop</code> and <code>nvm</code> that often, I decided to prevent them from auto-loading during starting up zsh.</p>\n<p>So I made the following changes in my <code>~/.zshrc</code> file:</p>\n<ul>\n<li>Comment out the Hadoop Hive exports commands</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#hadoop &amp; hive</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_HOME=$(brew --prefix hadoop) # /usr/local/Cellar/hadoop/2.7.3/</span></div><div class=\"line\"><span class=\"comment\">#export HIVE_HOME=$(brew --prefix hive)/libexec</span></div><div class=\"line\"><span class=\"comment\">#export HCAT_HOME=$(brew --prefix hive)/libexec/hcatalog</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span></div><div class=\"line\"><span class=\"comment\">#export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\"</span></div></pre></td></tr></table></figure>\n<ul>\n<li>Comment out the nvm loading command. Instead, create an alias for it so that I can easily load it when I need it.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#nvm</span></div><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\"><span class=\"comment\">#[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm</span></div><div class=\"line\"><span class=\"built_in\">alias</span> loadnvm=<span class=\"string\">'[ -s \"$NVM_DIR/nvm.sh\" ] &amp;&amp; . \"$NVM_DIR/nvm.sh\"'</span></div></pre></td></tr></table></figure>\n<h3 id=\"The-End\"><a href=\"#The-End\" class=\"headerlink\" title=\"The End\"></a>The End</h3><p>That’s all~ Now let’s quite the Terminal and reopen it.<br>Test the time again:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ /usr/bin/time zsh -i -c <span class=\"built_in\">exit</span></div><div class=\"line\">0.48 real         0.25 user         0.15 sys</div></pre></td></tr></table></figure>\n<p>Yeah.</p>"},{"title":"spark-zsh no matches found local","date":"2017-03-20T10:22:23.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nSolve the \"zsh: no matches found: local[4]\" issue when running a spark application.\n\n<!-- more -->\n### Issue\nWhen I was trying to submit a Spark streaming application with this script:\n\n```bash\n$ ~/spark/bin/spark-submit \\\n--class \"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\" \\\n--master local[4] \\\ntarget/log-analyzer-1.0.jar \\\napache.access.log\n```\nI came across this error from zsh:\n\n```bash\n$ zsh: no matches found: local[4]\n```\n\n### Solution\nI replaced `local[4]` with `local` it seemed to work, but according to the usage of master URL:\n\n|command | meaning|\n| --- | --- |\n| local | run Spark locally with one worker thread (i.e. no parallelism at all) |\n| local[K] | run Spark locally with K worker threads (ideally, set K to the number of cores on your machine) |\n\nI should not change the master URL because I wanted it to run in parallelism.\n\nSo I changed back to bash and run spark submit script again, interestingly it worked! Obviously it was an issue of zsh.\n\nAccording this post Zsh says “no matches found” when trying to download video with youtube-dl, it said that zsh only accepts parameters by quoting them:\n\n```bash\n$ ~/spark/bin/spark-submit \\\n--class \"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\" \\\n--master \"local[4]\" \\\ntarget/log-analyzer-1.0.jar \\\napache.access.log\n```\nIt worked!\n\n### Conclusion\nIn zsh, by default, a failed expansion is an error, but in Bash it isn’t: the failed pattern is just left as an argument exactly as it was written. zsh’s behaviour is safer, in that you can’t write a command that secretly doesn’t do what you meant because a file was missing, but you can change it to have the Bash behaviour if you want:\n\n```bash\nsetopt nonomatch\n```\nThis will resolve the original use case. In general it will be better to quote arguments with special characters, though, in order to avoid any mistakes where a file happens to exist with a corresponding name, or doesn’t exist when you thought it did.\n\nThe NOMATCH option is on by default, and causes the errors I were seeing. If you disable it with setopt nonomatch then any failed glob expansions will be left intact on the command line, for example:\n\n```bash\n$ echo foo?bar\nzsh: no matches found: foo?bar\n$ setopt nonomatch\n$ echo foo?bar\nfoo?bar\n```\n\n","source":"_posts/spark-zsh-no-matches-found-local.md","raw":"---\ntitle: spark-zsh no matches found local\ndate: 2017-03-20 18:22:23\ntags: spark\ncategories: Spark\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nSolve the \"zsh: no matches found: local[4]\" issue when running a spark application.\n\n<!-- more -->\n### Issue\nWhen I was trying to submit a Spark streaming application with this script:\n\n```bash\n$ ~/spark/bin/spark-submit \\\n--class \"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\" \\\n--master local[4] \\\ntarget/log-analyzer-1.0.jar \\\napache.access.log\n```\nI came across this error from zsh:\n\n```bash\n$ zsh: no matches found: local[4]\n```\n\n### Solution\nI replaced `local[4]` with `local` it seemed to work, but according to the usage of master URL:\n\n|command | meaning|\n| --- | --- |\n| local | run Spark locally with one worker thread (i.e. no parallelism at all) |\n| local[K] | run Spark locally with K worker threads (ideally, set K to the number of cores on your machine) |\n\nI should not change the master URL because I wanted it to run in parallelism.\n\nSo I changed back to bash and run spark submit script again, interestingly it worked! Obviously it was an issue of zsh.\n\nAccording this post Zsh says “no matches found” when trying to download video with youtube-dl, it said that zsh only accepts parameters by quoting them:\n\n```bash\n$ ~/spark/bin/spark-submit \\\n--class \"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\" \\\n--master \"local[4]\" \\\ntarget/log-analyzer-1.0.jar \\\napache.access.log\n```\nIt worked!\n\n### Conclusion\nIn zsh, by default, a failed expansion is an error, but in Bash it isn’t: the failed pattern is just left as an argument exactly as it was written. zsh’s behaviour is safer, in that you can’t write a command that secretly doesn’t do what you meant because a file was missing, but you can change it to have the Bash behaviour if you want:\n\n```bash\nsetopt nonomatch\n```\nThis will resolve the original use case. In general it will be better to quote arguments with special characters, though, in order to avoid any mistakes where a file happens to exist with a corresponding name, or doesn’t exist when you thought it did.\n\nThe NOMATCH option is on by default, and causes the errors I were seeing. If you disable it with setopt nonomatch then any failed glob expansions will be left intact on the command line, for example:\n\n```bash\n$ echo foo?bar\nzsh: no matches found: foo?bar\n$ setopt nonomatch\n$ echo foo?bar\nfoo?bar\n```\n\n","slug":"spark-zsh-no-matches-found-local","published":1,"updated":"2017-03-20T10:34:07.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwivg00150x1xtdc4i2ar","content":"<p>Solve the “zsh: no matches found: local[4]” issue when running a spark application.</p>\n<a id=\"more\"></a>\n<h3 id=\"Issue\"><a href=\"#Issue\" class=\"headerlink\" title=\"Issue\"></a>Issue</h3><p>When I was trying to submit a Spark streaming application with this script:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ~/spark/bin/spark-submit \\</div><div class=\"line\">--class <span class=\"string\">\"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\"</span> \\</div><div class=\"line\">--master <span class=\"built_in\">local</span>[4] \\</div><div class=\"line\">target/<span class=\"built_in\">log</span>-analyzer-1.0.jar \\</div><div class=\"line\">apache.access.log</div></pre></td></tr></table></figure>\n<p>I came across this error from zsh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ zsh: no matches found: <span class=\"built_in\">local</span>[4]</div></pre></td></tr></table></figure>\n<h3 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h3><p>I replaced <code>local[4]</code> with <code>local</code> it seemed to work, but according to the usage of master URL:</p>\n<table>\n<thead>\n<tr>\n<th>command</th>\n<th>meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>local</td>\n<td>run Spark locally with one worker thread (i.e. no parallelism at all)</td>\n</tr>\n<tr>\n<td>local[K]</td>\n<td>run Spark locally with K worker threads (ideally, set K to the number of cores on your machine)</td>\n</tr>\n</tbody>\n</table>\n<p>I should not change the master URL because I wanted it to run in parallelism.</p>\n<p>So I changed back to bash and run spark submit script again, interestingly it worked! Obviously it was an issue of zsh.</p>\n<p>According this post Zsh says “no matches found” when trying to download video with youtube-dl, it said that zsh only accepts parameters by quoting them:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ~/spark/bin/spark-submit \\</div><div class=\"line\">--class <span class=\"string\">\"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\"</span> \\</div><div class=\"line\">--master <span class=\"string\">\"local[4]\"</span> \\</div><div class=\"line\">target/<span class=\"built_in\">log</span>-analyzer-1.0.jar \\</div><div class=\"line\">apache.access.log</div></pre></td></tr></table></figure>\n<p>It worked!</p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>In zsh, by default, a failed expansion is an error, but in Bash it isn’t: the failed pattern is just left as an argument exactly as it was written. zsh’s behaviour is safer, in that you can’t write a command that secretly doesn’t do what you meant because a file was missing, but you can change it to have the Bash behaviour if you want:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">setopt</span> nonomatch</div></pre></td></tr></table></figure>\n<p>This will resolve the original use case. In general it will be better to quote arguments with special characters, though, in order to avoid any mistakes where a file happens to exist with a corresponding name, or doesn’t exist when you thought it did.</p>\n<p>The NOMATCH option is on by default, and causes the errors I were seeing. If you disable it with setopt nonomatch then any failed glob expansions will be left intact on the command line, for example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">echo</span> foo?bar</div><div class=\"line\">zsh: no matches found: foo?bar</div><div class=\"line\">$ <span class=\"built_in\">setopt</span> nonomatch</div><div class=\"line\">$ <span class=\"built_in\">echo</span> foo?bar</div><div class=\"line\">foo?bar</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>Solve the “zsh: no matches found: local[4]” issue when running a spark application.</p>","more":"<h3 id=\"Issue\"><a href=\"#Issue\" class=\"headerlink\" title=\"Issue\"></a>Issue</h3><p>When I was trying to submit a Spark streaming application with this script:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ~/spark/bin/spark-submit \\</div><div class=\"line\">--class <span class=\"string\">\"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\"</span> \\</div><div class=\"line\">--master <span class=\"built_in\">local</span>[4] \\</div><div class=\"line\">target/<span class=\"built_in\">log</span>-analyzer-1.0.jar \\</div><div class=\"line\">apache.access.log</div></pre></td></tr></table></figure>\n<p>I came across this error from zsh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ zsh: no matches found: <span class=\"built_in\">local</span>[4]</div></pre></td></tr></table></figure>\n<h3 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h3><p>I replaced <code>local[4]</code> with <code>local</code> it seemed to work, but according to the usage of master URL:</p>\n<table>\n<thead>\n<tr>\n<th>command</th>\n<th>meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>local</td>\n<td>run Spark locally with one worker thread (i.e. no parallelism at all)</td>\n</tr>\n<tr>\n<td>local[K]</td>\n<td>run Spark locally with K worker threads (ideally, set K to the number of cores on your machine)</td>\n</tr>\n</tbody>\n</table>\n<p>I should not change the master URL because I wanted it to run in parallelism.</p>\n<p>So I changed back to bash and run spark submit script again, interestingly it worked! Obviously it was an issue of zsh.</p>\n<p>According this post Zsh says “no matches found” when trying to download video with youtube-dl, it said that zsh only accepts parameters by quoting them:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ~/spark/bin/spark-submit \\</div><div class=\"line\">--class <span class=\"string\">\"com.databricks.apps.logs.chapter1.LogAnalyzerStreaming\"</span> \\</div><div class=\"line\">--master <span class=\"string\">\"local[4]\"</span> \\</div><div class=\"line\">target/<span class=\"built_in\">log</span>-analyzer-1.0.jar \\</div><div class=\"line\">apache.access.log</div></pre></td></tr></table></figure>\n<p>It worked!</p>\n<h3 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h3><p>In zsh, by default, a failed expansion is an error, but in Bash it isn’t: the failed pattern is just left as an argument exactly as it was written. zsh’s behaviour is safer, in that you can’t write a command that secretly doesn’t do what you meant because a file was missing, but you can change it to have the Bash behaviour if you want:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">setopt</span> nonomatch</div></pre></td></tr></table></figure>\n<p>This will resolve the original use case. In general it will be better to quote arguments with special characters, though, in order to avoid any mistakes where a file happens to exist with a corresponding name, or doesn’t exist when you thought it did.</p>\n<p>The NOMATCH option is on by default, and causes the errors I were seeing. If you disable it with setopt nonomatch then any failed glob expansions will be left intact on the command line, for example:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">echo</span> foo?bar</div><div class=\"line\">zsh: no matches found: foo?bar</div><div class=\"line\">$ <span class=\"built_in\">setopt</span> nonomatch</div><div class=\"line\">$ <span class=\"built_in\">echo</span> foo?bar</div><div class=\"line\">foo?bar</div></pre></td></tr></table></figure>"},{"title":"Rebuild Personal Website and Blog |重新搭建站点和博客","date":"2017-03-11T10:03:02.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"流水账日志\n<!--more -->\n\n### 心路历程\n1. 之前在Bluehost上买了个域名`yingchi.com`，就直接在它那里买了最基本的Web hosting服务，用的是LAPM stack(Linux, Apache, MySQL, and PHP)，花了半天找了个好看的个人主页模板，修修改改，填上经历技能就放那里没管了。\n2. 现在想添个博客上去，也督促自己把平时的笔记定时整理一下。\n3. 随便一查，发现我去，Bluehost的域名费不便宜啊。马上要续费了，大概 $15 USD一年，然后namecheap上是 $10一年。用GitHub的Student Pack还能白拿一年的`yingchi.me`域名玩。所以就把域名迁移到了namecheap。\n4. 然后又查到Digital Ocean的Web hosting也更便宜，还可以随便安装系统，用VPS。而Bluehost上给的服务是Shared hosting。就买了DO的服务，先把`yingchi.me`搞过去玩一玩。\n5. 想做到：\n    - 在namecheap管理域名\n    - 在DO host `yingchi.com` 并把个人资料页面放在这里\n    - 在`blog.yingchi.com`放基于Hexo平台的个人博客\n\n### 基于现实的计划\n1. 因为在Bluehost的Web hosting服务还有一年(为什么要买这么久。。。), 所以`yingchi.com`的hosting先不动\n2. 用`yingchi.me`这个域名，**在DO实现个人主页和博客的搭建** （这是个工程比较大的一步）\n3. 把`yingchi.com`域名host到DO，并第二步迁移到`yingchi.com`\n\n\n### 在DO实现个人主页和博客的搭建\n1. 个人主页计划放在 `yingchi.me` 用普通HTML页面实现。博客放在`blog.yingchi.me`, 用Hexo实现\n2. 在本地搭建完成个人主页（先用原来的）和个人博客。Complete the development for the personal homepage and also the blog locally。流水账和踩坑过程记录在：\n3. 把这两套站点的文件部署到DO上。流水账和踩坑过程记录在：\n\n### 心路历程3.的具体过程\nWhen I log in to my cPanel, under 'performance' tab, there is no 'manage access' option. \n<img src=\"https://imgur.com/B9SIhcm.jpg\" class=\"img-shadow\" width=\"700px\">\n\nIt seems that I do not have a dedicated IP address.\nHowever, after looking up the charges for VPS or dedicated IP, it was around $20 per month. I don't want to invest so much for now. So let's try some other approachs:\n\n- host my blog subdomain `blog.peiyingchi.com` on GitHub Pages. This option is free\n- move my hosting service from bluehost to another server provider completely. E.g. Digital Ocean, where they provides VPS server at $4 per month.\n\n如果不想麻烦学习VPS还有花钱去买这些服务，而且只是想简单的搭建一个Blog的话可以用第一种渠道。\n这个渠道搭建Hexo blog已经有很多网上教程可以跟着学。下面是一个比较全面的：\nhttp://blog.fens.me/hexo-blog-github/\n\n经过纠结😖，我没有用github作为服务器，最终选了第二种方，去买了DO的基本版的ubuntu server。\n\n\n### 心路历程4.的具体过程\n这里我选了Digital Ocean, 从GitHub的Student pack里面可以拿到$50的promotion. \n\nCreate a new DigitalOcean Droplets with Ubentu 16.04.2 x64.\nSelect the $5/mo package.\nAdd SSH keys.\n\n> On what is SSH keys and how to add one, refer to this [How To Use SSH Keys with DigitalOcean Droplets](https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets)\n\n\n\n\n不想在这里add shh keys直接点create。 会有邮件给你root的地址和密码，有另一封邮件告诉你怎么做一些简单的server setup。一步步跟着来就好。\n\n**Step 1: The Must-Haves**\n\n- Review the Ubuntu 14.04 server checklist which covers:\n    - [Initial Ubuntu server setup](http://pages.news.digitalocean.com/z0VX3V6001eIXHQ0EYC0D00) tutorial with step-by-step configuration instructions, and\n[Connecting to your Droplet with SSH.](http://pages.news.digitalocean.com/z0VX3V6001eIXIQ0EYD0D00)\n    - Use DigitalOcean’s DNS to [set up your hostname](http://pages.news.digitalocean.com/f00QV060XJ010I3VEXDEY0e) from the Control Panel.\n\n**Step 2: Web Servers**\n\n- Install the powerful [Nginx web server](http://pages.news.digitalocean.com/XV60YHI1X000DQeXV030EM0) on Ubuntu.\n- Use [Nginx virtual hosts](http://pages.news.digitalocean.com/I001NEX06eYIXV3V0Q0ID00) to serve multiple sites on one server. \n\n在设置Domain的过程中可能会碰到下面这些名词：\n>A记录\nA记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。\nCNAME记录\nCNAME记录，即：别名记录。这种记录允许您将多个名字映射到同一台计算机。 通常用于同时提供WWW和MAIL服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A记录）。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。\n\n#### Install LEMP stack\nFollow this tutorial:\n[How To Install Linux, Nginx, MySQL, PHP (LEMP stack) in Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04)\n\nError installing mysql?（安装Mysql出现错误?)\nUninstall mysql completely (按照以下的教程完全卸载Mysql再重新安装):\n[Uninstall MySQL from Ubuntu 16.04](http://askubuntu.com/questions/776845/uninstall-mysql-from-ubuntu-16-04)\n[Uninstall MySQL completely](http://askubuntu.com/questions/640899/uninstall-mysql-completely)\n\n#### Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04\nFollow this tutorial:\n[How To Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04)\n\n**Step One: Set Up New Document Root Directories**\nBy default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents out of a directory at `/var/www/html`\n\nWe will create a directory structure within `/var/www` for each of our sites. The actual web content will be placed in an `html` directory within these site-specific directories. This gives us some additional flexibility to create other directories associated with our sites as siblings to the html directory if necessary.\n\n```bash\nsudo mkdir -p /var/www/yingchi.me/html\nsudo mkdir -p /var/www/blog.yingchi.me/html\n```\n\nWe can use the `$USER` environmental variable to assign ownership to the account that we are currently signed in on (make sure you're not logged in as root). This will allow us to easily create or edit the content in this directory:\n\n```shell\nsudo chown -R $USER:$USER /var/www/yingchi.me/html\nsudo chown -R $USER:$USER /var/www/blog.yingchi.me/html\n```\n**Step 2: upload your website files to your domains**\nYou can simple create a dummy `index.html` page if you just want to test.\nOtherwise, you can upload your files using SFTP or other file transfer methods.\n\n**Step 3: Create server block files for each domain** \nwe will create our first server block config file by copying over the default file:\n\n```bash\nsudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/yingchi.me\nsudo nano /etc/nginx/sites-available/yingchi.me\n```\nEdit the file, and make it looks like the following:\n\n```javascript\nserver {\n    listen 80;\n    listen [::]:80;\n\n    root /var/www/yingchi.me/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name yingchi.me www.yingchi.me;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\nDo the same for the 2nd domain.\n\n**Step 4: Enable your Server Blocks and Restart Nginx**\nNow that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the sites-enabled directory, which Nginx reads from during startup.\n\nWe can create these links by typing:\n\n```shell\nsudo ln -s /etc/nginx/sites-available/yingchi.me /etc/nginx/sites-enabled/\nsudo ln -s /etc/nginx/sites-available/blog.yingchi.me /etc/nginx/sites-enabled/\n```\n\n> ### What is symbolic link?\n> A symbolic link, also termed a soft link, is a special kind of file that points to another file, much ==like a shortcut in Windows or a Macintosh alias==. Unlike a hard link, a symbolic link does not contain the data in the target file. It simply points to another entry somewhere in the file system. This difference gives symbolic links certain qualities that hard links do not have, such as the ability to link to directories, or to files on remote computers networked through NFS. Also, when you delete a target file, symbolic links to that file become unusable, whereas hard links preserve the contents of the file.\nTo create a symbolic link in Unix/Linux, at the Unix prompt, enter:\n\n>```\nln -s source_file myfile\n```\n\n> Replace `source_file` with the name of the existing file for which you want to create the symbolic link (this file can be any existing file or directory across the file systems). Replace `myfile` with the name of the symbolic link. The `ln` command then creates the symbolic link. After you've made the symbolic link, you can perform an operation on or execute `myfile`, just as you could with the `source_file`. You can use normal file management commands (e.g., `cp`, `rm`) on the symbolic link.\n\n#### Transfer files Local <==> Remote Server using SFTP\nFollow this tutorial if it's your first time using SFTP:\n[How To Use SFTP to Securely Transfer Files with a Remote Server](https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server)\nYou can also set up SFTP on Cyberduck by providing your server IP, username and password. Put port number as 22.\n\nI encountered the following error when trying to upload files through SFTP.\n<img src=\"https://imgur.com/PIaT6Qf.jpg\" class=\"img-shadow\" width=\"500px\">\n\nI then tried to upload files from terminal (log in by `sftp yingchi@xx.xx.xx.xx`) and I got\n\n```bash\nremote open(\"/var/www/yingchi.me/html/index.html\"): Permission denied\n```\n\nSo it seems that I did not set the permission for the folder correctly.\n\nAfter some search, here is the solution:\n\n**1. add user \"yingchi\" to group \"www-data\" (below replace yingchi with your username):**\n\n```shell\nsudo usermod -a -G www-data yingchi\n```\n**2. set permissions for user group www-data**\nHere, because I want to upload my files to `/var/www/yingchi.me/...`\nand also `/var/www/blog.yingchi.me/...`, so I opened the permission for `/var/www`. If you just have one domain, and the files are under `/var/www/html`, you can modify the path and only open permission for that folder.\n\n```shell\nsudo chown -R www-data:www-data /var/www\nsudo chmod -R g+w /var/www\n```\n\n#### Nginx server blocks 设置\n\nhttps://fraserxu.me/2013/06/22/Nginx-for-developers/\n\n\n","source":"_posts/rebuild-personal-website-and-blog.md","raw":"---\ntitle: Rebuild Personal Website and Blog |重新搭建站点和博客\ndate: 2017-03-11 18:03:02\ntags: website dev\ncategories: Website Dev\ncomments: true\ntoc: true\nthumbnail:\nbanner:\n---\n流水账日志\n<!--more -->\n\n### 心路历程\n1. 之前在Bluehost上买了个域名`yingchi.com`，就直接在它那里买了最基本的Web hosting服务，用的是LAPM stack(Linux, Apache, MySQL, and PHP)，花了半天找了个好看的个人主页模板，修修改改，填上经历技能就放那里没管了。\n2. 现在想添个博客上去，也督促自己把平时的笔记定时整理一下。\n3. 随便一查，发现我去，Bluehost的域名费不便宜啊。马上要续费了，大概 $15 USD一年，然后namecheap上是 $10一年。用GitHub的Student Pack还能白拿一年的`yingchi.me`域名玩。所以就把域名迁移到了namecheap。\n4. 然后又查到Digital Ocean的Web hosting也更便宜，还可以随便安装系统，用VPS。而Bluehost上给的服务是Shared hosting。就买了DO的服务，先把`yingchi.me`搞过去玩一玩。\n5. 想做到：\n    - 在namecheap管理域名\n    - 在DO host `yingchi.com` 并把个人资料页面放在这里\n    - 在`blog.yingchi.com`放基于Hexo平台的个人博客\n\n### 基于现实的计划\n1. 因为在Bluehost的Web hosting服务还有一年(为什么要买这么久。。。), 所以`yingchi.com`的hosting先不动\n2. 用`yingchi.me`这个域名，**在DO实现个人主页和博客的搭建** （这是个工程比较大的一步）\n3. 把`yingchi.com`域名host到DO，并第二步迁移到`yingchi.com`\n\n\n### 在DO实现个人主页和博客的搭建\n1. 个人主页计划放在 `yingchi.me` 用普通HTML页面实现。博客放在`blog.yingchi.me`, 用Hexo实现\n2. 在本地搭建完成个人主页（先用原来的）和个人博客。Complete the development for the personal homepage and also the blog locally。流水账和踩坑过程记录在：\n3. 把这两套站点的文件部署到DO上。流水账和踩坑过程记录在：\n\n### 心路历程3.的具体过程\nWhen I log in to my cPanel, under 'performance' tab, there is no 'manage access' option. \n<img src=\"https://imgur.com/B9SIhcm.jpg\" class=\"img-shadow\" width=\"700px\">\n\nIt seems that I do not have a dedicated IP address.\nHowever, after looking up the charges for VPS or dedicated IP, it was around $20 per month. I don't want to invest so much for now. So let's try some other approachs:\n\n- host my blog subdomain `blog.peiyingchi.com` on GitHub Pages. This option is free\n- move my hosting service from bluehost to another server provider completely. E.g. Digital Ocean, where they provides VPS server at $4 per month.\n\n如果不想麻烦学习VPS还有花钱去买这些服务，而且只是想简单的搭建一个Blog的话可以用第一种渠道。\n这个渠道搭建Hexo blog已经有很多网上教程可以跟着学。下面是一个比较全面的：\nhttp://blog.fens.me/hexo-blog-github/\n\n经过纠结😖，我没有用github作为服务器，最终选了第二种方，去买了DO的基本版的ubuntu server。\n\n\n### 心路历程4.的具体过程\n这里我选了Digital Ocean, 从GitHub的Student pack里面可以拿到$50的promotion. \n\nCreate a new DigitalOcean Droplets with Ubentu 16.04.2 x64.\nSelect the $5/mo package.\nAdd SSH keys.\n\n> On what is SSH keys and how to add one, refer to this [How To Use SSH Keys with DigitalOcean Droplets](https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets)\n\n\n\n\n不想在这里add shh keys直接点create。 会有邮件给你root的地址和密码，有另一封邮件告诉你怎么做一些简单的server setup。一步步跟着来就好。\n\n**Step 1: The Must-Haves**\n\n- Review the Ubuntu 14.04 server checklist which covers:\n    - [Initial Ubuntu server setup](http://pages.news.digitalocean.com/z0VX3V6001eIXHQ0EYC0D00) tutorial with step-by-step configuration instructions, and\n[Connecting to your Droplet with SSH.](http://pages.news.digitalocean.com/z0VX3V6001eIXIQ0EYD0D00)\n    - Use DigitalOcean’s DNS to [set up your hostname](http://pages.news.digitalocean.com/f00QV060XJ010I3VEXDEY0e) from the Control Panel.\n\n**Step 2: Web Servers**\n\n- Install the powerful [Nginx web server](http://pages.news.digitalocean.com/XV60YHI1X000DQeXV030EM0) on Ubuntu.\n- Use [Nginx virtual hosts](http://pages.news.digitalocean.com/I001NEX06eYIXV3V0Q0ID00) to serve multiple sites on one server. \n\n在设置Domain的过程中可能会碰到下面这些名词：\n>A记录\nA记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。\nCNAME记录\nCNAME记录，即：别名记录。这种记录允许您将多个名字映射到同一台计算机。 通常用于同时提供WWW和MAIL服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A记录）。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。\n\n#### Install LEMP stack\nFollow this tutorial:\n[How To Install Linux, Nginx, MySQL, PHP (LEMP stack) in Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04)\n\nError installing mysql?（安装Mysql出现错误?)\nUninstall mysql completely (按照以下的教程完全卸载Mysql再重新安装):\n[Uninstall MySQL from Ubuntu 16.04](http://askubuntu.com/questions/776845/uninstall-mysql-from-ubuntu-16-04)\n[Uninstall MySQL completely](http://askubuntu.com/questions/640899/uninstall-mysql-completely)\n\n#### Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04\nFollow this tutorial:\n[How To Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04](https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04)\n\n**Step One: Set Up New Document Root Directories**\nBy default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents out of a directory at `/var/www/html`\n\nWe will create a directory structure within `/var/www` for each of our sites. The actual web content will be placed in an `html` directory within these site-specific directories. This gives us some additional flexibility to create other directories associated with our sites as siblings to the html directory if necessary.\n\n```bash\nsudo mkdir -p /var/www/yingchi.me/html\nsudo mkdir -p /var/www/blog.yingchi.me/html\n```\n\nWe can use the `$USER` environmental variable to assign ownership to the account that we are currently signed in on (make sure you're not logged in as root). This will allow us to easily create or edit the content in this directory:\n\n```shell\nsudo chown -R $USER:$USER /var/www/yingchi.me/html\nsudo chown -R $USER:$USER /var/www/blog.yingchi.me/html\n```\n**Step 2: upload your website files to your domains**\nYou can simple create a dummy `index.html` page if you just want to test.\nOtherwise, you can upload your files using SFTP or other file transfer methods.\n\n**Step 3: Create server block files for each domain** \nwe will create our first server block config file by copying over the default file:\n\n```bash\nsudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/yingchi.me\nsudo nano /etc/nginx/sites-available/yingchi.me\n```\nEdit the file, and make it looks like the following:\n\n```javascript\nserver {\n    listen 80;\n    listen [::]:80;\n\n    root /var/www/yingchi.me/html;\n    index index.html index.htm index.nginx-debian.html;\n\n    server_name yingchi.me www.yingchi.me;\n\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n```\nDo the same for the 2nd domain.\n\n**Step 4: Enable your Server Blocks and Restart Nginx**\nNow that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the sites-enabled directory, which Nginx reads from during startup.\n\nWe can create these links by typing:\n\n```shell\nsudo ln -s /etc/nginx/sites-available/yingchi.me /etc/nginx/sites-enabled/\nsudo ln -s /etc/nginx/sites-available/blog.yingchi.me /etc/nginx/sites-enabled/\n```\n\n> ### What is symbolic link?\n> A symbolic link, also termed a soft link, is a special kind of file that points to another file, much ==like a shortcut in Windows or a Macintosh alias==. Unlike a hard link, a symbolic link does not contain the data in the target file. It simply points to another entry somewhere in the file system. This difference gives symbolic links certain qualities that hard links do not have, such as the ability to link to directories, or to files on remote computers networked through NFS. Also, when you delete a target file, symbolic links to that file become unusable, whereas hard links preserve the contents of the file.\nTo create a symbolic link in Unix/Linux, at the Unix prompt, enter:\n\n>```\nln -s source_file myfile\n```\n\n> Replace `source_file` with the name of the existing file for which you want to create the symbolic link (this file can be any existing file or directory across the file systems). Replace `myfile` with the name of the symbolic link. The `ln` command then creates the symbolic link. After you've made the symbolic link, you can perform an operation on or execute `myfile`, just as you could with the `source_file`. You can use normal file management commands (e.g., `cp`, `rm`) on the symbolic link.\n\n#### Transfer files Local <==> Remote Server using SFTP\nFollow this tutorial if it's your first time using SFTP:\n[How To Use SFTP to Securely Transfer Files with a Remote Server](https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server)\nYou can also set up SFTP on Cyberduck by providing your server IP, username and password. Put port number as 22.\n\nI encountered the following error when trying to upload files through SFTP.\n<img src=\"https://imgur.com/PIaT6Qf.jpg\" class=\"img-shadow\" width=\"500px\">\n\nI then tried to upload files from terminal (log in by `sftp yingchi@xx.xx.xx.xx`) and I got\n\n```bash\nremote open(\"/var/www/yingchi.me/html/index.html\"): Permission denied\n```\n\nSo it seems that I did not set the permission for the folder correctly.\n\nAfter some search, here is the solution:\n\n**1. add user \"yingchi\" to group \"www-data\" (below replace yingchi with your username):**\n\n```shell\nsudo usermod -a -G www-data yingchi\n```\n**2. set permissions for user group www-data**\nHere, because I want to upload my files to `/var/www/yingchi.me/...`\nand also `/var/www/blog.yingchi.me/...`, so I opened the permission for `/var/www`. If you just have one domain, and the files are under `/var/www/html`, you can modify the path and only open permission for that folder.\n\n```shell\nsudo chown -R www-data:www-data /var/www\nsudo chmod -R g+w /var/www\n```\n\n#### Nginx server blocks 设置\n\nhttps://fraserxu.me/2013/06/22/Nginx-for-developers/\n\n\n","slug":"rebuild-personal-website-and-blog","published":1,"updated":"2017-03-19T08:18:43.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwivi00170x1xie4iglyc","content":"<p>流水账日志<br><a id=\"more\"></a></p>\n<h3 id=\"心路历程\"><a href=\"#心路历程\" class=\"headerlink\" title=\"心路历程\"></a>心路历程</h3><ol>\n<li>之前在Bluehost上买了个域名<code>yingchi.com</code>，就直接在它那里买了最基本的Web hosting服务，用的是LAPM stack(Linux, Apache, MySQL, and PHP)，花了半天找了个好看的个人主页模板，修修改改，填上经历技能就放那里没管了。</li>\n<li>现在想添个博客上去，也督促自己把平时的笔记定时整理一下。</li>\n<li>随便一查，发现我去，Bluehost的域名费不便宜啊。马上要续费了，大概 $15 USD一年，然后namecheap上是 $10一年。用GitHub的Student Pack还能白拿一年的<code>yingchi.me</code>域名玩。所以就把域名迁移到了namecheap。</li>\n<li>然后又查到Digital Ocean的Web hosting也更便宜，还可以随便安装系统，用VPS。而Bluehost上给的服务是Shared hosting。就买了DO的服务，先把<code>yingchi.me</code>搞过去玩一玩。</li>\n<li>想做到：<ul>\n<li>在namecheap管理域名</li>\n<li>在DO host <code>yingchi.com</code> 并把个人资料页面放在这里</li>\n<li>在<code>blog.yingchi.com</code>放基于Hexo平台的个人博客</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"基于现实的计划\"><a href=\"#基于现实的计划\" class=\"headerlink\" title=\"基于现实的计划\"></a>基于现实的计划</h3><ol>\n<li>因为在Bluehost的Web hosting服务还有一年(为什么要买这么久。。。), 所以<code>yingchi.com</code>的hosting先不动</li>\n<li>用<code>yingchi.me</code>这个域名，<strong>在DO实现个人主页和博客的搭建</strong> （这是个工程比较大的一步）</li>\n<li>把<code>yingchi.com</code>域名host到DO，并第二步迁移到<code>yingchi.com</code></li>\n</ol>\n<h3 id=\"在DO实现个人主页和博客的搭建\"><a href=\"#在DO实现个人主页和博客的搭建\" class=\"headerlink\" title=\"在DO实现个人主页和博客的搭建\"></a>在DO实现个人主页和博客的搭建</h3><ol>\n<li>个人主页计划放在 <code>yingchi.me</code> 用普通HTML页面实现。博客放在<code>blog.yingchi.me</code>, 用Hexo实现</li>\n<li>在本地搭建完成个人主页（先用原来的）和个人博客。Complete the development for the personal homepage and also the blog locally。流水账和踩坑过程记录在：</li>\n<li>把这两套站点的文件部署到DO上。流水账和踩坑过程记录在：</li>\n</ol>\n<h3 id=\"心路历程3-的具体过程\"><a href=\"#心路历程3-的具体过程\" class=\"headerlink\" title=\"心路历程3.的具体过程\"></a>心路历程3.的具体过程</h3><p>When I log in to my cPanel, under ‘performance’ tab, there is no ‘manage access’ option.<br><img src=\"https://imgur.com/B9SIhcm.jpg\" class=\"img-shadow\" width=\"700px\"></p>\n<p>It seems that I do not have a dedicated IP address.<br>However, after looking up the charges for VPS or dedicated IP, it was around $20 per month. I don’t want to invest so much for now. So let’s try some other approachs:</p>\n<ul>\n<li>host my blog subdomain <code>blog.peiyingchi.com</code> on GitHub Pages. This option is free</li>\n<li>move my hosting service from bluehost to another server provider completely. E.g. Digital Ocean, where they provides VPS server at $4 per month.</li>\n</ul>\n<p>如果不想麻烦学习VPS还有花钱去买这些服务，而且只是想简单的搭建一个Blog的话可以用第一种渠道。<br>这个渠道搭建Hexo blog已经有很多网上教程可以跟着学。下面是一个比较全面的：<br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>经过纠结😖，我没有用github作为服务器，最终选了第二种方，去买了DO的基本版的ubuntu server。</p>\n<h3 id=\"心路历程4-的具体过程\"><a href=\"#心路历程4-的具体过程\" class=\"headerlink\" title=\"心路历程4.的具体过程\"></a>心路历程4.的具体过程</h3><p>这里我选了Digital Ocean, 从GitHub的Student pack里面可以拿到$50的promotion. </p>\n<p>Create a new DigitalOcean Droplets with Ubentu 16.04.2 x64.<br>Select the $5/mo package.<br>Add SSH keys.</p>\n<blockquote>\n<p>On what is SSH keys and how to add one, refer to this <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets\" target=\"_blank\" rel=\"external\">How To Use SSH Keys with DigitalOcean Droplets</a></p>\n</blockquote>\n<p>不想在这里add shh keys直接点create。 会有邮件给你root的地址和密码，有另一封邮件告诉你怎么做一些简单的server setup。一步步跟着来就好。</p>\n<p><strong>Step 1: The Must-Haves</strong></p>\n<ul>\n<li>Review the Ubuntu 14.04 server checklist which covers:<ul>\n<li><a href=\"http://pages.news.digitalocean.com/z0VX3V6001eIXHQ0EYC0D00\" target=\"_blank\" rel=\"external\">Initial Ubuntu server setup</a> tutorial with step-by-step configuration instructions, and<br><a href=\"http://pages.news.digitalocean.com/z0VX3V6001eIXIQ0EYD0D00\" target=\"_blank\" rel=\"external\">Connecting to your Droplet with SSH.</a></li>\n<li>Use DigitalOcean’s DNS to <a href=\"http://pages.news.digitalocean.com/f00QV060XJ010I3VEXDEY0e\" target=\"_blank\" rel=\"external\">set up your hostname</a> from the Control Panel.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Step 2: Web Servers</strong></p>\n<ul>\n<li>Install the powerful <a href=\"http://pages.news.digitalocean.com/XV60YHI1X000DQeXV030EM0\" target=\"_blank\" rel=\"external\">Nginx web server</a> on Ubuntu.</li>\n<li>Use <a href=\"http://pages.news.digitalocean.com/I001NEX06eYIXV3V0Q0ID00\" target=\"_blank\" rel=\"external\">Nginx virtual hosts</a> to serve multiple sites on one server. </li>\n</ul>\n<p>在设置Domain的过程中可能会碰到下面这些名词：</p>\n<blockquote>\n<p>A记录<br>A记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。<br>CNAME记录<br>CNAME记录，即：别名记录。这种记录允许您将多个名字映射到同一台计算机。 通常用于同时提供WWW和MAIL服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A记录）。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。</p>\n</blockquote>\n<h4 id=\"Install-LEMP-stack\"><a href=\"#Install-LEMP-stack\" class=\"headerlink\" title=\"Install LEMP stack\"></a>Install LEMP stack</h4><p>Follow this tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Install Linux, Nginx, MySQL, PHP (LEMP stack) in Ubuntu 16.04</a></p>\n<p>Error installing mysql?（安装Mysql出现错误?)<br>Uninstall mysql completely (按照以下的教程完全卸载Mysql再重新安装):<br><a href=\"http://askubuntu.com/questions/776845/uninstall-mysql-from-ubuntu-16-04\" target=\"_blank\" rel=\"external\">Uninstall MySQL from Ubuntu 16.04</a><br><a href=\"http://askubuntu.com/questions/640899/uninstall-mysql-completely\" target=\"_blank\" rel=\"external\">Uninstall MySQL completely</a></p>\n<h4 id=\"Set-Up-Nginx-Server-Blocks-Virtual-Hosts-on-Ubuntu-16-04\"><a href=\"#Set-Up-Nginx-Server-Blocks-Virtual-Hosts-on-Ubuntu-16-04\" class=\"headerlink\" title=\"Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04\"></a>Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04</h4><p>Follow this tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04</a></p>\n<p><strong>Step One: Set Up New Document Root Directories</strong><br>By default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents out of a directory at <code>/var/www/html</code></p>\n<p>We will create a directory structure within <code>/var/www</code> for each of our sites. The actual web content will be placed in an <code>html</code> directory within these site-specific directories. This gives us some additional flexibility to create other directories associated with our sites as siblings to the html directory if necessary.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mkdir -p /var/www/yingchi.me/html</div><div class=\"line\">sudo mkdir -p /var/www/blog.yingchi.me/html</div></pre></td></tr></table></figure>\n<p>We can use the <code>$USER</code> environmental variable to assign ownership to the account that we are currently signed in on (make sure you’re not logged in as root). This will allow us to easily create or edit the content in this directory:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R $USER:$USER /var/www/yingchi.me/html</div><div class=\"line\">sudo chown -R $USER:$USER /var/www/blog.yingchi.me/html</div></pre></td></tr></table></figure>\n<p><strong>Step 2: upload your website files to your domains</strong><br>You can simple create a dummy <code>index.html</code> page if you just want to test.<br>Otherwise, you can upload your files using SFTP or other file transfer methods.</p>\n<p><strong>Step 3: Create server block files for each domain</strong><br>we will create our first server block config file by copying over the default file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/yingchi.me</div><div class=\"line\">sudo nano /etc/nginx/sites-available/yingchi.me</div></pre></td></tr></table></figure>\n<p>Edit the file, and make it looks like the following:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen <span class=\"number\">80</span>;</div><div class=\"line\">    listen [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">    root /<span class=\"keyword\">var</span>/www/yingchi.me/html;</div><div class=\"line\">    index index.html index.htm index.nginx-debian.html;</div><div class=\"line\"></div><div class=\"line\">    server_name yingchi.me www.yingchi.me;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        try_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Do the same for the 2nd domain.</p>\n<p><strong>Step 4: Enable your Server Blocks and Restart Nginx</strong><br>Now that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the sites-enabled directory, which Nginx reads from during startup.</p>\n<p>We can create these links by typing:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ln -s /etc/nginx/sites-available/yingchi.me /etc/nginx/sites-enabled/</div><div class=\"line\">sudo ln -s /etc/nginx/sites-available/blog.yingchi.me /etc/nginx/sites-enabled/</div></pre></td></tr></table></figure>\n<blockquote>\n<h3 id=\"What-is-symbolic-link\"><a href=\"#What-is-symbolic-link\" class=\"headerlink\" title=\"What is symbolic link?\"></a>What is symbolic link?</h3><p>A symbolic link, also termed a soft link, is a special kind of file that points to another file, much ==like a shortcut in Windows or a Macintosh alias==. Unlike a hard link, a symbolic link does not contain the data in the target file. It simply points to another entry somewhere in the file system. This difference gives symbolic links certain qualities that hard links do not have, such as the ability to link to directories, or to files on remote computers networked through NFS. Also, when you delete a target file, symbolic links to that file become unusable, whereas hard links preserve the contents of the file.<br>To create a symbolic link in Unix/Linux, at the Unix prompt, enter:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ln -s source_file myfile</div></pre></td></tr></table></figure>\n<p>Replace <code>source_file</code> with the name of the existing file for which you want to create the symbolic link (this file can be any existing file or directory across the file systems). Replace <code>myfile</code> with the name of the symbolic link. The <code>ln</code> command then creates the symbolic link. After you’ve made the symbolic link, you can perform an operation on or execute <code>myfile</code>, just as you could with the <code>source_file</code>. You can use normal file management commands (e.g., <code>cp</code>, <code>rm</code>) on the symbolic link.</p>\n</blockquote>\n<h4 id=\"Transfer-files-Local-lt-gt-Remote-Server-using-SFTP\"><a href=\"#Transfer-files-Local-lt-gt-Remote-Server-using-SFTP\" class=\"headerlink\" title=\"Transfer files Local &lt;==&gt; Remote Server using SFTP\"></a>Transfer files Local &lt;==&gt; Remote Server using SFTP</h4><p>Follow this tutorial if it’s your first time using SFTP:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server\" target=\"_blank\" rel=\"external\">How To Use SFTP to Securely Transfer Files with a Remote Server</a><br>You can also set up SFTP on Cyberduck by providing your server IP, username and password. Put port number as 22.</p>\n<p>I encountered the following error when trying to upload files through SFTP.<br><img src=\"https://imgur.com/PIaT6Qf.jpg\" class=\"img-shadow\" width=\"500px\"></p>\n<p>I then tried to upload files from terminal (log in by <code>sftp yingchi@xx.xx.xx.xx</code>) and I got</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">remote open(<span class=\"string\">\"/var/www/yingchi.me/html/index.html\"</span>): Permission denied</div></pre></td></tr></table></figure>\n<p>So it seems that I did not set the permission for the folder correctly.</p>\n<p>After some search, here is the solution:</p>\n<p><strong>1. add user “yingchi” to group “www-data” (below replace yingchi with your username):</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -a -G www-data yingchi</div></pre></td></tr></table></figure>\n<p><strong>2. set permissions for user group www-data</strong><br>Here, because I want to upload my files to <code>/var/www/yingchi.me/...</code><br>and also <code>/var/www/blog.yingchi.me/...</code>, so I opened the permission for <code>/var/www</code>. If you just have one domain, and the files are under <code>/var/www/html</code>, you can modify the path and only open permission for that folder.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R www-data:www-data /var/www</div><div class=\"line\">sudo chmod -R g+w /var/www</div></pre></td></tr></table></figure>\n<h4 id=\"Nginx-server-blocks-设置\"><a href=\"#Nginx-server-blocks-设置\" class=\"headerlink\" title=\"Nginx server blocks 设置\"></a>Nginx server blocks 设置</h4><p><a href=\"https://fraserxu.me/2013/06/22/Nginx-for-developers/\" target=\"_blank\" rel=\"external\">https://fraserxu.me/2013/06/22/Nginx-for-developers/</a></p>\n","site":{"data":{}},"excerpt":"<p>流水账日志<br>","more":"</p>\n<h3 id=\"心路历程\"><a href=\"#心路历程\" class=\"headerlink\" title=\"心路历程\"></a>心路历程</h3><ol>\n<li>之前在Bluehost上买了个域名<code>yingchi.com</code>，就直接在它那里买了最基本的Web hosting服务，用的是LAPM stack(Linux, Apache, MySQL, and PHP)，花了半天找了个好看的个人主页模板，修修改改，填上经历技能就放那里没管了。</li>\n<li>现在想添个博客上去，也督促自己把平时的笔记定时整理一下。</li>\n<li>随便一查，发现我去，Bluehost的域名费不便宜啊。马上要续费了，大概 $15 USD一年，然后namecheap上是 $10一年。用GitHub的Student Pack还能白拿一年的<code>yingchi.me</code>域名玩。所以就把域名迁移到了namecheap。</li>\n<li>然后又查到Digital Ocean的Web hosting也更便宜，还可以随便安装系统，用VPS。而Bluehost上给的服务是Shared hosting。就买了DO的服务，先把<code>yingchi.me</code>搞过去玩一玩。</li>\n<li>想做到：<ul>\n<li>在namecheap管理域名</li>\n<li>在DO host <code>yingchi.com</code> 并把个人资料页面放在这里</li>\n<li>在<code>blog.yingchi.com</code>放基于Hexo平台的个人博客</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"基于现实的计划\"><a href=\"#基于现实的计划\" class=\"headerlink\" title=\"基于现实的计划\"></a>基于现实的计划</h3><ol>\n<li>因为在Bluehost的Web hosting服务还有一年(为什么要买这么久。。。), 所以<code>yingchi.com</code>的hosting先不动</li>\n<li>用<code>yingchi.me</code>这个域名，<strong>在DO实现个人主页和博客的搭建</strong> （这是个工程比较大的一步）</li>\n<li>把<code>yingchi.com</code>域名host到DO，并第二步迁移到<code>yingchi.com</code></li>\n</ol>\n<h3 id=\"在DO实现个人主页和博客的搭建\"><a href=\"#在DO实现个人主页和博客的搭建\" class=\"headerlink\" title=\"在DO实现个人主页和博客的搭建\"></a>在DO实现个人主页和博客的搭建</h3><ol>\n<li>个人主页计划放在 <code>yingchi.me</code> 用普通HTML页面实现。博客放在<code>blog.yingchi.me</code>, 用Hexo实现</li>\n<li>在本地搭建完成个人主页（先用原来的）和个人博客。Complete the development for the personal homepage and also the blog locally。流水账和踩坑过程记录在：</li>\n<li>把这两套站点的文件部署到DO上。流水账和踩坑过程记录在：</li>\n</ol>\n<h3 id=\"心路历程3-的具体过程\"><a href=\"#心路历程3-的具体过程\" class=\"headerlink\" title=\"心路历程3.的具体过程\"></a>心路历程3.的具体过程</h3><p>When I log in to my cPanel, under ‘performance’ tab, there is no ‘manage access’ option.<br><img src=\"https://imgur.com/B9SIhcm.jpg\" class=\"img-shadow\" width=\"700px\"></p>\n<p>It seems that I do not have a dedicated IP address.<br>However, after looking up the charges for VPS or dedicated IP, it was around $20 per month. I don’t want to invest so much for now. So let’s try some other approachs:</p>\n<ul>\n<li>host my blog subdomain <code>blog.peiyingchi.com</code> on GitHub Pages. This option is free</li>\n<li>move my hosting service from bluehost to another server provider completely. E.g. Digital Ocean, where they provides VPS server at $4 per month.</li>\n</ul>\n<p>如果不想麻烦学习VPS还有花钱去买这些服务，而且只是想简单的搭建一个Blog的话可以用第一种渠道。<br>这个渠道搭建Hexo blog已经有很多网上教程可以跟着学。下面是一个比较全面的：<br><a href=\"http://blog.fens.me/hexo-blog-github/\" target=\"_blank\" rel=\"external\">http://blog.fens.me/hexo-blog-github/</a></p>\n<p>经过纠结😖，我没有用github作为服务器，最终选了第二种方，去买了DO的基本版的ubuntu server。</p>\n<h3 id=\"心路历程4-的具体过程\"><a href=\"#心路历程4-的具体过程\" class=\"headerlink\" title=\"心路历程4.的具体过程\"></a>心路历程4.的具体过程</h3><p>这里我选了Digital Ocean, 从GitHub的Student pack里面可以拿到$50的promotion. </p>\n<p>Create a new DigitalOcean Droplets with Ubentu 16.04.2 x64.<br>Select the $5/mo package.<br>Add SSH keys.</p>\n<blockquote>\n<p>On what is SSH keys and how to add one, refer to this <a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-digitalocean-droplets\" target=\"_blank\" rel=\"external\">How To Use SSH Keys with DigitalOcean Droplets</a></p>\n</blockquote>\n<p>不想在这里add shh keys直接点create。 会有邮件给你root的地址和密码，有另一封邮件告诉你怎么做一些简单的server setup。一步步跟着来就好。</p>\n<p><strong>Step 1: The Must-Haves</strong></p>\n<ul>\n<li>Review the Ubuntu 14.04 server checklist which covers:<ul>\n<li><a href=\"http://pages.news.digitalocean.com/z0VX3V6001eIXHQ0EYC0D00\" target=\"_blank\" rel=\"external\">Initial Ubuntu server setup</a> tutorial with step-by-step configuration instructions, and<br><a href=\"http://pages.news.digitalocean.com/z0VX3V6001eIXIQ0EYD0D00\" target=\"_blank\" rel=\"external\">Connecting to your Droplet with SSH.</a></li>\n<li>Use DigitalOcean’s DNS to <a href=\"http://pages.news.digitalocean.com/f00QV060XJ010I3VEXDEY0e\" target=\"_blank\" rel=\"external\">set up your hostname</a> from the Control Panel.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Step 2: Web Servers</strong></p>\n<ul>\n<li>Install the powerful <a href=\"http://pages.news.digitalocean.com/XV60YHI1X000DQeXV030EM0\" target=\"_blank\" rel=\"external\">Nginx web server</a> on Ubuntu.</li>\n<li>Use <a href=\"http://pages.news.digitalocean.com/I001NEX06eYIXV3V0Q0ID00\" target=\"_blank\" rel=\"external\">Nginx virtual hosts</a> to serve multiple sites on one server. </li>\n</ul>\n<p>在设置Domain的过程中可能会碰到下面这些名词：</p>\n<blockquote>\n<p>A记录<br>A记录是用来指定主机名（或域名）对应的IP地址记录。用户可以将该域名下的网站服务器指向到自己的web server上。同时也可以设置您域名的二级域名。<br>CNAME记录<br>CNAME记录，即：别名记录。这种记录允许您将多个名字映射到同一台计算机。 通常用于同时提供WWW和MAIL服务的计算机。例如，有一台计算机名为“host.mydomain.com”（A记录）。 它同时提供WWW和MAIL服务，为了便于用户访问服务。可以为该计算机设置两个别名（CNAME）：WWW和MAIL。</p>\n</blockquote>\n<h4 id=\"Install-LEMP-stack\"><a href=\"#Install-LEMP-stack\" class=\"headerlink\" title=\"Install LEMP stack\"></a>Install LEMP stack</h4><p>Follow this tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-in-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Install Linux, Nginx, MySQL, PHP (LEMP stack) in Ubuntu 16.04</a></p>\n<p>Error installing mysql?（安装Mysql出现错误?)<br>Uninstall mysql completely (按照以下的教程完全卸载Mysql再重新安装):<br><a href=\"http://askubuntu.com/questions/776845/uninstall-mysql-from-ubuntu-16-04\" target=\"_blank\" rel=\"external\">Uninstall MySQL from Ubuntu 16.04</a><br><a href=\"http://askubuntu.com/questions/640899/uninstall-mysql-completely\" target=\"_blank\" rel=\"external\">Uninstall MySQL completely</a></p>\n<h4 id=\"Set-Up-Nginx-Server-Blocks-Virtual-Hosts-on-Ubuntu-16-04\"><a href=\"#Set-Up-Nginx-Server-Blocks-Virtual-Hosts-on-Ubuntu-16-04\" class=\"headerlink\" title=\"Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04\"></a>Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04</h4><p>Follow this tutorial:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-nginx-server-blocks-virtual-hosts-on-ubuntu-16-04\" target=\"_blank\" rel=\"external\">How To Set Up Nginx Server Blocks (Virtual Hosts) on Ubuntu 16.04</a></p>\n<p><strong>Step One: Set Up New Document Root Directories</strong><br>By default, Nginx on Ubuntu 16.04 has one server block enabled by default. It is configured to serve documents out of a directory at <code>/var/www/html</code></p>\n<p>We will create a directory structure within <code>/var/www</code> for each of our sites. The actual web content will be placed in an <code>html</code> directory within these site-specific directories. This gives us some additional flexibility to create other directories associated with our sites as siblings to the html directory if necessary.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo mkdir -p /var/www/yingchi.me/html</div><div class=\"line\">sudo mkdir -p /var/www/blog.yingchi.me/html</div></pre></td></tr></table></figure>\n<p>We can use the <code>$USER</code> environmental variable to assign ownership to the account that we are currently signed in on (make sure you’re not logged in as root). This will allow us to easily create or edit the content in this directory:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R $USER:$USER /var/www/yingchi.me/html</div><div class=\"line\">sudo chown -R $USER:$USER /var/www/blog.yingchi.me/html</div></pre></td></tr></table></figure>\n<p><strong>Step 2: upload your website files to your domains</strong><br>You can simple create a dummy <code>index.html</code> page if you just want to test.<br>Otherwise, you can upload your files using SFTP or other file transfer methods.</p>\n<p><strong>Step 3: Create server block files for each domain</strong><br>we will create our first server block config file by copying over the default file:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/yingchi.me</div><div class=\"line\">sudo nano /etc/nginx/sites-available/yingchi.me</div></pre></td></tr></table></figure>\n<p>Edit the file, and make it looks like the following:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen <span class=\"number\">80</span>;</div><div class=\"line\">    listen [::]:<span class=\"number\">80</span>;</div><div class=\"line\"></div><div class=\"line\">    root /<span class=\"keyword\">var</span>/www/yingchi.me/html;</div><div class=\"line\">    index index.html index.htm index.nginx-debian.html;</div><div class=\"line\"></div><div class=\"line\">    server_name yingchi.me www.yingchi.me;</div><div class=\"line\"></div><div class=\"line\">    location / &#123;</div><div class=\"line\">        try_files $uri $uri/ =<span class=\"number\">404</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>Do the same for the 2nd domain.</p>\n<p><strong>Step 4: Enable your Server Blocks and Restart Nginx</strong><br>Now that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the sites-enabled directory, which Nginx reads from during startup.</p>\n<p>We can create these links by typing:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ln -s /etc/nginx/sites-available/yingchi.me /etc/nginx/sites-enabled/</div><div class=\"line\">sudo ln -s /etc/nginx/sites-available/blog.yingchi.me /etc/nginx/sites-enabled/</div></pre></td></tr></table></figure>\n<blockquote>\n<h3 id=\"What-is-symbolic-link\"><a href=\"#What-is-symbolic-link\" class=\"headerlink\" title=\"What is symbolic link?\"></a>What is symbolic link?</h3><p>A symbolic link, also termed a soft link, is a special kind of file that points to another file, much ==like a shortcut in Windows or a Macintosh alias==. Unlike a hard link, a symbolic link does not contain the data in the target file. It simply points to another entry somewhere in the file system. This difference gives symbolic links certain qualities that hard links do not have, such as the ability to link to directories, or to files on remote computers networked through NFS. Also, when you delete a target file, symbolic links to that file become unusable, whereas hard links preserve the contents of the file.<br>To create a symbolic link in Unix/Linux, at the Unix prompt, enter:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ln -s source_file myfile</div></pre></td></tr></table></figure>\n<p>Replace <code>source_file</code> with the name of the existing file for which you want to create the symbolic link (this file can be any existing file or directory across the file systems). Replace <code>myfile</code> with the name of the symbolic link. The <code>ln</code> command then creates the symbolic link. After you’ve made the symbolic link, you can perform an operation on or execute <code>myfile</code>, just as you could with the <code>source_file</code>. You can use normal file management commands (e.g., <code>cp</code>, <code>rm</code>) on the symbolic link.</p>\n</blockquote>\n<h4 id=\"Transfer-files-Local-lt-gt-Remote-Server-using-SFTP\"><a href=\"#Transfer-files-Local-lt-gt-Remote-Server-using-SFTP\" class=\"headerlink\" title=\"Transfer files Local &lt;==&gt; Remote Server using SFTP\"></a>Transfer files Local &lt;==&gt; Remote Server using SFTP</h4><p>Follow this tutorial if it’s your first time using SFTP:<br><a href=\"https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server\" target=\"_blank\" rel=\"external\">How To Use SFTP to Securely Transfer Files with a Remote Server</a><br>You can also set up SFTP on Cyberduck by providing your server IP, username and password. Put port number as 22.</p>\n<p>I encountered the following error when trying to upload files through SFTP.<br><img src=\"https://imgur.com/PIaT6Qf.jpg\" class=\"img-shadow\" width=\"500px\"></p>\n<p>I then tried to upload files from terminal (log in by <code>sftp yingchi@xx.xx.xx.xx</code>) and I got</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">remote open(<span class=\"string\">\"/var/www/yingchi.me/html/index.html\"</span>): Permission denied</div></pre></td></tr></table></figure>\n<p>So it seems that I did not set the permission for the folder correctly.</p>\n<p>After some search, here is the solution:</p>\n<p><strong>1. add user “yingchi” to group “www-data” (below replace yingchi with your username):</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo usermod -a -G www-data yingchi</div></pre></td></tr></table></figure>\n<p><strong>2. set permissions for user group www-data</strong><br>Here, because I want to upload my files to <code>/var/www/yingchi.me/...</code><br>and also <code>/var/www/blog.yingchi.me/...</code>, so I opened the permission for <code>/var/www</code>. If you just have one domain, and the files are under <code>/var/www/html</code>, you can modify the path and only open permission for that folder.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo chown -R www-data:www-data /var/www</div><div class=\"line\">sudo chmod -R g+w /var/www</div></pre></td></tr></table></figure>\n<h4 id=\"Nginx-server-blocks-设置\"><a href=\"#Nginx-server-blocks-设置\" class=\"headerlink\" title=\"Nginx server blocks 设置\"></a>Nginx server blocks 设置</h4><p><a href=\"https://fraserxu.me/2013/06/22/Nginx-for-developers/\" target=\"_blank\" rel=\"external\">https://fraserxu.me/2013/06/22/Nginx-for-developers/</a></p>"},{"title":"TCP/IP","date":"2017-07-31T11:45:43.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\nA beginner's notes when learning TCP/IP.\n<!-- more -->\n\n## General Overview\n---\n\n### TCP/IP Stands for:\nTransmission Control Protocol/ Internet Protocol\n\n### What do they do?\nThe protocols that make up TCP/IP define:\n\n- How data is transmitted across a network (IP)\n- How data should be formatted so other networked systems can understand it (TCP)\n\n(1. 怎么包装; 2. 怎么送达)\n\nTCP/IP provides a complete system for formatting, transmitting, and receiving data on a network\n\n### Decentralized Data Network\n- TCP/IP's decentralized nature is a key reason it's still ubiquitous today\n- 2 Key TCP/IP features support decentralization:\n    - **End node verification**: the two endpoints of any data transfer are responsible for making sure it was successful - no centralized control scheme\n    - **Dynamic routing**: End nodes can transfer data over multiple paths, and the network chooses the best (fastest, most reliable) path for each individual data transfer\n\n### 5 Core Networking Problem\n- Addressing\n    - Physical Addressing: Every network-connected hardware device has a unique ID, referred to as a MAC (Machine Access Code) ~ _Just like a phone number_\n    - Low-level TCP/IP protocols use MAC address to move data across the physical network to the right device\n    - But as the network grows larger, it's impossible to let one machine to listen to all the other machines\n    - IP Address: logical address configured in a node's TCPIP implementation\n    - IP addresses can be broken down into network, subnet, and host ID numbers\n- Routing\n    - Routers are special network devices that let you divide large networks into smaller subnets\n    - A well-designed network uses router to create a tree-like structure\n    - Routers use the logical address information in a data packet to send it to its destination\n- Name Resolution\n    - Those logical IP addresses are better than MAC, but still not very good for human to read. ==> Domain Names, e.g. www.google.com\n    - **Name Resolution** is the process of mapping logical addresses back and forth into domain names\n    - Special **name servers** store the mapping information in databases\n- Flow Control\n    - TCP/IP has features to guarantee reliable data transfers\n- Application Support\n    - Able to run multiple network apps simultaneously\n    - **Ports**: logical channels provided by TCP/IP that allow multiple applications to access the network simultaneously\n\n    \n## Key Points\n---\n### 7 Layers of OSI\n<img src=\"https://s6.postimg.org/t84npj9w1/14872108408581.jpg\" class=\"img-shadow\" width=\"400px\">\n\nIP at Layer 3.\nTCP at Layer 4.\n\n### TCP/IP Model structure:\n\n|Layers of TCP/IP Model|Protocols|\n|---|---|\n|Application| DNS, DHCP, FTP, TFTP, SMTP, HTTP, RDP, Telnet, SSH|\n|Transport| TCP, UDP|\n|Internet| IP, ICMP, IGMP|\n|Network Access|Ethernet, Token Ring, FDDI, X.25, Frame Relay, ARP, RARP|\n\n_Encapsulation:_\nEncapsulation is the process that occurs when data is to be sent out of the source computer. When data moves from upper layer to lower layer of TCP/IP protocol stack (outgoing transmission), each layer adds the corresponding header to the data.\n\n\n### IP address:\n\n- When setting up a small private network, you are free to use ANY IP-addresses. The reserved IP-address for private network is: 192.168.x.y, where x=same number on all systems and y=different/unique number on all systems.\n<img src=\"https://s6.postimg.org/ypx9dc53l/14872125483479.png\" class=\"img-shadow\" width=\"500px\">\n\nThe router will have its unique IP address within the Internet world, say 233.13.23.4\n也就是说在其他的private network, 里面的machine也可以用192.168.10.1, etc. NAT(network address translation) is built into the Router, and will be used to translate the address.\n\n- When you are connected to a company network, you need to ask the Network-administrator to assign you an IP-address. \n- If you are connected to the Internet, your ISP (Internet Service Provider) will assign an IP-address to you.\n\n_Private IP Address:_\nIf any router sees an address starts with '10.', it will not route data for that IP address.\n10.0.0.0 - 10.255.255.255:  8 bit for network, 24 bit for host ID\n172.16.0.0 - 172.31.255.255: 12 for network, 20 for host \n192.168.0.0 - 192.168.255.255: 16 for network, 16 for host\n\n_DHCP:_ (Dynamic Host Control Protocol)\nOn your DHCP sever, you will specify the scope of the IPs that can be assigned, say 192.168.1.100 ~ 159\nand the default gateway (i.e the router), say 192.168.1.1\nand the DNS address: say 192.168.1.1\nYou can configure a lease period on the DHCP server. That will be the time that any dynamically assigned IP can be used by another machine. At 50% time point, the machine will try to communicate and ask for renew.\n\n_Windowing:_ \nIt is the biggest concept in TCP.\nThe idea is, after IP connects 2 machines (A and B) together, then A starts to transmit a file (say a word doc) to B. Under TCP, A divides the file into packages, and starts sending 1 package to B. Now the window size is 1. \nThen if B receives the 1 package successfully, it acknowledges that to A. Then A starts to send 2 packages - window size becomes 2. \nThen the window size will double, double, double.\nBut if there is a problem so that B cannot correctly acknowledge the last index number of received packages, the window size get back to 1.\n\nNowadays, this protocol causes problem for real-life communication.\n\n_Subnet Masking:_\nUsually, the subnet mask is provided by your ISP or other high level server. What we need to understand is that if the subnet mask is 255.255.255.0, it means we can at most have $2^8-2 = 254 $ machines within this subnet.\n\nIf we got 2 computers that are on different subnet, they cannot talk to each other. They need a router.\n\n<img src=\"https://s6.postimg.org/95uz6wjpt/14872141052756.jpg\" height=\"300\">\n\n<img src=\"https://s6.postimg.org/fnih45jgx/14872143238335.png\" class=\"img-shadow\" height=\"300\">\n\n<img src=\"https://s6.postimg.org/knfxc3p3l/14872143106349.png\" class=\"img-shadow\" height=\"250\">\n\nClass A\n0NNNNNNN.HHHHHHHH.HHHHHHHH.HHHHHHHH\nStarts with 1~126\nDefault subnet mask: 255.0.0.0\n\n>leading bit is always 0. \n> $2^7 = 128$ networks, \n> $2^24 - 2$ hosts$\n\nClass B\n10NNNNNN.NNNNNNNN.HHHHHHHH.HHHHHHHH\nStarts with 129~191\nDefault subnet mask: 255.255.0.0\n\n>$2^14 = 16,384$ networks\n>$2^16 - 2$ hosts\n\nClass C\n110NNNNN.NNNNNNNN.NNNNNNNN.HHHHHHHH\nStarts with 192~223\nDefault subnet mask: 255.255.255.0\n>$2^21 networks$ networks\n>$2^8 -2 = 254$ hosts\n\nClass D (multicast)\n1110...........\nStarts with 224~239, the rest is not defined \n\n**Loopback Address** = 127.0.0.0, any data sent to this address will be directly sent back to the sender\n**Network Address**: IP address where all the host address is set to be 0\n**Broadcast Address**: All host address is set to be 255. Any data sent to this address will be broadcasted to the whole network.\nA: 102.255.255.255, B: 168.212.255.255, C:195.195.92.255\n\n### TCP 3-Way Handshake:\n\n**EVENT**\nHost A sends a TCP **SYN**chronize packet to Host B\n\nHost B receives A's **SYN**\n\nHost B sends a **SYN**chronize-**ACK**nowledgement\n\nHost A receives B's **SYN-ACK**\n\nHost A sends **ACK**nowledge\n\nHost B receives **ACK** ==> TCP socket connection is **ESTABLISHED**.\n\n**DIAGRAM**\n<img src=\"https://s6.postimg.org/jc3kpw441/14872147436908.gif\" class=\"img-shadow\" width=\"200\">\n\n\n**Detailed Answer**\nFor reliable connection, the transmitting device first establishes a connection-oriented (reliable) session with its peer system, which is called three way handshake. Data is then transferred. When the data transfer is finished, connection is terminated and virtual circuit is teared down.\n\n1. Source send a TCP SYN segment with the initial sequence number X indicating the desire to open the connection\n2. When Destination receives TCP SYN, it acknowledges this with ACK(X+1) as well as its own SYN Y (this tells Source what sequence number it will start its data with and will use in further msgs). This response is called SYN/ACK\n3. Source sends and ACK(ACK = Y+1) segment to the Destination indicating that the connection is set up. Data transfer can then begin \n\n> This handshaking process can be used to created a DOS attack:\n> The client opens up the SYN connection, the server responds with the SYN/ACK, but then the client sends another SYN. The server treats this as a new connection request and keeps the previous connection open. As this is repeated over and over many times very quickly, the server quickly becomes saturated with a huge number of connec\n\n### Closure of Connection TCP\nUnlike opening a connection, closing using \"4-way\" method:\n\n1. A sends \"FIN\" to B\n2. When B receives \"FIN\", B sends back \"ACK\" to A\n3. B sends \"FIN\" to A\n4. When A receives \"FIN\", A sends back \"ACK\" to B\n\n<img src=\"https://s6.postimg.org/dufkftya9/14875567718974.jpg\" class=\"img-shadow\" height=\"300\">\n\n\n### Connection-oriented and Connectionless Protocols\nConnection-oriented: e.g. TCP (Transmission Control Protocol). Services: SMTP (Email), HTTP/FTP(Web browser, apps), SSH/Telnet (Remote access)\n~ telephone\nConnectionless: e.g. UDP (User Datagram Protocol). Services: DNS, Video Conference, DHCP\n~ post office\n\n_Difference between Connection and Connectionless Services:_\n\n1. In connection oriented service authentication is needed while connectionless service does not need any authentication.\n2. Connection oriented protocol makes a connection and checks whether message is received or not and sends again if an error occurs connectionless service protocol does not guarantees a delivery.\n3. Connection oriented service is more reliable than connectionless service.\n4. Connection oriented service interface is stream based and connectionless is message based.\n\n| |TCP|UDP|\n|---|---|---|\n|Usage|TCP is suited for applications that require high reliability and transmission time is less critical| UDP is suitable for applications that need fast, efficient transmission, such as games. UDP's stateless nature is also useful for servers that answer small queries from huge numbers of clients|\n|Use by other protocols| HTTP, FTP, SMTP, Telnet| DNS, DHCP, RIP, VOIP|\n|Ordering of packets| TCP rearranges data packets in the order specified| No inherent order. If ordering is required, it has to be managed on the application layer|\n|Speed| slower than UDP| faster as there is no error-checking for packets|\n|Reliability| Absolute guarantee that the data transferred remains intact and arrives in the same order in which it was sent| No guarantee that the messages or packets sent would reach at all|\n|Header Size| 20 bytes| 8 bytes|\n|Common Header Fields| Source port, Destination port, Check sum|Source port, Destination port, Check sum|\n|Data Flow Control| TCP does Flow Control. TCP requires three packets to set up a socket connection, before any user data can be sent. TCP handles reliability and congestion control.|UDP does not have an option for flow control |\n\n### How to defend from DDoS Attack?\nFirst, you cannot protect your company from a DDoS attack 100% of the time. \nThen, make sure that you have ample bandwidth so that you have some extra time to react\nUse CDN or VPN\nNext, monitor your site closely for symptoms that might indicate a DDoS attack.\nBlock the machine/Network that is launching the attack \n\n\n\n\n\n","source":"_posts/tcp-ip.md","raw":"---\ntitle: TCP/IP \ndate: 2017-07-31 19:45:43\ntags: network\ncategories: Others\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\nA beginner's notes when learning TCP/IP.\n<!-- more -->\n\n## General Overview\n---\n\n### TCP/IP Stands for:\nTransmission Control Protocol/ Internet Protocol\n\n### What do they do?\nThe protocols that make up TCP/IP define:\n\n- How data is transmitted across a network (IP)\n- How data should be formatted so other networked systems can understand it (TCP)\n\n(1. 怎么包装; 2. 怎么送达)\n\nTCP/IP provides a complete system for formatting, transmitting, and receiving data on a network\n\n### Decentralized Data Network\n- TCP/IP's decentralized nature is a key reason it's still ubiquitous today\n- 2 Key TCP/IP features support decentralization:\n    - **End node verification**: the two endpoints of any data transfer are responsible for making sure it was successful - no centralized control scheme\n    - **Dynamic routing**: End nodes can transfer data over multiple paths, and the network chooses the best (fastest, most reliable) path for each individual data transfer\n\n### 5 Core Networking Problem\n- Addressing\n    - Physical Addressing: Every network-connected hardware device has a unique ID, referred to as a MAC (Machine Access Code) ~ _Just like a phone number_\n    - Low-level TCP/IP protocols use MAC address to move data across the physical network to the right device\n    - But as the network grows larger, it's impossible to let one machine to listen to all the other machines\n    - IP Address: logical address configured in a node's TCPIP implementation\n    - IP addresses can be broken down into network, subnet, and host ID numbers\n- Routing\n    - Routers are special network devices that let you divide large networks into smaller subnets\n    - A well-designed network uses router to create a tree-like structure\n    - Routers use the logical address information in a data packet to send it to its destination\n- Name Resolution\n    - Those logical IP addresses are better than MAC, but still not very good for human to read. ==> Domain Names, e.g. www.google.com\n    - **Name Resolution** is the process of mapping logical addresses back and forth into domain names\n    - Special **name servers** store the mapping information in databases\n- Flow Control\n    - TCP/IP has features to guarantee reliable data transfers\n- Application Support\n    - Able to run multiple network apps simultaneously\n    - **Ports**: logical channels provided by TCP/IP that allow multiple applications to access the network simultaneously\n\n    \n## Key Points\n---\n### 7 Layers of OSI\n<img src=\"https://s6.postimg.org/t84npj9w1/14872108408581.jpg\" class=\"img-shadow\" width=\"400px\">\n\nIP at Layer 3.\nTCP at Layer 4.\n\n### TCP/IP Model structure:\n\n|Layers of TCP/IP Model|Protocols|\n|---|---|\n|Application| DNS, DHCP, FTP, TFTP, SMTP, HTTP, RDP, Telnet, SSH|\n|Transport| TCP, UDP|\n|Internet| IP, ICMP, IGMP|\n|Network Access|Ethernet, Token Ring, FDDI, X.25, Frame Relay, ARP, RARP|\n\n_Encapsulation:_\nEncapsulation is the process that occurs when data is to be sent out of the source computer. When data moves from upper layer to lower layer of TCP/IP protocol stack (outgoing transmission), each layer adds the corresponding header to the data.\n\n\n### IP address:\n\n- When setting up a small private network, you are free to use ANY IP-addresses. The reserved IP-address for private network is: 192.168.x.y, where x=same number on all systems and y=different/unique number on all systems.\n<img src=\"https://s6.postimg.org/ypx9dc53l/14872125483479.png\" class=\"img-shadow\" width=\"500px\">\n\nThe router will have its unique IP address within the Internet world, say 233.13.23.4\n也就是说在其他的private network, 里面的machine也可以用192.168.10.1, etc. NAT(network address translation) is built into the Router, and will be used to translate the address.\n\n- When you are connected to a company network, you need to ask the Network-administrator to assign you an IP-address. \n- If you are connected to the Internet, your ISP (Internet Service Provider) will assign an IP-address to you.\n\n_Private IP Address:_\nIf any router sees an address starts with '10.', it will not route data for that IP address.\n10.0.0.0 - 10.255.255.255:  8 bit for network, 24 bit for host ID\n172.16.0.0 - 172.31.255.255: 12 for network, 20 for host \n192.168.0.0 - 192.168.255.255: 16 for network, 16 for host\n\n_DHCP:_ (Dynamic Host Control Protocol)\nOn your DHCP sever, you will specify the scope of the IPs that can be assigned, say 192.168.1.100 ~ 159\nand the default gateway (i.e the router), say 192.168.1.1\nand the DNS address: say 192.168.1.1\nYou can configure a lease period on the DHCP server. That will be the time that any dynamically assigned IP can be used by another machine. At 50% time point, the machine will try to communicate and ask for renew.\n\n_Windowing:_ \nIt is the biggest concept in TCP.\nThe idea is, after IP connects 2 machines (A and B) together, then A starts to transmit a file (say a word doc) to B. Under TCP, A divides the file into packages, and starts sending 1 package to B. Now the window size is 1. \nThen if B receives the 1 package successfully, it acknowledges that to A. Then A starts to send 2 packages - window size becomes 2. \nThen the window size will double, double, double.\nBut if there is a problem so that B cannot correctly acknowledge the last index number of received packages, the window size get back to 1.\n\nNowadays, this protocol causes problem for real-life communication.\n\n_Subnet Masking:_\nUsually, the subnet mask is provided by your ISP or other high level server. What we need to understand is that if the subnet mask is 255.255.255.0, it means we can at most have $2^8-2 = 254 $ machines within this subnet.\n\nIf we got 2 computers that are on different subnet, they cannot talk to each other. They need a router.\n\n<img src=\"https://s6.postimg.org/95uz6wjpt/14872141052756.jpg\" height=\"300\">\n\n<img src=\"https://s6.postimg.org/fnih45jgx/14872143238335.png\" class=\"img-shadow\" height=\"300\">\n\n<img src=\"https://s6.postimg.org/knfxc3p3l/14872143106349.png\" class=\"img-shadow\" height=\"250\">\n\nClass A\n0NNNNNNN.HHHHHHHH.HHHHHHHH.HHHHHHHH\nStarts with 1~126\nDefault subnet mask: 255.0.0.0\n\n>leading bit is always 0. \n> $2^7 = 128$ networks, \n> $2^24 - 2$ hosts$\n\nClass B\n10NNNNNN.NNNNNNNN.HHHHHHHH.HHHHHHHH\nStarts with 129~191\nDefault subnet mask: 255.255.0.0\n\n>$2^14 = 16,384$ networks\n>$2^16 - 2$ hosts\n\nClass C\n110NNNNN.NNNNNNNN.NNNNNNNN.HHHHHHHH\nStarts with 192~223\nDefault subnet mask: 255.255.255.0\n>$2^21 networks$ networks\n>$2^8 -2 = 254$ hosts\n\nClass D (multicast)\n1110...........\nStarts with 224~239, the rest is not defined \n\n**Loopback Address** = 127.0.0.0, any data sent to this address will be directly sent back to the sender\n**Network Address**: IP address where all the host address is set to be 0\n**Broadcast Address**: All host address is set to be 255. Any data sent to this address will be broadcasted to the whole network.\nA: 102.255.255.255, B: 168.212.255.255, C:195.195.92.255\n\n### TCP 3-Way Handshake:\n\n**EVENT**\nHost A sends a TCP **SYN**chronize packet to Host B\n\nHost B receives A's **SYN**\n\nHost B sends a **SYN**chronize-**ACK**nowledgement\n\nHost A receives B's **SYN-ACK**\n\nHost A sends **ACK**nowledge\n\nHost B receives **ACK** ==> TCP socket connection is **ESTABLISHED**.\n\n**DIAGRAM**\n<img src=\"https://s6.postimg.org/jc3kpw441/14872147436908.gif\" class=\"img-shadow\" width=\"200\">\n\n\n**Detailed Answer**\nFor reliable connection, the transmitting device first establishes a connection-oriented (reliable) session with its peer system, which is called three way handshake. Data is then transferred. When the data transfer is finished, connection is terminated and virtual circuit is teared down.\n\n1. Source send a TCP SYN segment with the initial sequence number X indicating the desire to open the connection\n2. When Destination receives TCP SYN, it acknowledges this with ACK(X+1) as well as its own SYN Y (this tells Source what sequence number it will start its data with and will use in further msgs). This response is called SYN/ACK\n3. Source sends and ACK(ACK = Y+1) segment to the Destination indicating that the connection is set up. Data transfer can then begin \n\n> This handshaking process can be used to created a DOS attack:\n> The client opens up the SYN connection, the server responds with the SYN/ACK, but then the client sends another SYN. The server treats this as a new connection request and keeps the previous connection open. As this is repeated over and over many times very quickly, the server quickly becomes saturated with a huge number of connec\n\n### Closure of Connection TCP\nUnlike opening a connection, closing using \"4-way\" method:\n\n1. A sends \"FIN\" to B\n2. When B receives \"FIN\", B sends back \"ACK\" to A\n3. B sends \"FIN\" to A\n4. When A receives \"FIN\", A sends back \"ACK\" to B\n\n<img src=\"https://s6.postimg.org/dufkftya9/14875567718974.jpg\" class=\"img-shadow\" height=\"300\">\n\n\n### Connection-oriented and Connectionless Protocols\nConnection-oriented: e.g. TCP (Transmission Control Protocol). Services: SMTP (Email), HTTP/FTP(Web browser, apps), SSH/Telnet (Remote access)\n~ telephone\nConnectionless: e.g. UDP (User Datagram Protocol). Services: DNS, Video Conference, DHCP\n~ post office\n\n_Difference between Connection and Connectionless Services:_\n\n1. In connection oriented service authentication is needed while connectionless service does not need any authentication.\n2. Connection oriented protocol makes a connection and checks whether message is received or not and sends again if an error occurs connectionless service protocol does not guarantees a delivery.\n3. Connection oriented service is more reliable than connectionless service.\n4. Connection oriented service interface is stream based and connectionless is message based.\n\n| |TCP|UDP|\n|---|---|---|\n|Usage|TCP is suited for applications that require high reliability and transmission time is less critical| UDP is suitable for applications that need fast, efficient transmission, such as games. UDP's stateless nature is also useful for servers that answer small queries from huge numbers of clients|\n|Use by other protocols| HTTP, FTP, SMTP, Telnet| DNS, DHCP, RIP, VOIP|\n|Ordering of packets| TCP rearranges data packets in the order specified| No inherent order. If ordering is required, it has to be managed on the application layer|\n|Speed| slower than UDP| faster as there is no error-checking for packets|\n|Reliability| Absolute guarantee that the data transferred remains intact and arrives in the same order in which it was sent| No guarantee that the messages or packets sent would reach at all|\n|Header Size| 20 bytes| 8 bytes|\n|Common Header Fields| Source port, Destination port, Check sum|Source port, Destination port, Check sum|\n|Data Flow Control| TCP does Flow Control. TCP requires three packets to set up a socket connection, before any user data can be sent. TCP handles reliability and congestion control.|UDP does not have an option for flow control |\n\n### How to defend from DDoS Attack?\nFirst, you cannot protect your company from a DDoS attack 100% of the time. \nThen, make sure that you have ample bandwidth so that you have some extra time to react\nUse CDN or VPN\nNext, monitor your site closely for symptoms that might indicate a DDoS attack.\nBlock the machine/Network that is launching the attack \n\n\n\n\n\n","slug":"tcp-ip","published":1,"updated":"2017-08-02T14:15:30.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwivk001b0x1x828eab20","content":"<p>A beginner’s notes when learning TCP/IP.<br><a id=\"more\"></a></p>\n<h2 id=\"General-Overview\"><a href=\"#General-Overview\" class=\"headerlink\" title=\"General Overview\"></a>General Overview</h2><hr>\n<h3 id=\"TCP-IP-Stands-for\"><a href=\"#TCP-IP-Stands-for\" class=\"headerlink\" title=\"TCP/IP Stands for:\"></a>TCP/IP Stands for:</h3><p>Transmission Control Protocol/ Internet Protocol</p>\n<h3 id=\"What-do-they-do\"><a href=\"#What-do-they-do\" class=\"headerlink\" title=\"What do they do?\"></a>What do they do?</h3><p>The protocols that make up TCP/IP define:</p>\n<ul>\n<li>How data is transmitted across a network (IP)</li>\n<li>How data should be formatted so other networked systems can understand it (TCP)</li>\n</ul>\n<p>(1. 怎么包装; 2. 怎么送达)</p>\n<p>TCP/IP provides a complete system for formatting, transmitting, and receiving data on a network</p>\n<h3 id=\"Decentralized-Data-Network\"><a href=\"#Decentralized-Data-Network\" class=\"headerlink\" title=\"Decentralized Data Network\"></a>Decentralized Data Network</h3><ul>\n<li>TCP/IP’s decentralized nature is a key reason it’s still ubiquitous today</li>\n<li>2 Key TCP/IP features support decentralization:<ul>\n<li><strong>End node verification</strong>: the two endpoints of any data transfer are responsible for making sure it was successful - no centralized control scheme</li>\n<li><strong>Dynamic routing</strong>: End nodes can transfer data over multiple paths, and the network chooses the best (fastest, most reliable) path for each individual data transfer</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-Core-Networking-Problem\"><a href=\"#5-Core-Networking-Problem\" class=\"headerlink\" title=\"5 Core Networking Problem\"></a>5 Core Networking Problem</h3><ul>\n<li>Addressing<ul>\n<li>Physical Addressing: Every network-connected hardware device has a unique ID, referred to as a MAC (Machine Access Code) ~ <em>Just like a phone number</em></li>\n<li>Low-level TCP/IP protocols use MAC address to move data across the physical network to the right device</li>\n<li>But as the network grows larger, it’s impossible to let one machine to listen to all the other machines</li>\n<li>IP Address: logical address configured in a node’s TCPIP implementation</li>\n<li>IP addresses can be broken down into network, subnet, and host ID numbers</li>\n</ul>\n</li>\n<li>Routing<ul>\n<li>Routers are special network devices that let you divide large networks into smaller subnets</li>\n<li>A well-designed network uses router to create a tree-like structure</li>\n<li>Routers use the logical address information in a data packet to send it to its destination</li>\n</ul>\n</li>\n<li>Name Resolution<ul>\n<li>Those logical IP addresses are better than MAC, but still not very good for human to read. ==&gt; Domain Names, e.g. www.google.com</li>\n<li><strong>Name Resolution</strong> is the process of mapping logical addresses back and forth into domain names</li>\n<li>Special <strong>name servers</strong> store the mapping information in databases</li>\n</ul>\n</li>\n<li>Flow Control<ul>\n<li>TCP/IP has features to guarantee reliable data transfers</li>\n</ul>\n</li>\n<li>Application Support<ul>\n<li>Able to run multiple network apps simultaneously</li>\n<li><strong>Ports</strong>: logical channels provided by TCP/IP that allow multiple applications to access the network simultaneously</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Key-Points\"><a href=\"#Key-Points\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h2><hr>\n<h3 id=\"7-Layers-of-OSI\"><a href=\"#7-Layers-of-OSI\" class=\"headerlink\" title=\"7 Layers of OSI\"></a>7 Layers of OSI</h3><p><img src=\"https://s6.postimg.org/t84npj9w1/14872108408581.jpg\" class=\"img-shadow\" width=\"400px\"></p>\n<p>IP at Layer 3.<br>TCP at Layer 4.</p>\n<h3 id=\"TCP-IP-Model-structure\"><a href=\"#TCP-IP-Model-structure\" class=\"headerlink\" title=\"TCP/IP Model structure:\"></a>TCP/IP Model structure:</h3><table>\n<thead>\n<tr>\n<th>Layers of TCP/IP Model</th>\n<th>Protocols</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Application</td>\n<td>DNS, DHCP, FTP, TFTP, SMTP, HTTP, RDP, Telnet, SSH</td>\n</tr>\n<tr>\n<td>Transport</td>\n<td>TCP, UDP</td>\n</tr>\n<tr>\n<td>Internet</td>\n<td>IP, ICMP, IGMP</td>\n</tr>\n<tr>\n<td>Network Access</td>\n<td>Ethernet, Token Ring, FDDI, X.25, Frame Relay, ARP, RARP</td>\n</tr>\n</tbody>\n</table>\n<p><em>Encapsulation:</em><br>Encapsulation is the process that occurs when data is to be sent out of the source computer. When data moves from upper layer to lower layer of TCP/IP protocol stack (outgoing transmission), each layer adds the corresponding header to the data.</p>\n<h3 id=\"IP-address\"><a href=\"#IP-address\" class=\"headerlink\" title=\"IP address:\"></a>IP address:</h3><ul>\n<li>When setting up a small private network, you are free to use ANY IP-addresses. The reserved IP-address for private network is: 192.168.x.y, where x=same number on all systems and y=different/unique number on all systems.<br><img src=\"https://s6.postimg.org/ypx9dc53l/14872125483479.png\" class=\"img-shadow\" width=\"500px\"></li>\n</ul>\n<p>The router will have its unique IP address within the Internet world, say 233.13.23.4<br>也就是说在其他的private network, 里面的machine也可以用192.168.10.1, etc. NAT(network address translation) is built into the Router, and will be used to translate the address.</p>\n<ul>\n<li>When you are connected to a company network, you need to ask the Network-administrator to assign you an IP-address. </li>\n<li>If you are connected to the Internet, your ISP (Internet Service Provider) will assign an IP-address to you.</li>\n</ul>\n<p><em>Private IP Address:</em><br>If any router sees an address starts with ‘10.’, it will not route data for that IP address.<br>10.0.0.0 - 10.255.255.255:  8 bit for network, 24 bit for host ID<br>172.16.0.0 - 172.31.255.255: 12 for network, 20 for host<br>192.168.0.0 - 192.168.255.255: 16 for network, 16 for host</p>\n<p><em>DHCP:</em> (Dynamic Host Control Protocol)<br>On your DHCP sever, you will specify the scope of the IPs that can be assigned, say 192.168.1.100 ~ 159<br>and the default gateway (i.e the router), say 192.168.1.1<br>and the DNS address: say 192.168.1.1<br>You can configure a lease period on the DHCP server. That will be the time that any dynamically assigned IP can be used by another machine. At 50% time point, the machine will try to communicate and ask for renew.</p>\n<p><em>Windowing:</em><br>It is the biggest concept in TCP.<br>The idea is, after IP connects 2 machines (A and B) together, then A starts to transmit a file (say a word doc) to B. Under TCP, A divides the file into packages, and starts sending 1 package to B. Now the window size is 1.<br>Then if B receives the 1 package successfully, it acknowledges that to A. Then A starts to send 2 packages - window size becomes 2.<br>Then the window size will double, double, double.<br>But if there is a problem so that B cannot correctly acknowledge the last index number of received packages, the window size get back to 1.</p>\n<p>Nowadays, this protocol causes problem for real-life communication.</p>\n<p><em>Subnet Masking:</em><br>Usually, the subnet mask is provided by your ISP or other high level server. What we need to understand is that if the subnet mask is 255.255.255.0, it means we can at most have $2^8-2 = 254 $ machines within this subnet.</p>\n<p>If we got 2 computers that are on different subnet, they cannot talk to each other. They need a router.</p>\n<p><img src=\"https://s6.postimg.org/95uz6wjpt/14872141052756.jpg\" height=\"300\"></p>\n<p><img src=\"https://s6.postimg.org/fnih45jgx/14872143238335.png\" class=\"img-shadow\" height=\"300\"></p>\n<p><img src=\"https://s6.postimg.org/knfxc3p3l/14872143106349.png\" class=\"img-shadow\" height=\"250\"></p>\n<p>Class A<br>0NNNNNNN.HHHHHHHH.HHHHHHHH.HHHHHHHH<br>Starts with 1~126<br>Default subnet mask: 255.0.0.0</p>\n<blockquote>\n<p>leading bit is always 0.<br>$2^7 = 128$ networks,<br>$2^24 - 2$ hosts$</p>\n</blockquote>\n<p>Class B<br>10NNNNNN.NNNNNNNN.HHHHHHHH.HHHHHHHH<br>Starts with 129~191<br>Default subnet mask: 255.255.0.0</p>\n<blockquote>\n<p>$2^14 = 16,384$ networks<br>$2^16 - 2$ hosts</p>\n</blockquote>\n<p>Class C<br>110NNNNN.NNNNNNNN.NNNNNNNN.HHHHHHHH<br>Starts with 192~223<br>Default subnet mask: 255.255.255.0</p>\n<blockquote>\n<p>$2^21 networks$ networks<br>$2^8 -2 = 254$ hosts</p>\n</blockquote>\n<p>Class D (multicast)<br>1110………..<br>Starts with 224~239, the rest is not defined </p>\n<p><strong>Loopback Address</strong> = 127.0.0.0, any data sent to this address will be directly sent back to the sender<br><strong>Network Address</strong>: IP address where all the host address is set to be 0<br><strong>Broadcast Address</strong>: All host address is set to be 255. Any data sent to this address will be broadcasted to the whole network.<br>A: 102.255.255.255, B: 168.212.255.255, C:195.195.92.255</p>\n<h3 id=\"TCP-3-Way-Handshake\"><a href=\"#TCP-3-Way-Handshake\" class=\"headerlink\" title=\"TCP 3-Way Handshake:\"></a>TCP 3-Way Handshake:</h3><p><strong>EVENT</strong><br>Host A sends a TCP <strong>SYN</strong>chronize packet to Host B</p>\n<p>Host B receives A’s <strong>SYN</strong></p>\n<p>Host B sends a <strong>SYN</strong>chronize-<strong>ACK</strong>nowledgement</p>\n<p>Host A receives B’s <strong>SYN-ACK</strong></p>\n<p>Host A sends <strong>ACK</strong>nowledge</p>\n<p>Host B receives <strong>ACK</strong> ==&gt; TCP socket connection is <strong>ESTABLISHED</strong>.</p>\n<p><strong>DIAGRAM</strong><br><img src=\"https://s6.postimg.org/jc3kpw441/14872147436908.gif\" class=\"img-shadow\" width=\"200\"></p>\n<p><strong>Detailed Answer</strong><br>For reliable connection, the transmitting device first establishes a connection-oriented (reliable) session with its peer system, which is called three way handshake. Data is then transferred. When the data transfer is finished, connection is terminated and virtual circuit is teared down.</p>\n<ol>\n<li>Source send a TCP SYN segment with the initial sequence number X indicating the desire to open the connection</li>\n<li>When Destination receives TCP SYN, it acknowledges this with ACK(X+1) as well as its own SYN Y (this tells Source what sequence number it will start its data with and will use in further msgs). This response is called SYN/ACK</li>\n<li>Source sends and ACK(ACK = Y+1) segment to the Destination indicating that the connection is set up. Data transfer can then begin </li>\n</ol>\n<blockquote>\n<p>This handshaking process can be used to created a DOS attack:<br>The client opens up the SYN connection, the server responds with the SYN/ACK, but then the client sends another SYN. The server treats this as a new connection request and keeps the previous connection open. As this is repeated over and over many times very quickly, the server quickly becomes saturated with a huge number of connec</p>\n</blockquote>\n<h3 id=\"Closure-of-Connection-TCP\"><a href=\"#Closure-of-Connection-TCP\" class=\"headerlink\" title=\"Closure of Connection TCP\"></a>Closure of Connection TCP</h3><p>Unlike opening a connection, closing using “4-way” method:</p>\n<ol>\n<li>A sends “FIN” to B</li>\n<li>When B receives “FIN”, B sends back “ACK” to A</li>\n<li>B sends “FIN” to A</li>\n<li>When A receives “FIN”, A sends back “ACK” to B</li>\n</ol>\n<p><img src=\"https://s6.postimg.org/dufkftya9/14875567718974.jpg\" class=\"img-shadow\" height=\"300\"></p>\n<h3 id=\"Connection-oriented-and-Connectionless-Protocols\"><a href=\"#Connection-oriented-and-Connectionless-Protocols\" class=\"headerlink\" title=\"Connection-oriented and Connectionless Protocols\"></a>Connection-oriented and Connectionless Protocols</h3><p>Connection-oriented: e.g. TCP (Transmission Control Protocol). Services: SMTP (Email), HTTP/FTP(Web browser, apps), SSH/Telnet (Remote access)<br>~ telephone<br>Connectionless: e.g. UDP (User Datagram Protocol). Services: DNS, Video Conference, DHCP<br>~ post office</p>\n<p><em>Difference between Connection and Connectionless Services:</em></p>\n<ol>\n<li>In connection oriented service authentication is needed while connectionless service does not need any authentication.</li>\n<li>Connection oriented protocol makes a connection and checks whether message is received or not and sends again if an error occurs connectionless service protocol does not guarantees a delivery.</li>\n<li>Connection oriented service is more reliable than connectionless service.</li>\n<li>Connection oriented service interface is stream based and connectionless is message based.</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>TCP</th>\n<th>UDP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Usage</td>\n<td>TCP is suited for applications that require high reliability and transmission time is less critical</td>\n<td>UDP is suitable for applications that need fast, efficient transmission, such as games. UDP’s stateless nature is also useful for servers that answer small queries from huge numbers of clients</td>\n</tr>\n<tr>\n<td>Use by other protocols</td>\n<td>HTTP, FTP, SMTP, Telnet</td>\n<td>DNS, DHCP, RIP, VOIP</td>\n</tr>\n<tr>\n<td>Ordering of packets</td>\n<td>TCP rearranges data packets in the order specified</td>\n<td>No inherent order. If ordering is required, it has to be managed on the application layer</td>\n</tr>\n<tr>\n<td>Speed</td>\n<td>slower than UDP</td>\n<td>faster as there is no error-checking for packets</td>\n</tr>\n<tr>\n<td>Reliability</td>\n<td>Absolute guarantee that the data transferred remains intact and arrives in the same order in which it was sent</td>\n<td>No guarantee that the messages or packets sent would reach at all</td>\n</tr>\n<tr>\n<td>Header Size</td>\n<td>20 bytes</td>\n<td>8 bytes</td>\n</tr>\n<tr>\n<td>Common Header Fields</td>\n<td>Source port, Destination port, Check sum</td>\n<td>Source port, Destination port, Check sum</td>\n</tr>\n<tr>\n<td>Data Flow Control</td>\n<td>TCP does Flow Control. TCP requires three packets to set up a socket connection, before any user data can be sent. TCP handles reliability and congestion control.</td>\n<td>UDP does not have an option for flow control</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"How-to-defend-from-DDoS-Attack\"><a href=\"#How-to-defend-from-DDoS-Attack\" class=\"headerlink\" title=\"How to defend from DDoS Attack?\"></a>How to defend from DDoS Attack?</h3><p>First, you cannot protect your company from a DDoS attack 100% of the time.<br>Then, make sure that you have ample bandwidth so that you have some extra time to react<br>Use CDN or VPN<br>Next, monitor your site closely for symptoms that might indicate a DDoS attack.<br>Block the machine/Network that is launching the attack </p>\n","site":{"data":{}},"excerpt":"<p>A beginner’s notes when learning TCP/IP.<br>","more":"</p>\n<h2 id=\"General-Overview\"><a href=\"#General-Overview\" class=\"headerlink\" title=\"General Overview\"></a>General Overview</h2><hr>\n<h3 id=\"TCP-IP-Stands-for\"><a href=\"#TCP-IP-Stands-for\" class=\"headerlink\" title=\"TCP/IP Stands for:\"></a>TCP/IP Stands for:</h3><p>Transmission Control Protocol/ Internet Protocol</p>\n<h3 id=\"What-do-they-do\"><a href=\"#What-do-they-do\" class=\"headerlink\" title=\"What do they do?\"></a>What do they do?</h3><p>The protocols that make up TCP/IP define:</p>\n<ul>\n<li>How data is transmitted across a network (IP)</li>\n<li>How data should be formatted so other networked systems can understand it (TCP)</li>\n</ul>\n<p>(1. 怎么包装; 2. 怎么送达)</p>\n<p>TCP/IP provides a complete system for formatting, transmitting, and receiving data on a network</p>\n<h3 id=\"Decentralized-Data-Network\"><a href=\"#Decentralized-Data-Network\" class=\"headerlink\" title=\"Decentralized Data Network\"></a>Decentralized Data Network</h3><ul>\n<li>TCP/IP’s decentralized nature is a key reason it’s still ubiquitous today</li>\n<li>2 Key TCP/IP features support decentralization:<ul>\n<li><strong>End node verification</strong>: the two endpoints of any data transfer are responsible for making sure it was successful - no centralized control scheme</li>\n<li><strong>Dynamic routing</strong>: End nodes can transfer data over multiple paths, and the network chooses the best (fastest, most reliable) path for each individual data transfer</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-Core-Networking-Problem\"><a href=\"#5-Core-Networking-Problem\" class=\"headerlink\" title=\"5 Core Networking Problem\"></a>5 Core Networking Problem</h3><ul>\n<li>Addressing<ul>\n<li>Physical Addressing: Every network-connected hardware device has a unique ID, referred to as a MAC (Machine Access Code) ~ <em>Just like a phone number</em></li>\n<li>Low-level TCP/IP protocols use MAC address to move data across the physical network to the right device</li>\n<li>But as the network grows larger, it’s impossible to let one machine to listen to all the other machines</li>\n<li>IP Address: logical address configured in a node’s TCPIP implementation</li>\n<li>IP addresses can be broken down into network, subnet, and host ID numbers</li>\n</ul>\n</li>\n<li>Routing<ul>\n<li>Routers are special network devices that let you divide large networks into smaller subnets</li>\n<li>A well-designed network uses router to create a tree-like structure</li>\n<li>Routers use the logical address information in a data packet to send it to its destination</li>\n</ul>\n</li>\n<li>Name Resolution<ul>\n<li>Those logical IP addresses are better than MAC, but still not very good for human to read. ==&gt; Domain Names, e.g. www.google.com</li>\n<li><strong>Name Resolution</strong> is the process of mapping logical addresses back and forth into domain names</li>\n<li>Special <strong>name servers</strong> store the mapping information in databases</li>\n</ul>\n</li>\n<li>Flow Control<ul>\n<li>TCP/IP has features to guarantee reliable data transfers</li>\n</ul>\n</li>\n<li>Application Support<ul>\n<li>Able to run multiple network apps simultaneously</li>\n<li><strong>Ports</strong>: logical channels provided by TCP/IP that allow multiple applications to access the network simultaneously</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Key-Points\"><a href=\"#Key-Points\" class=\"headerlink\" title=\"Key Points\"></a>Key Points</h2><hr>\n<h3 id=\"7-Layers-of-OSI\"><a href=\"#7-Layers-of-OSI\" class=\"headerlink\" title=\"7 Layers of OSI\"></a>7 Layers of OSI</h3><p><img src=\"https://s6.postimg.org/t84npj9w1/14872108408581.jpg\" class=\"img-shadow\" width=\"400px\"></p>\n<p>IP at Layer 3.<br>TCP at Layer 4.</p>\n<h3 id=\"TCP-IP-Model-structure\"><a href=\"#TCP-IP-Model-structure\" class=\"headerlink\" title=\"TCP/IP Model structure:\"></a>TCP/IP Model structure:</h3><table>\n<thead>\n<tr>\n<th>Layers of TCP/IP Model</th>\n<th>Protocols</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Application</td>\n<td>DNS, DHCP, FTP, TFTP, SMTP, HTTP, RDP, Telnet, SSH</td>\n</tr>\n<tr>\n<td>Transport</td>\n<td>TCP, UDP</td>\n</tr>\n<tr>\n<td>Internet</td>\n<td>IP, ICMP, IGMP</td>\n</tr>\n<tr>\n<td>Network Access</td>\n<td>Ethernet, Token Ring, FDDI, X.25, Frame Relay, ARP, RARP</td>\n</tr>\n</tbody>\n</table>\n<p><em>Encapsulation:</em><br>Encapsulation is the process that occurs when data is to be sent out of the source computer. When data moves from upper layer to lower layer of TCP/IP protocol stack (outgoing transmission), each layer adds the corresponding header to the data.</p>\n<h3 id=\"IP-address\"><a href=\"#IP-address\" class=\"headerlink\" title=\"IP address:\"></a>IP address:</h3><ul>\n<li>When setting up a small private network, you are free to use ANY IP-addresses. The reserved IP-address for private network is: 192.168.x.y, where x=same number on all systems and y=different/unique number on all systems.<br><img src=\"https://s6.postimg.org/ypx9dc53l/14872125483479.png\" class=\"img-shadow\" width=\"500px\"></li>\n</ul>\n<p>The router will have its unique IP address within the Internet world, say 233.13.23.4<br>也就是说在其他的private network, 里面的machine也可以用192.168.10.1, etc. NAT(network address translation) is built into the Router, and will be used to translate the address.</p>\n<ul>\n<li>When you are connected to a company network, you need to ask the Network-administrator to assign you an IP-address. </li>\n<li>If you are connected to the Internet, your ISP (Internet Service Provider) will assign an IP-address to you.</li>\n</ul>\n<p><em>Private IP Address:</em><br>If any router sees an address starts with ‘10.’, it will not route data for that IP address.<br>10.0.0.0 - 10.255.255.255:  8 bit for network, 24 bit for host ID<br>172.16.0.0 - 172.31.255.255: 12 for network, 20 for host<br>192.168.0.0 - 192.168.255.255: 16 for network, 16 for host</p>\n<p><em>DHCP:</em> (Dynamic Host Control Protocol)<br>On your DHCP sever, you will specify the scope of the IPs that can be assigned, say 192.168.1.100 ~ 159<br>and the default gateway (i.e the router), say 192.168.1.1<br>and the DNS address: say 192.168.1.1<br>You can configure a lease period on the DHCP server. That will be the time that any dynamically assigned IP can be used by another machine. At 50% time point, the machine will try to communicate and ask for renew.</p>\n<p><em>Windowing:</em><br>It is the biggest concept in TCP.<br>The idea is, after IP connects 2 machines (A and B) together, then A starts to transmit a file (say a word doc) to B. Under TCP, A divides the file into packages, and starts sending 1 package to B. Now the window size is 1.<br>Then if B receives the 1 package successfully, it acknowledges that to A. Then A starts to send 2 packages - window size becomes 2.<br>Then the window size will double, double, double.<br>But if there is a problem so that B cannot correctly acknowledge the last index number of received packages, the window size get back to 1.</p>\n<p>Nowadays, this protocol causes problem for real-life communication.</p>\n<p><em>Subnet Masking:</em><br>Usually, the subnet mask is provided by your ISP or other high level server. What we need to understand is that if the subnet mask is 255.255.255.0, it means we can at most have $2^8-2 = 254 $ machines within this subnet.</p>\n<p>If we got 2 computers that are on different subnet, they cannot talk to each other. They need a router.</p>\n<p><img src=\"https://s6.postimg.org/95uz6wjpt/14872141052756.jpg\" height=\"300\"></p>\n<p><img src=\"https://s6.postimg.org/fnih45jgx/14872143238335.png\" class=\"img-shadow\" height=\"300\"></p>\n<p><img src=\"https://s6.postimg.org/knfxc3p3l/14872143106349.png\" class=\"img-shadow\" height=\"250\"></p>\n<p>Class A<br>0NNNNNNN.HHHHHHHH.HHHHHHHH.HHHHHHHH<br>Starts with 1~126<br>Default subnet mask: 255.0.0.0</p>\n<blockquote>\n<p>leading bit is always 0.<br>$2^7 = 128$ networks,<br>$2^24 - 2$ hosts$</p>\n</blockquote>\n<p>Class B<br>10NNNNNN.NNNNNNNN.HHHHHHHH.HHHHHHHH<br>Starts with 129~191<br>Default subnet mask: 255.255.0.0</p>\n<blockquote>\n<p>$2^14 = 16,384$ networks<br>$2^16 - 2$ hosts</p>\n</blockquote>\n<p>Class C<br>110NNNNN.NNNNNNNN.NNNNNNNN.HHHHHHHH<br>Starts with 192~223<br>Default subnet mask: 255.255.255.0</p>\n<blockquote>\n<p>$2^21 networks$ networks<br>$2^8 -2 = 254$ hosts</p>\n</blockquote>\n<p>Class D (multicast)<br>1110………..<br>Starts with 224~239, the rest is not defined </p>\n<p><strong>Loopback Address</strong> = 127.0.0.0, any data sent to this address will be directly sent back to the sender<br><strong>Network Address</strong>: IP address where all the host address is set to be 0<br><strong>Broadcast Address</strong>: All host address is set to be 255. Any data sent to this address will be broadcasted to the whole network.<br>A: 102.255.255.255, B: 168.212.255.255, C:195.195.92.255</p>\n<h3 id=\"TCP-3-Way-Handshake\"><a href=\"#TCP-3-Way-Handshake\" class=\"headerlink\" title=\"TCP 3-Way Handshake:\"></a>TCP 3-Way Handshake:</h3><p><strong>EVENT</strong><br>Host A sends a TCP <strong>SYN</strong>chronize packet to Host B</p>\n<p>Host B receives A’s <strong>SYN</strong></p>\n<p>Host B sends a <strong>SYN</strong>chronize-<strong>ACK</strong>nowledgement</p>\n<p>Host A receives B’s <strong>SYN-ACK</strong></p>\n<p>Host A sends <strong>ACK</strong>nowledge</p>\n<p>Host B receives <strong>ACK</strong> ==&gt; TCP socket connection is <strong>ESTABLISHED</strong>.</p>\n<p><strong>DIAGRAM</strong><br><img src=\"https://s6.postimg.org/jc3kpw441/14872147436908.gif\" class=\"img-shadow\" width=\"200\"></p>\n<p><strong>Detailed Answer</strong><br>For reliable connection, the transmitting device first establishes a connection-oriented (reliable) session with its peer system, which is called three way handshake. Data is then transferred. When the data transfer is finished, connection is terminated and virtual circuit is teared down.</p>\n<ol>\n<li>Source send a TCP SYN segment with the initial sequence number X indicating the desire to open the connection</li>\n<li>When Destination receives TCP SYN, it acknowledges this with ACK(X+1) as well as its own SYN Y (this tells Source what sequence number it will start its data with and will use in further msgs). This response is called SYN/ACK</li>\n<li>Source sends and ACK(ACK = Y+1) segment to the Destination indicating that the connection is set up. Data transfer can then begin </li>\n</ol>\n<blockquote>\n<p>This handshaking process can be used to created a DOS attack:<br>The client opens up the SYN connection, the server responds with the SYN/ACK, but then the client sends another SYN. The server treats this as a new connection request and keeps the previous connection open. As this is repeated over and over many times very quickly, the server quickly becomes saturated with a huge number of connec</p>\n</blockquote>\n<h3 id=\"Closure-of-Connection-TCP\"><a href=\"#Closure-of-Connection-TCP\" class=\"headerlink\" title=\"Closure of Connection TCP\"></a>Closure of Connection TCP</h3><p>Unlike opening a connection, closing using “4-way” method:</p>\n<ol>\n<li>A sends “FIN” to B</li>\n<li>When B receives “FIN”, B sends back “ACK” to A</li>\n<li>B sends “FIN” to A</li>\n<li>When A receives “FIN”, A sends back “ACK” to B</li>\n</ol>\n<p><img src=\"https://s6.postimg.org/dufkftya9/14875567718974.jpg\" class=\"img-shadow\" height=\"300\"></p>\n<h3 id=\"Connection-oriented-and-Connectionless-Protocols\"><a href=\"#Connection-oriented-and-Connectionless-Protocols\" class=\"headerlink\" title=\"Connection-oriented and Connectionless Protocols\"></a>Connection-oriented and Connectionless Protocols</h3><p>Connection-oriented: e.g. TCP (Transmission Control Protocol). Services: SMTP (Email), HTTP/FTP(Web browser, apps), SSH/Telnet (Remote access)<br>~ telephone<br>Connectionless: e.g. UDP (User Datagram Protocol). Services: DNS, Video Conference, DHCP<br>~ post office</p>\n<p><em>Difference between Connection and Connectionless Services:</em></p>\n<ol>\n<li>In connection oriented service authentication is needed while connectionless service does not need any authentication.</li>\n<li>Connection oriented protocol makes a connection and checks whether message is received or not and sends again if an error occurs connectionless service protocol does not guarantees a delivery.</li>\n<li>Connection oriented service is more reliable than connectionless service.</li>\n<li>Connection oriented service interface is stream based and connectionless is message based.</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>TCP</th>\n<th>UDP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Usage</td>\n<td>TCP is suited for applications that require high reliability and transmission time is less critical</td>\n<td>UDP is suitable for applications that need fast, efficient transmission, such as games. UDP’s stateless nature is also useful for servers that answer small queries from huge numbers of clients</td>\n</tr>\n<tr>\n<td>Use by other protocols</td>\n<td>HTTP, FTP, SMTP, Telnet</td>\n<td>DNS, DHCP, RIP, VOIP</td>\n</tr>\n<tr>\n<td>Ordering of packets</td>\n<td>TCP rearranges data packets in the order specified</td>\n<td>No inherent order. If ordering is required, it has to be managed on the application layer</td>\n</tr>\n<tr>\n<td>Speed</td>\n<td>slower than UDP</td>\n<td>faster as there is no error-checking for packets</td>\n</tr>\n<tr>\n<td>Reliability</td>\n<td>Absolute guarantee that the data transferred remains intact and arrives in the same order in which it was sent</td>\n<td>No guarantee that the messages or packets sent would reach at all</td>\n</tr>\n<tr>\n<td>Header Size</td>\n<td>20 bytes</td>\n<td>8 bytes</td>\n</tr>\n<tr>\n<td>Common Header Fields</td>\n<td>Source port, Destination port, Check sum</td>\n<td>Source port, Destination port, Check sum</td>\n</tr>\n<tr>\n<td>Data Flow Control</td>\n<td>TCP does Flow Control. TCP requires three packets to set up a socket connection, before any user data can be sent. TCP handles reliability and congestion control.</td>\n<td>UDP does not have an option for flow control</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"How-to-defend-from-DDoS-Attack\"><a href=\"#How-to-defend-from-DDoS-Attack\" class=\"headerlink\" title=\"How to defend from DDoS Attack?\"></a>How to defend from DDoS Attack?</h3><p>First, you cannot protect your company from a DDoS attack 100% of the time.<br>Then, make sure that you have ample bandwidth so that you have some extra time to react<br>Use CDN or VPN<br>Next, monitor your site closely for symptoms that might indicate a DDoS attack.<br>Block the machine/Network that is launching the attack </p>"},{"title":"Understand Blockchain |理解区块链","date":"2017-01-25T13:38:08.000Z","keywords":null,"description":null,"toc":true,"_content":"\n简单介绍下区块链(blockchain)的关键概念\n\n<!--more -->\n区块链科技来源于比特币，如果你还不是很了解比特币，比较建议先去查询下比特币的科普视频。然后再可以先去看下我之前的一个学习笔记[Bitcoin Blockchain |比特币区块链理解](http://blog.peiyingchi.com/2017/01/19/bitcoin-blockchain/)\n\n### 基本原理\n基本概念包括：\n\n* 交易（Transaction）：一次操作，导致账本状态的一次改变，如添加一条记录；\n* 区块（Block）：记录一段时间内发生的交易和状态结果，是对当前账本状态的一次共识；\n* 链（Chain）：由一个个区块按照发生顺序串联而成，是整个状态变化的日志记录。\n\n如果把区块链作为一个状态机，则每次交易就是试图改变一次状态，而每次共识生成的区块，就是参与者对于区块中所有交易内容导致状态改变的结果进行确认。\n<img src=\"https://s6.postimg.org/46ce59hw1/14832797016611.png\" class=\"img-shadow\" width=\"500px\">\n\n\n节点需要将新区块的前一 个区块的哈希值、当前时间戳、一段时间内发生的有效交易及其梅克尔树 根值等内容打包成一个区块,向全网广播。\n\n<img src=\"https://s6.postimg.org/859lo36j5/14834176626345.jpg\" class=\"img-shadow\" width=\"550px\">\n\n<img src=\"https://s6.postimg.org/j69c6uo5t/14834178266616.jpg\" class=\"img-shadow\" width=\"550px\">\n\nBlockchain 2.0 的典型特征如下：\n\n1. 智能合约（smart contract）：区块链系统中的应用，是已编码的、可自动运行的业务逻辑，通常有自己的代币和专用开发语言\n2. DAPP:包含用户界面的应用，包括但不限于各种加密货币，如以太坊钱包\n3. 虚拟机：用于执行智能合约编译后的代码。\n\n>智能合约程序不只是一个可以自动执行的计算机程序：它自己就是一个系统参与者。它对接收到的信息进行回应，它可以接收和储存价值，也可以向外发送信息和价值。 这个程序就像一个可以被信任的人，可以临时保管资产，总是按照事先的规则执行操作。\n\n### 常用缩略语\n\n| 缩略语  | 完整                   |\n| ---- | -------------------- |\n| PoW  | 工作量证明(Proof of Work) |\n|PoS|权益证明(Proof of Stake)\n|DPoS|股份授权证明(Delegate Proof of Stake)\n|PBFT|实用拜占庭容错(Practical Byzantine Fault Tolerance)\n|P2P|点对点(Peer to Peer)\n|DAPP|分布式应用(Decentralized Application)\n|KYC|客户识别(Know Your Customer)\n|RSA|RSA加密算法(RSA Algorithm)\n|ECC|椭圆加密算法(Elliptic Curve Cryptography)\n|BaaS|区块链即服务(Blockchain as a Service)|\n\n### 非对称加密算法\n非对称加密算法是指使用公私钥对数据存储和传输进行加密和解 密。公钥可公开发布,用于发送方加密要发送的信息,私钥用于接收方 解密接收到的加密内容。公私钥对计算时间较长,主要用于加密较少的 数据。常用的非对称加密算法有RSA和ECC。非对称加密算法的过程如图 2-3所示。区块链正是使用非对称加密的公私钥对来构建节点间信任的。\n<img src=\"https://s6.postimg.org/cd4dwu7yp/14834174393360.jpg\" class=\"img-shadow\" >\n\n### POW v.s. POS\n#### POW: Proof of Work | 工作量证明\n一方（通常称为证明人）出示计算结果，这个结果众所周知是很难计算的但却很容易验证的。通过验证这个结果，任何人都能够确认证明人执行了一定量的计算工作量来产生这个结果\n\n#### POS：Proof of Stake | 股权证明\n \n这又是什么意思呢？简单来说，就是一个根据你持有货币的量和时间，给你发利息的一个制度，在股权证明POS模式下，有一个名词叫币龄，每个币每天产生1币龄，比如你持有100个币，总共持有了30天，那么，此时你的币龄就为3000，这个时候，如果你发现了一个POS区块，你的币龄就会被清空为0。你每被清空365币龄，你将会从区块中获得0.05个币的利息(可理解为年利率5%)，那么在这个案例中，利息 = 3000 * 5% / 365 = 0.41个币，这下就很有意思了，持币有利息，非常好！（需要注意的是，5%的年利率仅仅是小编举例，并非每个POS模式的币种都是5%，比如点点币PPCoin就是1%年利率）\n\n### 分类\n\n根据参与者的不同，可以分为公开（Public）链、联盟（Consortium）链和私有（Private）链。\n公开链，顾名思义，任何人都可以参与使用和维护，典型的如比特币区块链，信息是完全公开的。\n如果引入许可机制，包括私有链和联盟链两种。\n私有链，则是集中管理者进行限制，只能得到内部少数人可以使用，信息不公开。\n联盟链则介于两者之间，由若干组织一起合作维护一条区块链，该区块链的使用必须是有权限的管理，相关信息会得到保护，典型如银联组织。\n目前来看，公开链将会更多的吸引社区和媒体的眼球，但更多的商业价值应该在联盟链和私有链上。\n根据使用目的和场景的不同，又可以分为以数字货币为目的的货币链，以记录产权为目的的产权链，以众筹为目的的众筹链等。\n<img src=\"https://s6.postimg.org/c4beknkk1/14834271525238.jpg\" class=\"img-shadow\" >\n\n\n### 误区\n\n目前，对区块链的认识还存在不少误区。\n首先，**区块链不是数据库**。虽然区块链也可以用来存储数据，但它要解决的问题是多方的互信问题。单纯从存储数据角度，它的效率可能不高，笔者也不推荐把大量的原始数据放到区块链上。\n其次，**区块链不是要颠覆现有技术**。作为基于多项已有技术而出现的新事物，区块链跟现有技术的关系是一脉相承的，在解决多方合作和可信处理上多走了一步，但并不意味着它将彻底颠覆已有的商业模式。很长一段时间里，区块链的适用场景仍需摸索，跟已有系统必然是合作共存的关系。\n\n\n### 应用场景\nWith smart contracts, for the first time, you can build business process automation software that cuts across different stakeholders, and can be relied on by all. Blockchain technology can get everyone looking at the same core data set.\n\n未来几年内，可能深入应用区块链的场景将包括：\n\n* 金融服务：主要是降低交易成本，减少跨组织交易风险等。该领域的区块链应用将最快成熟起来，银行和金融交易机构将是主力推动者。\n* 征信和权属管理：这是大型社交平台和保险公司都梦寐以求的，目前还缺乏足够的数据来源、可靠的平台支持和有效的数据分析和管理。该领域创业的门槛极高，需要自上而下的推动。\n* 资源共享：airbnb 为代表的公司将欢迎这类应用，极大降低管理成本。这个领域创业门槛低，主题集中，会受到投资热捧。\n* 投资管理：无论公募还是私募基金，都可以应用区块链技术降低管理成本和管控风险。虽然有 DAO 这样的试水，谨慎认为该领域的需求还未成熟。\n* 物联网与供应链：物联网是很适合的一个领域，短期内会有大量应用出现，特别是租赁、物流等特定场景。但物联网自身的发展局限将导致短期内较难出现规模应用\n\n<img src=\"https://s6.postimg.org/4tbauses1/14839471054639.png\" width=\"650px\">\n\n<img src=\"https://s6.postimg.org/8e76e0jbl/14845303553536.jpg\" width=\"650px\">\n<div style=\"text-align: right\">  *(click on the picture to enlarge)* </div>\n\n### 未来区块链生态\n![](https://s6.postimg.org/v0h34hmfl/14835824591159.jpg)\n\n### 整体设计\n![](https://s30.postimg.org/ssvnxgtr5/14898915018403.jpg)\n\n## 参考资料：\nhttp://book.8btc.com/books/1/digital_giant_chain/_book/\nhttp://8btc.com/doc-view-182.html\n\n\n","source":"_posts/understand-blockchain-01.md","raw":"---\ntitle: Understand Blockchain |理解区块链\ndate: 2017-01-25 21:38:08\ncategories:\n- Blockchain\ntags: ##标签，多标签格式为 [tag1,tag2,...]\n- blockchain\nkeywords: ##文章关键词，多个的格式为 keyword1,keywords2,...\ndescription: ##文章描述, 主要是SEO用\ntoc: true\n---\n\n简单介绍下区块链(blockchain)的关键概念\n\n<!--more -->\n区块链科技来源于比特币，如果你还不是很了解比特币，比较建议先去查询下比特币的科普视频。然后再可以先去看下我之前的一个学习笔记[Bitcoin Blockchain |比特币区块链理解](http://blog.peiyingchi.com/2017/01/19/bitcoin-blockchain/)\n\n### 基本原理\n基本概念包括：\n\n* 交易（Transaction）：一次操作，导致账本状态的一次改变，如添加一条记录；\n* 区块（Block）：记录一段时间内发生的交易和状态结果，是对当前账本状态的一次共识；\n* 链（Chain）：由一个个区块按照发生顺序串联而成，是整个状态变化的日志记录。\n\n如果把区块链作为一个状态机，则每次交易就是试图改变一次状态，而每次共识生成的区块，就是参与者对于区块中所有交易内容导致状态改变的结果进行确认。\n<img src=\"https://s6.postimg.org/46ce59hw1/14832797016611.png\" class=\"img-shadow\" width=\"500px\">\n\n\n节点需要将新区块的前一 个区块的哈希值、当前时间戳、一段时间内发生的有效交易及其梅克尔树 根值等内容打包成一个区块,向全网广播。\n\n<img src=\"https://s6.postimg.org/859lo36j5/14834176626345.jpg\" class=\"img-shadow\" width=\"550px\">\n\n<img src=\"https://s6.postimg.org/j69c6uo5t/14834178266616.jpg\" class=\"img-shadow\" width=\"550px\">\n\nBlockchain 2.0 的典型特征如下：\n\n1. 智能合约（smart contract）：区块链系统中的应用，是已编码的、可自动运行的业务逻辑，通常有自己的代币和专用开发语言\n2. DAPP:包含用户界面的应用，包括但不限于各种加密货币，如以太坊钱包\n3. 虚拟机：用于执行智能合约编译后的代码。\n\n>智能合约程序不只是一个可以自动执行的计算机程序：它自己就是一个系统参与者。它对接收到的信息进行回应，它可以接收和储存价值，也可以向外发送信息和价值。 这个程序就像一个可以被信任的人，可以临时保管资产，总是按照事先的规则执行操作。\n\n### 常用缩略语\n\n| 缩略语  | 完整                   |\n| ---- | -------------------- |\n| PoW  | 工作量证明(Proof of Work) |\n|PoS|权益证明(Proof of Stake)\n|DPoS|股份授权证明(Delegate Proof of Stake)\n|PBFT|实用拜占庭容错(Practical Byzantine Fault Tolerance)\n|P2P|点对点(Peer to Peer)\n|DAPP|分布式应用(Decentralized Application)\n|KYC|客户识别(Know Your Customer)\n|RSA|RSA加密算法(RSA Algorithm)\n|ECC|椭圆加密算法(Elliptic Curve Cryptography)\n|BaaS|区块链即服务(Blockchain as a Service)|\n\n### 非对称加密算法\n非对称加密算法是指使用公私钥对数据存储和传输进行加密和解 密。公钥可公开发布,用于发送方加密要发送的信息,私钥用于接收方 解密接收到的加密内容。公私钥对计算时间较长,主要用于加密较少的 数据。常用的非对称加密算法有RSA和ECC。非对称加密算法的过程如图 2-3所示。区块链正是使用非对称加密的公私钥对来构建节点间信任的。\n<img src=\"https://s6.postimg.org/cd4dwu7yp/14834174393360.jpg\" class=\"img-shadow\" >\n\n### POW v.s. POS\n#### POW: Proof of Work | 工作量证明\n一方（通常称为证明人）出示计算结果，这个结果众所周知是很难计算的但却很容易验证的。通过验证这个结果，任何人都能够确认证明人执行了一定量的计算工作量来产生这个结果\n\n#### POS：Proof of Stake | 股权证明\n \n这又是什么意思呢？简单来说，就是一个根据你持有货币的量和时间，给你发利息的一个制度，在股权证明POS模式下，有一个名词叫币龄，每个币每天产生1币龄，比如你持有100个币，总共持有了30天，那么，此时你的币龄就为3000，这个时候，如果你发现了一个POS区块，你的币龄就会被清空为0。你每被清空365币龄，你将会从区块中获得0.05个币的利息(可理解为年利率5%)，那么在这个案例中，利息 = 3000 * 5% / 365 = 0.41个币，这下就很有意思了，持币有利息，非常好！（需要注意的是，5%的年利率仅仅是小编举例，并非每个POS模式的币种都是5%，比如点点币PPCoin就是1%年利率）\n\n### 分类\n\n根据参与者的不同，可以分为公开（Public）链、联盟（Consortium）链和私有（Private）链。\n公开链，顾名思义，任何人都可以参与使用和维护，典型的如比特币区块链，信息是完全公开的。\n如果引入许可机制，包括私有链和联盟链两种。\n私有链，则是集中管理者进行限制，只能得到内部少数人可以使用，信息不公开。\n联盟链则介于两者之间，由若干组织一起合作维护一条区块链，该区块链的使用必须是有权限的管理，相关信息会得到保护，典型如银联组织。\n目前来看，公开链将会更多的吸引社区和媒体的眼球，但更多的商业价值应该在联盟链和私有链上。\n根据使用目的和场景的不同，又可以分为以数字货币为目的的货币链，以记录产权为目的的产权链，以众筹为目的的众筹链等。\n<img src=\"https://s6.postimg.org/c4beknkk1/14834271525238.jpg\" class=\"img-shadow\" >\n\n\n### 误区\n\n目前，对区块链的认识还存在不少误区。\n首先，**区块链不是数据库**。虽然区块链也可以用来存储数据，但它要解决的问题是多方的互信问题。单纯从存储数据角度，它的效率可能不高，笔者也不推荐把大量的原始数据放到区块链上。\n其次，**区块链不是要颠覆现有技术**。作为基于多项已有技术而出现的新事物，区块链跟现有技术的关系是一脉相承的，在解决多方合作和可信处理上多走了一步，但并不意味着它将彻底颠覆已有的商业模式。很长一段时间里，区块链的适用场景仍需摸索，跟已有系统必然是合作共存的关系。\n\n\n### 应用场景\nWith smart contracts, for the first time, you can build business process automation software that cuts across different stakeholders, and can be relied on by all. Blockchain technology can get everyone looking at the same core data set.\n\n未来几年内，可能深入应用区块链的场景将包括：\n\n* 金融服务：主要是降低交易成本，减少跨组织交易风险等。该领域的区块链应用将最快成熟起来，银行和金融交易机构将是主力推动者。\n* 征信和权属管理：这是大型社交平台和保险公司都梦寐以求的，目前还缺乏足够的数据来源、可靠的平台支持和有效的数据分析和管理。该领域创业的门槛极高，需要自上而下的推动。\n* 资源共享：airbnb 为代表的公司将欢迎这类应用，极大降低管理成本。这个领域创业门槛低，主题集中，会受到投资热捧。\n* 投资管理：无论公募还是私募基金，都可以应用区块链技术降低管理成本和管控风险。虽然有 DAO 这样的试水，谨慎认为该领域的需求还未成熟。\n* 物联网与供应链：物联网是很适合的一个领域，短期内会有大量应用出现，特别是租赁、物流等特定场景。但物联网自身的发展局限将导致短期内较难出现规模应用\n\n<img src=\"https://s6.postimg.org/4tbauses1/14839471054639.png\" width=\"650px\">\n\n<img src=\"https://s6.postimg.org/8e76e0jbl/14845303553536.jpg\" width=\"650px\">\n<div style=\"text-align: right\">  *(click on the picture to enlarge)* </div>\n\n### 未来区块链生态\n![](https://s6.postimg.org/v0h34hmfl/14835824591159.jpg)\n\n### 整体设计\n![](https://s30.postimg.org/ssvnxgtr5/14898915018403.jpg)\n\n## 参考资料：\nhttp://book.8btc.com/books/1/digital_giant_chain/_book/\nhttp://8btc.com/doc-view-182.html\n\n\n","slug":"understand-blockchain-01","published":1,"updated":"2017-03-19T08:13:14.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjdejwivm001d0x1xumt7pbdk","content":"<p>简单介绍下区块链(blockchain)的关键概念</p>\n<a id=\"more\"></a>\n<p>区块链科技来源于比特币，如果你还不是很了解比特币，比较建议先去查询下比特币的科普视频。然后再可以先去看下我之前的一个学习笔记<a href=\"http://blog.peiyingchi.com/2017/01/19/bitcoin-blockchain/\">Bitcoin Blockchain |比特币区块链理解</a></p>\n<h3 id=\"基本原理\"><a href=\"#基本原理\" class=\"headerlink\" title=\"基本原理\"></a>基本原理</h3><p>基本概念包括：</p>\n<ul>\n<li>交易（Transaction）：一次操作，导致账本状态的一次改变，如添加一条记录；</li>\n<li>区块（Block）：记录一段时间内发生的交易和状态结果，是对当前账本状态的一次共识；</li>\n<li>链（Chain）：由一个个区块按照发生顺序串联而成，是整个状态变化的日志记录。</li>\n</ul>\n<p>如果把区块链作为一个状态机，则每次交易就是试图改变一次状态，而每次共识生成的区块，就是参与者对于区块中所有交易内容导致状态改变的结果进行确认。<br><img src=\"https://s6.postimg.org/46ce59hw1/14832797016611.png\" class=\"img-shadow\" width=\"500px\"></p>\n<p>节点需要将新区块的前一 个区块的哈希值、当前时间戳、一段时间内发生的有效交易及其梅克尔树 根值等内容打包成一个区块,向全网广播。</p>\n<p><img src=\"https://s6.postimg.org/859lo36j5/14834176626345.jpg\" class=\"img-shadow\" width=\"550px\"></p>\n<p><img src=\"https://s6.postimg.org/j69c6uo5t/14834178266616.jpg\" class=\"img-shadow\" width=\"550px\"></p>\n<p>Blockchain 2.0 的典型特征如下：</p>\n<ol>\n<li>智能合约（smart contract）：区块链系统中的应用，是已编码的、可自动运行的业务逻辑，通常有自己的代币和专用开发语言</li>\n<li>DAPP:包含用户界面的应用，包括但不限于各种加密货币，如以太坊钱包</li>\n<li>虚拟机：用于执行智能合约编译后的代码。</li>\n</ol>\n<blockquote>\n<p>智能合约程序不只是一个可以自动执行的计算机程序：它自己就是一个系统参与者。它对接收到的信息进行回应，它可以接收和储存价值，也可以向外发送信息和价值。 这个程序就像一个可以被信任的人，可以临时保管资产，总是按照事先的规则执行操作。</p>\n</blockquote>\n<h3 id=\"常用缩略语\"><a href=\"#常用缩略语\" class=\"headerlink\" title=\"常用缩略语\"></a>常用缩略语</h3><table>\n<thead>\n<tr>\n<th>缩略语</th>\n<th>完整</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PoW</td>\n<td>工作量证明(Proof of Work)</td>\n</tr>\n<tr>\n<td>PoS</td>\n<td>权益证明(Proof of Stake)</td>\n</tr>\n<tr>\n<td>DPoS</td>\n<td>股份授权证明(Delegate Proof of Stake)</td>\n</tr>\n<tr>\n<td>PBFT</td>\n<td>实用拜占庭容错(Practical Byzantine Fault Tolerance)</td>\n</tr>\n<tr>\n<td>P2P</td>\n<td>点对点(Peer to Peer)</td>\n</tr>\n<tr>\n<td>DAPP</td>\n<td>分布式应用(Decentralized Application)</td>\n</tr>\n<tr>\n<td>KYC</td>\n<td>客户识别(Know Your Customer)</td>\n</tr>\n<tr>\n<td>RSA</td>\n<td>RSA加密算法(RSA Algorithm)</td>\n</tr>\n<tr>\n<td>ECC</td>\n<td>椭圆加密算法(Elliptic Curve Cryptography)</td>\n</tr>\n<tr>\n<td>BaaS</td>\n<td>区块链即服务(Blockchain as a Service)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"非对称加密算法\"><a href=\"#非对称加密算法\" class=\"headerlink\" title=\"非对称加密算法\"></a>非对称加密算法</h3><p>非对称加密算法是指使用公私钥对数据存储和传输进行加密和解 密。公钥可公开发布,用于发送方加密要发送的信息,私钥用于接收方 解密接收到的加密内容。公私钥对计算时间较长,主要用于加密较少的 数据。常用的非对称加密算法有RSA和ECC。非对称加密算法的过程如图 2-3所示。区块链正是使用非对称加密的公私钥对来构建节点间信任的。<br><img src=\"https://s6.postimg.org/cd4dwu7yp/14834174393360.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"POW-v-s-POS\"><a href=\"#POW-v-s-POS\" class=\"headerlink\" title=\"POW v.s. POS\"></a>POW v.s. POS</h3><h4 id=\"POW-Proof-of-Work-工作量证明\"><a href=\"#POW-Proof-of-Work-工作量证明\" class=\"headerlink\" title=\"POW: Proof of Work | 工作量证明\"></a>POW: Proof of Work | 工作量证明</h4><p>一方（通常称为证明人）出示计算结果，这个结果众所周知是很难计算的但却很容易验证的。通过验证这个结果，任何人都能够确认证明人执行了一定量的计算工作量来产生这个结果</p>\n<h4 id=\"POS：Proof-of-Stake-股权证明\"><a href=\"#POS：Proof-of-Stake-股权证明\" class=\"headerlink\" title=\"POS：Proof of Stake | 股权证明\"></a>POS：Proof of Stake | 股权证明</h4><p>这又是什么意思呢？简单来说，就是一个根据你持有货币的量和时间，给你发利息的一个制度，在股权证明POS模式下，有一个名词叫币龄，每个币每天产生1币龄，比如你持有100个币，总共持有了30天，那么，此时你的币龄就为3000，这个时候，如果你发现了一个POS区块，你的币龄就会被清空为0。你每被清空365币龄，你将会从区块中获得0.05个币的利息(可理解为年利率5%)，那么在这个案例中，利息 = 3000 * 5% / 365 = 0.41个币，这下就很有意思了，持币有利息，非常好！（需要注意的是，5%的年利率仅仅是小编举例，并非每个POS模式的币种都是5%，比如点点币PPCoin就是1%年利率）</p>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><p>根据参与者的不同，可以分为公开（Public）链、联盟（Consortium）链和私有（Private）链。<br>公开链，顾名思义，任何人都可以参与使用和维护，典型的如比特币区块链，信息是完全公开的。<br>如果引入许可机制，包括私有链和联盟链两种。<br>私有链，则是集中管理者进行限制，只能得到内部少数人可以使用，信息不公开。<br>联盟链则介于两者之间，由若干组织一起合作维护一条区块链，该区块链的使用必须是有权限的管理，相关信息会得到保护，典型如银联组织。<br>目前来看，公开链将会更多的吸引社区和媒体的眼球，但更多的商业价值应该在联盟链和私有链上。<br>根据使用目的和场景的不同，又可以分为以数字货币为目的的货币链，以记录产权为目的的产权链，以众筹为目的的众筹链等。<br><img src=\"https://s6.postimg.org/c4beknkk1/14834271525238.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"误区\"><a href=\"#误区\" class=\"headerlink\" title=\"误区\"></a>误区</h3><p>目前，对区块链的认识还存在不少误区。<br>首先，<strong>区块链不是数据库</strong>。虽然区块链也可以用来存储数据，但它要解决的问题是多方的互信问题。单纯从存储数据角度，它的效率可能不高，笔者也不推荐把大量的原始数据放到区块链上。<br>其次，<strong>区块链不是要颠覆现有技术</strong>。作为基于多项已有技术而出现的新事物，区块链跟现有技术的关系是一脉相承的，在解决多方合作和可信处理上多走了一步，但并不意味着它将彻底颠覆已有的商业模式。很长一段时间里，区块链的适用场景仍需摸索，跟已有系统必然是合作共存的关系。</p>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>With smart contracts, for the first time, you can build business process automation software that cuts across different stakeholders, and can be relied on by all. Blockchain technology can get everyone looking at the same core data set.</p>\n<p>未来几年内，可能深入应用区块链的场景将包括：</p>\n<ul>\n<li>金融服务：主要是降低交易成本，减少跨组织交易风险等。该领域的区块链应用将最快成熟起来，银行和金融交易机构将是主力推动者。</li>\n<li>征信和权属管理：这是大型社交平台和保险公司都梦寐以求的，目前还缺乏足够的数据来源、可靠的平台支持和有效的数据分析和管理。该领域创业的门槛极高，需要自上而下的推动。</li>\n<li>资源共享：airbnb 为代表的公司将欢迎这类应用，极大降低管理成本。这个领域创业门槛低，主题集中，会受到投资热捧。</li>\n<li>投资管理：无论公募还是私募基金，都可以应用区块链技术降低管理成本和管控风险。虽然有 DAO 这样的试水，谨慎认为该领域的需求还未成熟。</li>\n<li>物联网与供应链：物联网是很适合的一个领域，短期内会有大量应用出现，特别是租赁、物流等特定场景。但物联网自身的发展局限将导致短期内较难出现规模应用</li>\n</ul>\n<p><img src=\"https://s6.postimg.org/4tbauses1/14839471054639.png\" width=\"650px\"></p>\n<p><img src=\"https://s6.postimg.org/8e76e0jbl/14845303553536.jpg\" width=\"650px\"></p>\n<div style=\"text-align: right\">  <em>(click on the picture to enlarge)</em> </div>\n\n<h3 id=\"未来区块链生态\"><a href=\"#未来区块链生态\" class=\"headerlink\" title=\"未来区块链生态\"></a>未来区块链生态</h3><p><img src=\"https://s6.postimg.org/v0h34hmfl/14835824591159.jpg\" alt=\"\"></p>\n<h3 id=\"整体设计\"><a href=\"#整体设计\" class=\"headerlink\" title=\"整体设计\"></a>整体设计</h3><p><img src=\"https://s30.postimg.org/ssvnxgtr5/14898915018403.jpg\" alt=\"\"></p>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><p><a href=\"http://book.8btc.com/books/1/digital_giant_chain/_book/\" target=\"_blank\" rel=\"external\">http://book.8btc.com/books/1/digital_giant_chain/_book/</a><br><a href=\"http://8btc.com/doc-view-182.html\" target=\"_blank\" rel=\"external\">http://8btc.com/doc-view-182.html</a></p>\n","site":{"data":{}},"excerpt":"<p>简单介绍下区块链(blockchain)的关键概念</p>","more":"<p>区块链科技来源于比特币，如果你还不是很了解比特币，比较建议先去查询下比特币的科普视频。然后再可以先去看下我之前的一个学习笔记<a href=\"http://blog.peiyingchi.com/2017/01/19/bitcoin-blockchain/\">Bitcoin Blockchain |比特币区块链理解</a></p>\n<h3 id=\"基本原理\"><a href=\"#基本原理\" class=\"headerlink\" title=\"基本原理\"></a>基本原理</h3><p>基本概念包括：</p>\n<ul>\n<li>交易（Transaction）：一次操作，导致账本状态的一次改变，如添加一条记录；</li>\n<li>区块（Block）：记录一段时间内发生的交易和状态结果，是对当前账本状态的一次共识；</li>\n<li>链（Chain）：由一个个区块按照发生顺序串联而成，是整个状态变化的日志记录。</li>\n</ul>\n<p>如果把区块链作为一个状态机，则每次交易就是试图改变一次状态，而每次共识生成的区块，就是参与者对于区块中所有交易内容导致状态改变的结果进行确认。<br><img src=\"https://s6.postimg.org/46ce59hw1/14832797016611.png\" class=\"img-shadow\" width=\"500px\"></p>\n<p>节点需要将新区块的前一 个区块的哈希值、当前时间戳、一段时间内发生的有效交易及其梅克尔树 根值等内容打包成一个区块,向全网广播。</p>\n<p><img src=\"https://s6.postimg.org/859lo36j5/14834176626345.jpg\" class=\"img-shadow\" width=\"550px\"></p>\n<p><img src=\"https://s6.postimg.org/j69c6uo5t/14834178266616.jpg\" class=\"img-shadow\" width=\"550px\"></p>\n<p>Blockchain 2.0 的典型特征如下：</p>\n<ol>\n<li>智能合约（smart contract）：区块链系统中的应用，是已编码的、可自动运行的业务逻辑，通常有自己的代币和专用开发语言</li>\n<li>DAPP:包含用户界面的应用，包括但不限于各种加密货币，如以太坊钱包</li>\n<li>虚拟机：用于执行智能合约编译后的代码。</li>\n</ol>\n<blockquote>\n<p>智能合约程序不只是一个可以自动执行的计算机程序：它自己就是一个系统参与者。它对接收到的信息进行回应，它可以接收和储存价值，也可以向外发送信息和价值。 这个程序就像一个可以被信任的人，可以临时保管资产，总是按照事先的规则执行操作。</p>\n</blockquote>\n<h3 id=\"常用缩略语\"><a href=\"#常用缩略语\" class=\"headerlink\" title=\"常用缩略语\"></a>常用缩略语</h3><table>\n<thead>\n<tr>\n<th>缩略语</th>\n<th>完整</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PoW</td>\n<td>工作量证明(Proof of Work)</td>\n</tr>\n<tr>\n<td>PoS</td>\n<td>权益证明(Proof of Stake)</td>\n</tr>\n<tr>\n<td>DPoS</td>\n<td>股份授权证明(Delegate Proof of Stake)</td>\n</tr>\n<tr>\n<td>PBFT</td>\n<td>实用拜占庭容错(Practical Byzantine Fault Tolerance)</td>\n</tr>\n<tr>\n<td>P2P</td>\n<td>点对点(Peer to Peer)</td>\n</tr>\n<tr>\n<td>DAPP</td>\n<td>分布式应用(Decentralized Application)</td>\n</tr>\n<tr>\n<td>KYC</td>\n<td>客户识别(Know Your Customer)</td>\n</tr>\n<tr>\n<td>RSA</td>\n<td>RSA加密算法(RSA Algorithm)</td>\n</tr>\n<tr>\n<td>ECC</td>\n<td>椭圆加密算法(Elliptic Curve Cryptography)</td>\n</tr>\n<tr>\n<td>BaaS</td>\n<td>区块链即服务(Blockchain as a Service)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"非对称加密算法\"><a href=\"#非对称加密算法\" class=\"headerlink\" title=\"非对称加密算法\"></a>非对称加密算法</h3><p>非对称加密算法是指使用公私钥对数据存储和传输进行加密和解 密。公钥可公开发布,用于发送方加密要发送的信息,私钥用于接收方 解密接收到的加密内容。公私钥对计算时间较长,主要用于加密较少的 数据。常用的非对称加密算法有RSA和ECC。非对称加密算法的过程如图 2-3所示。区块链正是使用非对称加密的公私钥对来构建节点间信任的。<br><img src=\"https://s6.postimg.org/cd4dwu7yp/14834174393360.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"POW-v-s-POS\"><a href=\"#POW-v-s-POS\" class=\"headerlink\" title=\"POW v.s. POS\"></a>POW v.s. POS</h3><h4 id=\"POW-Proof-of-Work-工作量证明\"><a href=\"#POW-Proof-of-Work-工作量证明\" class=\"headerlink\" title=\"POW: Proof of Work | 工作量证明\"></a>POW: Proof of Work | 工作量证明</h4><p>一方（通常称为证明人）出示计算结果，这个结果众所周知是很难计算的但却很容易验证的。通过验证这个结果，任何人都能够确认证明人执行了一定量的计算工作量来产生这个结果</p>\n<h4 id=\"POS：Proof-of-Stake-股权证明\"><a href=\"#POS：Proof-of-Stake-股权证明\" class=\"headerlink\" title=\"POS：Proof of Stake | 股权证明\"></a>POS：Proof of Stake | 股权证明</h4><p>这又是什么意思呢？简单来说，就是一个根据你持有货币的量和时间，给你发利息的一个制度，在股权证明POS模式下，有一个名词叫币龄，每个币每天产生1币龄，比如你持有100个币，总共持有了30天，那么，此时你的币龄就为3000，这个时候，如果你发现了一个POS区块，你的币龄就会被清空为0。你每被清空365币龄，你将会从区块中获得0.05个币的利息(可理解为年利率5%)，那么在这个案例中，利息 = 3000 * 5% / 365 = 0.41个币，这下就很有意思了，持币有利息，非常好！（需要注意的是，5%的年利率仅仅是小编举例，并非每个POS模式的币种都是5%，比如点点币PPCoin就是1%年利率）</p>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><p>根据参与者的不同，可以分为公开（Public）链、联盟（Consortium）链和私有（Private）链。<br>公开链，顾名思义，任何人都可以参与使用和维护，典型的如比特币区块链，信息是完全公开的。<br>如果引入许可机制，包括私有链和联盟链两种。<br>私有链，则是集中管理者进行限制，只能得到内部少数人可以使用，信息不公开。<br>联盟链则介于两者之间，由若干组织一起合作维护一条区块链，该区块链的使用必须是有权限的管理，相关信息会得到保护，典型如银联组织。<br>目前来看，公开链将会更多的吸引社区和媒体的眼球，但更多的商业价值应该在联盟链和私有链上。<br>根据使用目的和场景的不同，又可以分为以数字货币为目的的货币链，以记录产权为目的的产权链，以众筹为目的的众筹链等。<br><img src=\"https://s6.postimg.org/c4beknkk1/14834271525238.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"误区\"><a href=\"#误区\" class=\"headerlink\" title=\"误区\"></a>误区</h3><p>目前，对区块链的认识还存在不少误区。<br>首先，<strong>区块链不是数据库</strong>。虽然区块链也可以用来存储数据，但它要解决的问题是多方的互信问题。单纯从存储数据角度，它的效率可能不高，笔者也不推荐把大量的原始数据放到区块链上。<br>其次，<strong>区块链不是要颠覆现有技术</strong>。作为基于多项已有技术而出现的新事物，区块链跟现有技术的关系是一脉相承的，在解决多方合作和可信处理上多走了一步，但并不意味着它将彻底颠覆已有的商业模式。很长一段时间里，区块链的适用场景仍需摸索，跟已有系统必然是合作共存的关系。</p>\n<h3 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h3><p>With smart contracts, for the first time, you can build business process automation software that cuts across different stakeholders, and can be relied on by all. Blockchain technology can get everyone looking at the same core data set.</p>\n<p>未来几年内，可能深入应用区块链的场景将包括：</p>\n<ul>\n<li>金融服务：主要是降低交易成本，减少跨组织交易风险等。该领域的区块链应用将最快成熟起来，银行和金融交易机构将是主力推动者。</li>\n<li>征信和权属管理：这是大型社交平台和保险公司都梦寐以求的，目前还缺乏足够的数据来源、可靠的平台支持和有效的数据分析和管理。该领域创业的门槛极高，需要自上而下的推动。</li>\n<li>资源共享：airbnb 为代表的公司将欢迎这类应用，极大降低管理成本。这个领域创业门槛低，主题集中，会受到投资热捧。</li>\n<li>投资管理：无论公募还是私募基金，都可以应用区块链技术降低管理成本和管控风险。虽然有 DAO 这样的试水，谨慎认为该领域的需求还未成熟。</li>\n<li>物联网与供应链：物联网是很适合的一个领域，短期内会有大量应用出现，特别是租赁、物流等特定场景。但物联网自身的发展局限将导致短期内较难出现规模应用</li>\n</ul>\n<p><img src=\"https://s6.postimg.org/4tbauses1/14839471054639.png\" width=\"650px\"></p>\n<p><img src=\"https://s6.postimg.org/8e76e0jbl/14845303553536.jpg\" width=\"650px\"></p>\n<div style=\"text-align: right\">  <em>(click on the picture to enlarge)</em> </div>\n\n<h3 id=\"未来区块链生态\"><a href=\"#未来区块链生态\" class=\"headerlink\" title=\"未来区块链生态\"></a>未来区块链生态</h3><p><img src=\"https://s6.postimg.org/v0h34hmfl/14835824591159.jpg\" alt=\"\"></p>\n<h3 id=\"整体设计\"><a href=\"#整体设计\" class=\"headerlink\" title=\"整体设计\"></a>整体设计</h3><p><img src=\"https://s30.postimg.org/ssvnxgtr5/14898915018403.jpg\" alt=\"\"></p>\n<h2 id=\"参考资料：\"><a href=\"#参考资料：\" class=\"headerlink\" title=\"参考资料：\"></a>参考资料：</h2><p><a href=\"http://book.8btc.com/books/1/digital_giant_chain/_book/\" target=\"_blank\" rel=\"external\">http://book.8btc.com/books/1/digital_giant_chain/_book/</a><br><a href=\"http://8btc.com/doc-view-182.html\" target=\"_blank\" rel=\"external\">http://8btc.com/doc-view-182.html</a></p>"},{"title":"区块链真的必要吗","date":"2017-02-19T02:55:28.000Z","comments":1,"toc":true,"thumbnail":null,"banner":null,"_content":"\n区块链技术需要继续克服的难点和其必要性的讨论。\n\n<!-- more -->\n\n## 你真的需要一个区块链应用吗？\n<img src=\"https://s6.postimg.org/awoa0yfo1/14898921653620.jpg\" class=\"img-shadow\" >\n\n\n### 成本。全部的成本\n\n对于区块链技术而言，首先是维护成本。区块链要运行，必须有一定的投资。如果要安全运行，就必须设计出安全机制。而安全机制也需要成本。在目前而言，说区块链比”传统技术”更好的，主要是从安全性、透明性、不可更改（防伪）等特性上出发。那么，要维持这些特性，就必须维持一个符合区块链技术特性的系统——一个开放、分布式的、并且足够安全的数据库系统。\n\n但是，维持这样一个系统，或者说同时达到这些目标，所需的成本非常昂贵。对于一个符合区块链技术特性的系统，首先要满足的是去中心化。这种去中心化的分布式不仅仅是“灾备”级别的分布式，而是系统中必须存在足够多个互不隶属，且独立决策的节点，并且记录区块链的权利在这些节点中以某些方式公平产生。也就是说，一个区块链系统中如果有100个份额的决策权，某个主体不能拥有51个以上。区块链系统不能由任何一个人说了算，至少要保证任何一个主体（或一致行动人）不占有超过51%的控制权。如果一个区块链系统全部或大部分由某个主体控制，那么和由该主体直接记录就没有差别了，为什么要用区块链呢？之所以用区块链，目的就是为了防止少数人操纵，是基于对个体的不信任。如果单一主体控制了区块链，区块链就失去了意义，甚至还不如由该主体维护的中心化系统效率高。\n\n<span style=\"color:red\"> 中心化并不一定代表着低效率。</span>\n在特定的范围内，中心化带来的资源集中式可以大大提升效率的。就以银联为例，银联是国内银行业清结算的中心，没加银行只需要和银联对接即可实现和所有银行的交易。若去中心化，每家银行需要和所有的交易对手去对接。Blockchain的去中心化，只能在特定领域（即不适合中心化的领域）发挥作用。\n\n当然，对于为了提高效率，降低内耗的联盟链来讲，还是有一定的应用价值。\n比如对银行来说：\n银行是不会接受谁都能来参与形成节点的区块链的，如果违法违规的事件发生时，银行没有权利保护被受害人，老百姓是不会买账的。那么，银行就必须限制节点参与记账，有且只有银行的“亲信节点”能够记账。这样，就保证银行的命令和想法能被每一个记账人执行而不出漏子，也同时保证隔壁不会有新的记账人跳进你的链里来搞事。这就便是“中心化的”区块链了。\n\n现在很多创业者们，说能用区块链解决信任的问题。我也不是想泼冷水...但是你们一没比特币那样大量的矿工和算力，二没金字塔顶端阶层的庞大信用，三没有木仓，这样的区块链就是无本之木，搞出来的应用还不如不用区块链简洁，除了忽悠风投好讲故事之外还有啥用啊？\n\n### 必要性\n必要性上面叙述了为了保证安全，必须投入大量成本。而成本又必须要来源于系统之外——不然的话，区块链就又变回了少数人操纵的游戏。而如此麻烦复杂的系统，真的是必要的吗？且不说金融系统目前有完善的解决方案，我们就谈一点：如果一个比特币交易所（或者：银行），哪怕采用了“区块链”技术，你还是要先信任它。不管这家高大上的机构采用了何种技术，你首先要把钱交给它。  \n\n当你把钱交给它以后，意味着你已经信任它了——那么，它采用什么技术，还有什么关系吗？（有的吧，比如说用了这个科技才会得到信任？）且不论用区块链记录股权是否合理，购买一家公司的股权，说明已经认可了这家公司的股权合同。至于这家公司以后命运如何，至少当你决定买下这股权时，已经决心承担持有期间的风险。此时，其实最大的风险已经被你接受，至于权益是以何种形式记载，无论是记载在羊皮纸还是区块链，只是形式的区别。真正重要的是你已经确立了权益关系。因此，在使用区块链进行所谓股权交易时，只是简化了股权交割和股权证明保存的步骤。或者说，保证你的股权证不会丢失或者被盗。当然事实上使用比特币记录股权是非常危险的，比特币私钥随时可能丢失和被盗——还不能补发，这和你丢了A股账户卡那张破纸完全不是一个性质。如果你的权益私钥丢失了，你就事实上失去了对公司权益的所有权。更不要说区块链系统的成本还包含学习成本！\n\n### 替代\n相比区块链这个复杂脆弱成本高昂的系统，现有的系统在处理很多问题上已经足够好了。现在的证券、银行的电子交易系统，虽然还有这样那样的问题，但能保证起码的安全，并有相当的效率。交易所的系统处理都是微秒级撮合，最快的日内选手也能发挥优势。而区块链为了保证安全，至少也要异步处理，延迟个半分钟吧？——这样效率的损失，究竟有否必要呢？\n\n[参考：Velaciela](https://dudu.zhihu.com/story/7563657)\n\n## 区块链的现有难题\n### 处理性能\n\n如何提高交易的吞吐量，同时降低交易的确认延迟。\n目前，公开的比特币区块链只能支持平均每秒约 7 笔的吞吐量，一般认为对于大额交易来说，安全的交易确认时间为一个小时。小额交易只要确认被广播到网络中并带有交易服务费用，即有较大概率被最终打包到区块中。\n> 因为在当前的算力下，对于6个区块（1小时）以前所记录的区块基本没有可以更改的可能性。\n\n区块链系统跟传统分布式系统不同，其处理性能无法通过单纯增加节点数来进行扩展，实际上，很大程度上取决于单个节点的处理能力。高性能、安全、稳定性、硬件辅助加解密能力，都将是考察节点性能的核心要素。\n\n一方面可以将单个节点采用高性能的处理硬件，同时设计优化的策略和算法，提高性能；另外一方面将大量高频的交易放到链外来，只用区块链记录最终交易信息，如 闪电网络 等。类似的，侧链（side chain）、影子链（shadow chain）等的思路在当前阶段也有一定的借鉴意义。类似设计可以很容易的将交易性能提升 1-2 个数量级。此外，如果采用联盟链的方式，在一定的信任前提和利益约束下优化设计，也可以换来性能的提升。目前，开源区块链自身在平台层面已经实现普通配置，单客户端每秒数百次的交易吞吐量（参考后面的 性能评测数据），乐观预测将很快突破每秒数千次的基准线，但离现有证券交易系统的每秒数万笔的峰值还是有较大差距。另外，从工程设计和平台部署上，都存在一些可以优化的地方。\n\n> 注：VISA 系统的处理均值为 2000 tps，号称的峰值为 56,000 tps；某支付系统的处理峰值超过了 85,000 tps；某证券交易所号称的处理均（峰）值在 80,000 tps 左右。\n\n### 扩展性\n\n常见的分布式系统，可以通过增加节点来扩展整个系统的处理能力。对于区块链网络系统来说，这个问题并非那么简单。\n\n网络中每个参与维护的核心节点都要保持一份完整的存储，并且进行智能合约的处理。因此，整个网络的总存储和计算能力，取决于单个节点。甚至当网络中节点数过多时，可能会因为一致性的达成过程延迟降低整个网络的性能。尤其在公有网络中，由于大量低质量处理节点的存在问题将更明显。信息量越大， 交叉验证所需的时间越长，效率也会也会越地下。**所以，区块链解决了信任问题，但带来了成本的上升和效率的下降。**\n\n比较直接的一些思路，是放松对每个节点都必须参与完整处理的限制（但至少部分节点要能合作完成完整的处理），这个思路已经在超级账本中启用；同时尽量减少核心层的处理工作。\n在联盟链模式下，还可以专门采用高性能的节点作为核心节点，用相对较弱的节点作为代理访问节点。\n\n### 系统安全\n\n区块链目前最热门的应用前景是金融相关的服务，安全自然是讨论最多、挑战最大的话题。\n\n区块链在设计上基于现有的成熟的密码学算法。但这是否就能确保其安全呢？\n世界上并没有绝对安全的系统。系统是由人设计的，系统也是由人来运营的，只要有人参与的系统，就容易出现漏洞。\n可以参考，著名黑客米特尼克所著的《反欺骗的艺术——世界传奇黑客的经历分享》，介绍了大量的实际社交工程欺骗场景。\n\n有如下几个方面是很难逃避的:\n首先是立法。对区块链系统如何进行监管？攻击区块链系统是否属于犯罪？攻击银行系统是要承担后果的。但是目前还没有任何法律保护区块链以及基于它的实现。\n\n其次是软件实现的潜在漏洞是无法避免的。考虑到使用了几十年的 openssl 还带着那么低级的漏洞（heart bleeding），而且是源代码就在大家眼皮底下。这背后曾经发生过啥，让人遐想连篇。对于金融系统来说，无论客户端还是平台侧，即便是很小的漏洞都可能造成难以估计的损失。\n\n另外，公有区块链所有交易记录都是公开可见的。搞大数据的人听了是不是开始激动起来了，确实，这里面能分析的东西还真不少，而且规模够大、影响力够大……实际上，已有文献证明，比特币区块链的交易记录最终是能追踪到用户的。\n还有就是作为一套完全的分布式系统，公有的区块链缺乏有效的调整机制，一旦运行起来，出现问题也难以修正。即使是让它变得更公平、更完善的修改，只要有部分既得利益者合起来反对，那就无法加入进去。这让比特币本身的价值也蒙上了一层阴影。\n\n此外，运行在区块链上的智能合约应用可能是五花八门的，必须要有办法进行安全管控，在注册和运行前需要有机制进行探测，以规避恶意代码的破坏。2016年6月17日，发生 DAO 系统漏洞被利用 事件，直接导致价值 6000 万美元的数字货币被利用者获取。尽管对于这件事情的反思还在进行中，但事实再次证明，目前基于区块链技术进行生产应用时，务必要细心谨慎地进行设计和验证。\n\n### 数据库和存储系统\n\n区块链网络中的块信息需要写到数据库中进行存储。观察区块链的应用，大量的写操作、hash 计算和验证操作，跟传统数据库的行为十分不同。当年，人们观察到互联网应用大量非事务性的查询操作，而设计了非关系型（NoSql）数据库。那么，针对区块链应用的这些特点，是否可以设计出一些特殊的针对性的数据库呢？\n\nlevelDB、RocksDB 等键值数据库，具备很高的随机写和顺序读写性能，以及相对较差随机读的性能，被广泛应用到了区块链信息存储中。但目前来看，面向区块链的数据库技术仍然是需要突破的技术难点之一。笔者认为，未来将可能出现更具针对性的“块数据库（BlockDB）”，专门服务类似区块链这样的新型数据业务，其中每条记录将包括一个完整的区块信息，并天然地跟历史信息进行关联，一旦写入确认无法修改。所有操作的最小单位将是一个块。\n\n### 可集成性\n\n在相当长的一段时间内，基于区块链的新业务系统将与已有的中心化系统共存。\n两种系统如何共存，如何分工，彼此的业务交易如何进行传递？\n这些都是很迫切的问题。这个问题解决不好，将是区块链技术落地的很大阻碍。\n\n### 智能合约\r智能合约可视作一段部署在区块链上可自动运行的程序,其涵盖的范 围包括编程语言、编译器、虚拟机、事件、状态机、容错机制等。\r\r虚拟机是区块链中智能合约的运行环境。虚拟机不仅被沙箱封装起来, 事实上它被完全隔离。也就是说运行在虚拟机内部的代码不能接触到网络、文件系统或者其他进程。甚至智能合约之间也只能进行有限的调用。智能合约本质上是一段程序,存在出错的可能性,甚至会引发严重问 题或连锁反应。需要做好充分的容错机制,通过系统化的手段,结合运行 环境隔离,确保合约在有限时间内按预期执行。\n\n### 其它\n\n区块链提供的新应用和新的业务场景，也带来了对很多具体的运营问题。\n例如：\n\n- 智能合约的合法性、安全性和可执行性；\n- 如何将现实中的合约和条约对应为电子合约；\n- 分布式系统的伸缩可靠性和数据迁移；\n- 对存储系统新的挑战，特别是性能。\n\n[参考：yeasy](https://github.com/yeasy/blockchain_guide/blob/master/intro/tech.md)\n\n","source":"_posts/区块链真的必要吗.md","raw":"---\ntitle: 区块链真的必要吗\ndate: 2017-02-19 10:55:28\ntags: blockchain\ncategories: Blockchain\ncomments:\ntoc: true\nthumbnail:\nbanner:\n---\n\n区块链技术需要继续克服的难点和其必要性的讨论。\n\n<!-- more -->\n\n## 你真的需要一个区块链应用吗？\n<img src=\"https://s6.postimg.org/awoa0yfo1/14898921653620.jpg\" class=\"img-shadow\" >\n\n\n### 成本。全部的成本\n\n对于区块链技术而言，首先是维护成本。区块链要运行，必须有一定的投资。如果要安全运行，就必须设计出安全机制。而安全机制也需要成本。在目前而言，说区块链比”传统技术”更好的，主要是从安全性、透明性、不可更改（防伪）等特性上出发。那么，要维持这些特性，就必须维持一个符合区块链技术特性的系统——一个开放、分布式的、并且足够安全的数据库系统。\n\n但是，维持这样一个系统，或者说同时达到这些目标，所需的成本非常昂贵。对于一个符合区块链技术特性的系统，首先要满足的是去中心化。这种去中心化的分布式不仅仅是“灾备”级别的分布式，而是系统中必须存在足够多个互不隶属，且独立决策的节点，并且记录区块链的权利在这些节点中以某些方式公平产生。也就是说，一个区块链系统中如果有100个份额的决策权，某个主体不能拥有51个以上。区块链系统不能由任何一个人说了算，至少要保证任何一个主体（或一致行动人）不占有超过51%的控制权。如果一个区块链系统全部或大部分由某个主体控制，那么和由该主体直接记录就没有差别了，为什么要用区块链呢？之所以用区块链，目的就是为了防止少数人操纵，是基于对个体的不信任。如果单一主体控制了区块链，区块链就失去了意义，甚至还不如由该主体维护的中心化系统效率高。\n\n<span style=\"color:red\"> 中心化并不一定代表着低效率。</span>\n在特定的范围内，中心化带来的资源集中式可以大大提升效率的。就以银联为例，银联是国内银行业清结算的中心，没加银行只需要和银联对接即可实现和所有银行的交易。若去中心化，每家银行需要和所有的交易对手去对接。Blockchain的去中心化，只能在特定领域（即不适合中心化的领域）发挥作用。\n\n当然，对于为了提高效率，降低内耗的联盟链来讲，还是有一定的应用价值。\n比如对银行来说：\n银行是不会接受谁都能来参与形成节点的区块链的，如果违法违规的事件发生时，银行没有权利保护被受害人，老百姓是不会买账的。那么，银行就必须限制节点参与记账，有且只有银行的“亲信节点”能够记账。这样，就保证银行的命令和想法能被每一个记账人执行而不出漏子，也同时保证隔壁不会有新的记账人跳进你的链里来搞事。这就便是“中心化的”区块链了。\n\n现在很多创业者们，说能用区块链解决信任的问题。我也不是想泼冷水...但是你们一没比特币那样大量的矿工和算力，二没金字塔顶端阶层的庞大信用，三没有木仓，这样的区块链就是无本之木，搞出来的应用还不如不用区块链简洁，除了忽悠风投好讲故事之外还有啥用啊？\n\n### 必要性\n必要性上面叙述了为了保证安全，必须投入大量成本。而成本又必须要来源于系统之外——不然的话，区块链就又变回了少数人操纵的游戏。而如此麻烦复杂的系统，真的是必要的吗？且不说金融系统目前有完善的解决方案，我们就谈一点：如果一个比特币交易所（或者：银行），哪怕采用了“区块链”技术，你还是要先信任它。不管这家高大上的机构采用了何种技术，你首先要把钱交给它。  \n\n当你把钱交给它以后，意味着你已经信任它了——那么，它采用什么技术，还有什么关系吗？（有的吧，比如说用了这个科技才会得到信任？）且不论用区块链记录股权是否合理，购买一家公司的股权，说明已经认可了这家公司的股权合同。至于这家公司以后命运如何，至少当你决定买下这股权时，已经决心承担持有期间的风险。此时，其实最大的风险已经被你接受，至于权益是以何种形式记载，无论是记载在羊皮纸还是区块链，只是形式的区别。真正重要的是你已经确立了权益关系。因此，在使用区块链进行所谓股权交易时，只是简化了股权交割和股权证明保存的步骤。或者说，保证你的股权证不会丢失或者被盗。当然事实上使用比特币记录股权是非常危险的，比特币私钥随时可能丢失和被盗——还不能补发，这和你丢了A股账户卡那张破纸完全不是一个性质。如果你的权益私钥丢失了，你就事实上失去了对公司权益的所有权。更不要说区块链系统的成本还包含学习成本！\n\n### 替代\n相比区块链这个复杂脆弱成本高昂的系统，现有的系统在处理很多问题上已经足够好了。现在的证券、银行的电子交易系统，虽然还有这样那样的问题，但能保证起码的安全，并有相当的效率。交易所的系统处理都是微秒级撮合，最快的日内选手也能发挥优势。而区块链为了保证安全，至少也要异步处理，延迟个半分钟吧？——这样效率的损失，究竟有否必要呢？\n\n[参考：Velaciela](https://dudu.zhihu.com/story/7563657)\n\n## 区块链的现有难题\n### 处理性能\n\n如何提高交易的吞吐量，同时降低交易的确认延迟。\n目前，公开的比特币区块链只能支持平均每秒约 7 笔的吞吐量，一般认为对于大额交易来说，安全的交易确认时间为一个小时。小额交易只要确认被广播到网络中并带有交易服务费用，即有较大概率被最终打包到区块中。\n> 因为在当前的算力下，对于6个区块（1小时）以前所记录的区块基本没有可以更改的可能性。\n\n区块链系统跟传统分布式系统不同，其处理性能无法通过单纯增加节点数来进行扩展，实际上，很大程度上取决于单个节点的处理能力。高性能、安全、稳定性、硬件辅助加解密能力，都将是考察节点性能的核心要素。\n\n一方面可以将单个节点采用高性能的处理硬件，同时设计优化的策略和算法，提高性能；另外一方面将大量高频的交易放到链外来，只用区块链记录最终交易信息，如 闪电网络 等。类似的，侧链（side chain）、影子链（shadow chain）等的思路在当前阶段也有一定的借鉴意义。类似设计可以很容易的将交易性能提升 1-2 个数量级。此外，如果采用联盟链的方式，在一定的信任前提和利益约束下优化设计，也可以换来性能的提升。目前，开源区块链自身在平台层面已经实现普通配置，单客户端每秒数百次的交易吞吐量（参考后面的 性能评测数据），乐观预测将很快突破每秒数千次的基准线，但离现有证券交易系统的每秒数万笔的峰值还是有较大差距。另外，从工程设计和平台部署上，都存在一些可以优化的地方。\n\n> 注：VISA 系统的处理均值为 2000 tps，号称的峰值为 56,000 tps；某支付系统的处理峰值超过了 85,000 tps；某证券交易所号称的处理均（峰）值在 80,000 tps 左右。\n\n### 扩展性\n\n常见的分布式系统，可以通过增加节点来扩展整个系统的处理能力。对于区块链网络系统来说，这个问题并非那么简单。\n\n网络中每个参与维护的核心节点都要保持一份完整的存储，并且进行智能合约的处理。因此，整个网络的总存储和计算能力，取决于单个节点。甚至当网络中节点数过多时，可能会因为一致性的达成过程延迟降低整个网络的性能。尤其在公有网络中，由于大量低质量处理节点的存在问题将更明显。信息量越大， 交叉验证所需的时间越长，效率也会也会越地下。**所以，区块链解决了信任问题，但带来了成本的上升和效率的下降。**\n\n比较直接的一些思路，是放松对每个节点都必须参与完整处理的限制（但至少部分节点要能合作完成完整的处理），这个思路已经在超级账本中启用；同时尽量减少核心层的处理工作。\n在联盟链模式下，还可以专门采用高性能的节点作为核心节点，用相对较弱的节点作为代理访问节点。\n\n### 系统安全\n\n区块链目前最热门的应用前景是金融相关的服务，安全自然是讨论最多、挑战最大的话题。\n\n区块链在设计上基于现有的成熟的密码学算法。但这是否就能确保其安全呢？\n世界上并没有绝对安全的系统。系统是由人设计的，系统也是由人来运营的，只要有人参与的系统，就容易出现漏洞。\n可以参考，著名黑客米特尼克所著的《反欺骗的艺术——世界传奇黑客的经历分享》，介绍了大量的实际社交工程欺骗场景。\n\n有如下几个方面是很难逃避的:\n首先是立法。对区块链系统如何进行监管？攻击区块链系统是否属于犯罪？攻击银行系统是要承担后果的。但是目前还没有任何法律保护区块链以及基于它的实现。\n\n其次是软件实现的潜在漏洞是无法避免的。考虑到使用了几十年的 openssl 还带着那么低级的漏洞（heart bleeding），而且是源代码就在大家眼皮底下。这背后曾经发生过啥，让人遐想连篇。对于金融系统来说，无论客户端还是平台侧，即便是很小的漏洞都可能造成难以估计的损失。\n\n另外，公有区块链所有交易记录都是公开可见的。搞大数据的人听了是不是开始激动起来了，确实，这里面能分析的东西还真不少，而且规模够大、影响力够大……实际上，已有文献证明，比特币区块链的交易记录最终是能追踪到用户的。\n还有就是作为一套完全的分布式系统，公有的区块链缺乏有效的调整机制，一旦运行起来，出现问题也难以修正。即使是让它变得更公平、更完善的修改，只要有部分既得利益者合起来反对，那就无法加入进去。这让比特币本身的价值也蒙上了一层阴影。\n\n此外，运行在区块链上的智能合约应用可能是五花八门的，必须要有办法进行安全管控，在注册和运行前需要有机制进行探测，以规避恶意代码的破坏。2016年6月17日，发生 DAO 系统漏洞被利用 事件，直接导致价值 6000 万美元的数字货币被利用者获取。尽管对于这件事情的反思还在进行中，但事实再次证明，目前基于区块链技术进行生产应用时，务必要细心谨慎地进行设计和验证。\n\n### 数据库和存储系统\n\n区块链网络中的块信息需要写到数据库中进行存储。观察区块链的应用，大量的写操作、hash 计算和验证操作，跟传统数据库的行为十分不同。当年，人们观察到互联网应用大量非事务性的查询操作，而设计了非关系型（NoSql）数据库。那么，针对区块链应用的这些特点，是否可以设计出一些特殊的针对性的数据库呢？\n\nlevelDB、RocksDB 等键值数据库，具备很高的随机写和顺序读写性能，以及相对较差随机读的性能，被广泛应用到了区块链信息存储中。但目前来看，面向区块链的数据库技术仍然是需要突破的技术难点之一。笔者认为，未来将可能出现更具针对性的“块数据库（BlockDB）”，专门服务类似区块链这样的新型数据业务，其中每条记录将包括一个完整的区块信息，并天然地跟历史信息进行关联，一旦写入确认无法修改。所有操作的最小单位将是一个块。\n\n### 可集成性\n\n在相当长的一段时间内，基于区块链的新业务系统将与已有的中心化系统共存。\n两种系统如何共存，如何分工，彼此的业务交易如何进行传递？\n这些都是很迫切的问题。这个问题解决不好，将是区块链技术落地的很大阻碍。\n\n### 智能合约\r智能合约可视作一段部署在区块链上可自动运行的程序,其涵盖的范 围包括编程语言、编译器、虚拟机、事件、状态机、容错机制等。\r\r虚拟机是区块链中智能合约的运行环境。虚拟机不仅被沙箱封装起来, 事实上它被完全隔离。也就是说运行在虚拟机内部的代码不能接触到网络、文件系统或者其他进程。甚至智能合约之间也只能进行有限的调用。智能合约本质上是一段程序,存在出错的可能性,甚至会引发严重问 题或连锁反应。需要做好充分的容错机制,通过系统化的手段,结合运行 环境隔离,确保合约在有限时间内按预期执行。\n\n### 其它\n\n区块链提供的新应用和新的业务场景，也带来了对很多具体的运营问题。\n例如：\n\n- 智能合约的合法性、安全性和可执行性；\n- 如何将现实中的合约和条约对应为电子合约；\n- 分布式系统的伸缩可靠性和数据迁移；\n- 对存储系统新的挑战，特别是性能。\n\n[参考：yeasy](https://github.com/yeasy/blockchain_guide/blob/master/intro/tech.md)\n\n","slug":"区块链真的必要吗","published":1,"updated":"2017-03-19T13:27:00.000Z","layout":"post","photos":[],"link":"","_id":"cjdejwivo001h0x1x8anmn529","content":"<p>区块链技术需要继续克服的难点和其必要性的讨论。</p>\n<a id=\"more\"></a>\n<h2 id=\"你真的需要一个区块链应用吗？\"><a href=\"#你真的需要一个区块链应用吗？\" class=\"headerlink\" title=\"你真的需要一个区块链应用吗？\"></a>你真的需要一个区块链应用吗？</h2><p><img src=\"https://s6.postimg.org/awoa0yfo1/14898921653620.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"成本。全部的成本\"><a href=\"#成本。全部的成本\" class=\"headerlink\" title=\"成本。全部的成本\"></a>成本。全部的成本</h3><p>对于区块链技术而言，首先是维护成本。区块链要运行，必须有一定的投资。如果要安全运行，就必须设计出安全机制。而安全机制也需要成本。在目前而言，说区块链比”传统技术”更好的，主要是从安全性、透明性、不可更改（防伪）等特性上出发。那么，要维持这些特性，就必须维持一个符合区块链技术特性的系统——一个开放、分布式的、并且足够安全的数据库系统。</p>\n<p>但是，维持这样一个系统，或者说同时达到这些目标，所需的成本非常昂贵。对于一个符合区块链技术特性的系统，首先要满足的是去中心化。这种去中心化的分布式不仅仅是“灾备”级别的分布式，而是系统中必须存在足够多个互不隶属，且独立决策的节点，并且记录区块链的权利在这些节点中以某些方式公平产生。也就是说，一个区块链系统中如果有100个份额的决策权，某个主体不能拥有51个以上。区块链系统不能由任何一个人说了算，至少要保证任何一个主体（或一致行动人）不占有超过51%的控制权。如果一个区块链系统全部或大部分由某个主体控制，那么和由该主体直接记录就没有差别了，为什么要用区块链呢？之所以用区块链，目的就是为了防止少数人操纵，是基于对个体的不信任。如果单一主体控制了区块链，区块链就失去了意义，甚至还不如由该主体维护的中心化系统效率高。</p>\n<p><span style=\"color:red\"> 中心化并不一定代表着低效率。</span><br>在特定的范围内，中心化带来的资源集中式可以大大提升效率的。就以银联为例，银联是国内银行业清结算的中心，没加银行只需要和银联对接即可实现和所有银行的交易。若去中心化，每家银行需要和所有的交易对手去对接。Blockchain的去中心化，只能在特定领域（即不适合中心化的领域）发挥作用。</p>\n<p>当然，对于为了提高效率，降低内耗的联盟链来讲，还是有一定的应用价值。<br>比如对银行来说：<br>银行是不会接受谁都能来参与形成节点的区块链的，如果违法违规的事件发生时，银行没有权利保护被受害人，老百姓是不会买账的。那么，银行就必须限制节点参与记账，有且只有银行的“亲信节点”能够记账。这样，就保证银行的命令和想法能被每一个记账人执行而不出漏子，也同时保证隔壁不会有新的记账人跳进你的链里来搞事。这就便是“中心化的”区块链了。</p>\n<p>现在很多创业者们，说能用区块链解决信任的问题。我也不是想泼冷水…但是你们一没比特币那样大量的矿工和算力，二没金字塔顶端阶层的庞大信用，三没有木仓，这样的区块链就是无本之木，搞出来的应用还不如不用区块链简洁，除了忽悠风投好讲故事之外还有啥用啊？</p>\n<h3 id=\"必要性\"><a href=\"#必要性\" class=\"headerlink\" title=\"必要性\"></a>必要性</h3><p>必要性上面叙述了为了保证安全，必须投入大量成本。而成本又必须要来源于系统之外——不然的话，区块链就又变回了少数人操纵的游戏。而如此麻烦复杂的系统，真的是必要的吗？且不说金融系统目前有完善的解决方案，我们就谈一点：如果一个比特币交易所（或者：银行），哪怕采用了“区块链”技术，你还是要先信任它。不管这家高大上的机构采用了何种技术，你首先要把钱交给它。  </p>\n<p>当你把钱交给它以后，意味着你已经信任它了——那么，它采用什么技术，还有什么关系吗？（有的吧，比如说用了这个科技才会得到信任？）且不论用区块链记录股权是否合理，购买一家公司的股权，说明已经认可了这家公司的股权合同。至于这家公司以后命运如何，至少当你决定买下这股权时，已经决心承担持有期间的风险。此时，其实最大的风险已经被你接受，至于权益是以何种形式记载，无论是记载在羊皮纸还是区块链，只是形式的区别。真正重要的是你已经确立了权益关系。因此，在使用区块链进行所谓股权交易时，只是简化了股权交割和股权证明保存的步骤。或者说，保证你的股权证不会丢失或者被盗。当然事实上使用比特币记录股权是非常危险的，比特币私钥随时可能丢失和被盗——还不能补发，这和你丢了A股账户卡那张破纸完全不是一个性质。如果你的权益私钥丢失了，你就事实上失去了对公司权益的所有权。更不要说区块链系统的成本还包含学习成本！</p>\n<h3 id=\"替代\"><a href=\"#替代\" class=\"headerlink\" title=\"替代\"></a>替代</h3><p>相比区块链这个复杂脆弱成本高昂的系统，现有的系统在处理很多问题上已经足够好了。现在的证券、银行的电子交易系统，虽然还有这样那样的问题，但能保证起码的安全，并有相当的效率。交易所的系统处理都是微秒级撮合，最快的日内选手也能发挥优势。而区块链为了保证安全，至少也要异步处理，延迟个半分钟吧？——这样效率的损失，究竟有否必要呢？</p>\n<p><a href=\"https://dudu.zhihu.com/story/7563657\" target=\"_blank\" rel=\"external\">参考：Velaciela</a></p>\n<h2 id=\"区块链的现有难题\"><a href=\"#区块链的现有难题\" class=\"headerlink\" title=\"区块链的现有难题\"></a>区块链的现有难题</h2><h3 id=\"处理性能\"><a href=\"#处理性能\" class=\"headerlink\" title=\"处理性能\"></a>处理性能</h3><p>如何提高交易的吞吐量，同时降低交易的确认延迟。<br>目前，公开的比特币区块链只能支持平均每秒约 7 笔的吞吐量，一般认为对于大额交易来说，安全的交易确认时间为一个小时。小额交易只要确认被广播到网络中并带有交易服务费用，即有较大概率被最终打包到区块中。</p>\n<blockquote>\n<p>因为在当前的算力下，对于6个区块（1小时）以前所记录的区块基本没有可以更改的可能性。</p>\n</blockquote>\n<p>区块链系统跟传统分布式系统不同，其处理性能无法通过单纯增加节点数来进行扩展，实际上，很大程度上取决于单个节点的处理能力。高性能、安全、稳定性、硬件辅助加解密能力，都将是考察节点性能的核心要素。</p>\n<p>一方面可以将单个节点采用高性能的处理硬件，同时设计优化的策略和算法，提高性能；另外一方面将大量高频的交易放到链外来，只用区块链记录最终交易信息，如 闪电网络 等。类似的，侧链（side chain）、影子链（shadow chain）等的思路在当前阶段也有一定的借鉴意义。类似设计可以很容易的将交易性能提升 1-2 个数量级。此外，如果采用联盟链的方式，在一定的信任前提和利益约束下优化设计，也可以换来性能的提升。目前，开源区块链自身在平台层面已经实现普通配置，单客户端每秒数百次的交易吞吐量（参考后面的 性能评测数据），乐观预测将很快突破每秒数千次的基准线，但离现有证券交易系统的每秒数万笔的峰值还是有较大差距。另外，从工程设计和平台部署上，都存在一些可以优化的地方。</p>\n<blockquote>\n<p>注：VISA 系统的处理均值为 2000 tps，号称的峰值为 56,000 tps；某支付系统的处理峰值超过了 85,000 tps；某证券交易所号称的处理均（峰）值在 80,000 tps 左右。</p>\n</blockquote>\n<h3 id=\"扩展性\"><a href=\"#扩展性\" class=\"headerlink\" title=\"扩展性\"></a>扩展性</h3><p>常见的分布式系统，可以通过增加节点来扩展整个系统的处理能力。对于区块链网络系统来说，这个问题并非那么简单。</p>\n<p>网络中每个参与维护的核心节点都要保持一份完整的存储，并且进行智能合约的处理。因此，整个网络的总存储和计算能力，取决于单个节点。甚至当网络中节点数过多时，可能会因为一致性的达成过程延迟降低整个网络的性能。尤其在公有网络中，由于大量低质量处理节点的存在问题将更明显。信息量越大， 交叉验证所需的时间越长，效率也会也会越地下。<strong>所以，区块链解决了信任问题，但带来了成本的上升和效率的下降。</strong></p>\n<p>比较直接的一些思路，是放松对每个节点都必须参与完整处理的限制（但至少部分节点要能合作完成完整的处理），这个思路已经在超级账本中启用；同时尽量减少核心层的处理工作。<br>在联盟链模式下，还可以专门采用高性能的节点作为核心节点，用相对较弱的节点作为代理访问节点。</p>\n<h3 id=\"系统安全\"><a href=\"#系统安全\" class=\"headerlink\" title=\"系统安全\"></a>系统安全</h3><p>区块链目前最热门的应用前景是金融相关的服务，安全自然是讨论最多、挑战最大的话题。</p>\n<p>区块链在设计上基于现有的成熟的密码学算法。但这是否就能确保其安全呢？<br>世界上并没有绝对安全的系统。系统是由人设计的，系统也是由人来运营的，只要有人参与的系统，就容易出现漏洞。<br>可以参考，著名黑客米特尼克所著的《反欺骗的艺术——世界传奇黑客的经历分享》，介绍了大量的实际社交工程欺骗场景。</p>\n<p>有如下几个方面是很难逃避的:<br>首先是立法。对区块链系统如何进行监管？攻击区块链系统是否属于犯罪？攻击银行系统是要承担后果的。但是目前还没有任何法律保护区块链以及基于它的实现。</p>\n<p>其次是软件实现的潜在漏洞是无法避免的。考虑到使用了几十年的 openssl 还带着那么低级的漏洞（heart bleeding），而且是源代码就在大家眼皮底下。这背后曾经发生过啥，让人遐想连篇。对于金融系统来说，无论客户端还是平台侧，即便是很小的漏洞都可能造成难以估计的损失。</p>\n<p>另外，公有区块链所有交易记录都是公开可见的。搞大数据的人听了是不是开始激动起来了，确实，这里面能分析的东西还真不少，而且规模够大、影响力够大……实际上，已有文献证明，比特币区块链的交易记录最终是能追踪到用户的。<br>还有就是作为一套完全的分布式系统，公有的区块链缺乏有效的调整机制，一旦运行起来，出现问题也难以修正。即使是让它变得更公平、更完善的修改，只要有部分既得利益者合起来反对，那就无法加入进去。这让比特币本身的价值也蒙上了一层阴影。</p>\n<p>此外，运行在区块链上的智能合约应用可能是五花八门的，必须要有办法进行安全管控，在注册和运行前需要有机制进行探测，以规避恶意代码的破坏。2016年6月17日，发生 DAO 系统漏洞被利用 事件，直接导致价值 6000 万美元的数字货币被利用者获取。尽管对于这件事情的反思还在进行中，但事实再次证明，目前基于区块链技术进行生产应用时，务必要细心谨慎地进行设计和验证。</p>\n<h3 id=\"数据库和存储系统\"><a href=\"#数据库和存储系统\" class=\"headerlink\" title=\"数据库和存储系统\"></a>数据库和存储系统</h3><p>区块链网络中的块信息需要写到数据库中进行存储。观察区块链的应用，大量的写操作、hash 计算和验证操作，跟传统数据库的行为十分不同。当年，人们观察到互联网应用大量非事务性的查询操作，而设计了非关系型（NoSql）数据库。那么，针对区块链应用的这些特点，是否可以设计出一些特殊的针对性的数据库呢？</p>\n<p>levelDB、RocksDB 等键值数据库，具备很高的随机写和顺序读写性能，以及相对较差随机读的性能，被广泛应用到了区块链信息存储中。但目前来看，面向区块链的数据库技术仍然是需要突破的技术难点之一。笔者认为，未来将可能出现更具针对性的“块数据库（BlockDB）”，专门服务类似区块链这样的新型数据业务，其中每条记录将包括一个完整的区块信息，并天然地跟历史信息进行关联，一旦写入确认无法修改。所有操作的最小单位将是一个块。</p>\n<h3 id=\"可集成性\"><a href=\"#可集成性\" class=\"headerlink\" title=\"可集成性\"></a>可集成性</h3><p>在相当长的一段时间内，基于区块链的新业务系统将与已有的中心化系统共存。<br>两种系统如何共存，如何分工，彼此的业务交易如何进行传递？<br>这些都是很迫切的问题。这个问题解决不好，将是区块链技术落地的很大阻碍。</p>\n<h3 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h3><p>智能合约可视作一段部署在区块链上可自动运行的程序,其涵盖的范 围包括编程语言、编译器、虚拟机、事件、状态机、容错机制等。</p>\n<p>虚拟机是区块链中智能合约的运行环境。虚拟机不仅被沙箱封装起来, 事实上它被完全隔离。也就是说运行在虚拟机内部的代码不能接触到网络、文件系统或者其他进程。甚至智能合约之间也只能进行有限的调用。智能合约本质上是一段程序,存在出错的可能性,甚至会引发严重问 题或连锁反应。需要做好充分的容错机制,通过系统化的手段,结合运行 环境隔离,确保合约在有限时间内按预期执行。</p>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><p>区块链提供的新应用和新的业务场景，也带来了对很多具体的运营问题。<br>例如：</p>\n<ul>\n<li>智能合约的合法性、安全性和可执行性；</li>\n<li>如何将现实中的合约和条约对应为电子合约；</li>\n<li>分布式系统的伸缩可靠性和数据迁移；</li>\n<li>对存储系统新的挑战，特别是性能。</li>\n</ul>\n<p><a href=\"https://github.com/yeasy/blockchain_guide/blob/master/intro/tech.md\" target=\"_blank\" rel=\"external\">参考：yeasy</a></p>\n","site":{"data":{}},"excerpt":"<p>区块链技术需要继续克服的难点和其必要性的讨论。</p>","more":"<h2 id=\"你真的需要一个区块链应用吗？\"><a href=\"#你真的需要一个区块链应用吗？\" class=\"headerlink\" title=\"你真的需要一个区块链应用吗？\"></a>你真的需要一个区块链应用吗？</h2><p><img src=\"https://s6.postimg.org/awoa0yfo1/14898921653620.jpg\" class=\"img-shadow\"></p>\n<h3 id=\"成本。全部的成本\"><a href=\"#成本。全部的成本\" class=\"headerlink\" title=\"成本。全部的成本\"></a>成本。全部的成本</h3><p>对于区块链技术而言，首先是维护成本。区块链要运行，必须有一定的投资。如果要安全运行，就必须设计出安全机制。而安全机制也需要成本。在目前而言，说区块链比”传统技术”更好的，主要是从安全性、透明性、不可更改（防伪）等特性上出发。那么，要维持这些特性，就必须维持一个符合区块链技术特性的系统——一个开放、分布式的、并且足够安全的数据库系统。</p>\n<p>但是，维持这样一个系统，或者说同时达到这些目标，所需的成本非常昂贵。对于一个符合区块链技术特性的系统，首先要满足的是去中心化。这种去中心化的分布式不仅仅是“灾备”级别的分布式，而是系统中必须存在足够多个互不隶属，且独立决策的节点，并且记录区块链的权利在这些节点中以某些方式公平产生。也就是说，一个区块链系统中如果有100个份额的决策权，某个主体不能拥有51个以上。区块链系统不能由任何一个人说了算，至少要保证任何一个主体（或一致行动人）不占有超过51%的控制权。如果一个区块链系统全部或大部分由某个主体控制，那么和由该主体直接记录就没有差别了，为什么要用区块链呢？之所以用区块链，目的就是为了防止少数人操纵，是基于对个体的不信任。如果单一主体控制了区块链，区块链就失去了意义，甚至还不如由该主体维护的中心化系统效率高。</p>\n<p><span style=\"color:red\"> 中心化并不一定代表着低效率。</span><br>在特定的范围内，中心化带来的资源集中式可以大大提升效率的。就以银联为例，银联是国内银行业清结算的中心，没加银行只需要和银联对接即可实现和所有银行的交易。若去中心化，每家银行需要和所有的交易对手去对接。Blockchain的去中心化，只能在特定领域（即不适合中心化的领域）发挥作用。</p>\n<p>当然，对于为了提高效率，降低内耗的联盟链来讲，还是有一定的应用价值。<br>比如对银行来说：<br>银行是不会接受谁都能来参与形成节点的区块链的，如果违法违规的事件发生时，银行没有权利保护被受害人，老百姓是不会买账的。那么，银行就必须限制节点参与记账，有且只有银行的“亲信节点”能够记账。这样，就保证银行的命令和想法能被每一个记账人执行而不出漏子，也同时保证隔壁不会有新的记账人跳进你的链里来搞事。这就便是“中心化的”区块链了。</p>\n<p>现在很多创业者们，说能用区块链解决信任的问题。我也不是想泼冷水…但是你们一没比特币那样大量的矿工和算力，二没金字塔顶端阶层的庞大信用，三没有木仓，这样的区块链就是无本之木，搞出来的应用还不如不用区块链简洁，除了忽悠风投好讲故事之外还有啥用啊？</p>\n<h3 id=\"必要性\"><a href=\"#必要性\" class=\"headerlink\" title=\"必要性\"></a>必要性</h3><p>必要性上面叙述了为了保证安全，必须投入大量成本。而成本又必须要来源于系统之外——不然的话，区块链就又变回了少数人操纵的游戏。而如此麻烦复杂的系统，真的是必要的吗？且不说金融系统目前有完善的解决方案，我们就谈一点：如果一个比特币交易所（或者：银行），哪怕采用了“区块链”技术，你还是要先信任它。不管这家高大上的机构采用了何种技术，你首先要把钱交给它。  </p>\n<p>当你把钱交给它以后，意味着你已经信任它了——那么，它采用什么技术，还有什么关系吗？（有的吧，比如说用了这个科技才会得到信任？）且不论用区块链记录股权是否合理，购买一家公司的股权，说明已经认可了这家公司的股权合同。至于这家公司以后命运如何，至少当你决定买下这股权时，已经决心承担持有期间的风险。此时，其实最大的风险已经被你接受，至于权益是以何种形式记载，无论是记载在羊皮纸还是区块链，只是形式的区别。真正重要的是你已经确立了权益关系。因此，在使用区块链进行所谓股权交易时，只是简化了股权交割和股权证明保存的步骤。或者说，保证你的股权证不会丢失或者被盗。当然事实上使用比特币记录股权是非常危险的，比特币私钥随时可能丢失和被盗——还不能补发，这和你丢了A股账户卡那张破纸完全不是一个性质。如果你的权益私钥丢失了，你就事实上失去了对公司权益的所有权。更不要说区块链系统的成本还包含学习成本！</p>\n<h3 id=\"替代\"><a href=\"#替代\" class=\"headerlink\" title=\"替代\"></a>替代</h3><p>相比区块链这个复杂脆弱成本高昂的系统，现有的系统在处理很多问题上已经足够好了。现在的证券、银行的电子交易系统，虽然还有这样那样的问题，但能保证起码的安全，并有相当的效率。交易所的系统处理都是微秒级撮合，最快的日内选手也能发挥优势。而区块链为了保证安全，至少也要异步处理，延迟个半分钟吧？——这样效率的损失，究竟有否必要呢？</p>\n<p><a href=\"https://dudu.zhihu.com/story/7563657\" target=\"_blank\" rel=\"external\">参考：Velaciela</a></p>\n<h2 id=\"区块链的现有难题\"><a href=\"#区块链的现有难题\" class=\"headerlink\" title=\"区块链的现有难题\"></a>区块链的现有难题</h2><h3 id=\"处理性能\"><a href=\"#处理性能\" class=\"headerlink\" title=\"处理性能\"></a>处理性能</h3><p>如何提高交易的吞吐量，同时降低交易的确认延迟。<br>目前，公开的比特币区块链只能支持平均每秒约 7 笔的吞吐量，一般认为对于大额交易来说，安全的交易确认时间为一个小时。小额交易只要确认被广播到网络中并带有交易服务费用，即有较大概率被最终打包到区块中。</p>\n<blockquote>\n<p>因为在当前的算力下，对于6个区块（1小时）以前所记录的区块基本没有可以更改的可能性。</p>\n</blockquote>\n<p>区块链系统跟传统分布式系统不同，其处理性能无法通过单纯增加节点数来进行扩展，实际上，很大程度上取决于单个节点的处理能力。高性能、安全、稳定性、硬件辅助加解密能力，都将是考察节点性能的核心要素。</p>\n<p>一方面可以将单个节点采用高性能的处理硬件，同时设计优化的策略和算法，提高性能；另外一方面将大量高频的交易放到链外来，只用区块链记录最终交易信息，如 闪电网络 等。类似的，侧链（side chain）、影子链（shadow chain）等的思路在当前阶段也有一定的借鉴意义。类似设计可以很容易的将交易性能提升 1-2 个数量级。此外，如果采用联盟链的方式，在一定的信任前提和利益约束下优化设计，也可以换来性能的提升。目前，开源区块链自身在平台层面已经实现普通配置，单客户端每秒数百次的交易吞吐量（参考后面的 性能评测数据），乐观预测将很快突破每秒数千次的基准线，但离现有证券交易系统的每秒数万笔的峰值还是有较大差距。另外，从工程设计和平台部署上，都存在一些可以优化的地方。</p>\n<blockquote>\n<p>注：VISA 系统的处理均值为 2000 tps，号称的峰值为 56,000 tps；某支付系统的处理峰值超过了 85,000 tps；某证券交易所号称的处理均（峰）值在 80,000 tps 左右。</p>\n</blockquote>\n<h3 id=\"扩展性\"><a href=\"#扩展性\" class=\"headerlink\" title=\"扩展性\"></a>扩展性</h3><p>常见的分布式系统，可以通过增加节点来扩展整个系统的处理能力。对于区块链网络系统来说，这个问题并非那么简单。</p>\n<p>网络中每个参与维护的核心节点都要保持一份完整的存储，并且进行智能合约的处理。因此，整个网络的总存储和计算能力，取决于单个节点。甚至当网络中节点数过多时，可能会因为一致性的达成过程延迟降低整个网络的性能。尤其在公有网络中，由于大量低质量处理节点的存在问题将更明显。信息量越大， 交叉验证所需的时间越长，效率也会也会越地下。<strong>所以，区块链解决了信任问题，但带来了成本的上升和效率的下降。</strong></p>\n<p>比较直接的一些思路，是放松对每个节点都必须参与完整处理的限制（但至少部分节点要能合作完成完整的处理），这个思路已经在超级账本中启用；同时尽量减少核心层的处理工作。<br>在联盟链模式下，还可以专门采用高性能的节点作为核心节点，用相对较弱的节点作为代理访问节点。</p>\n<h3 id=\"系统安全\"><a href=\"#系统安全\" class=\"headerlink\" title=\"系统安全\"></a>系统安全</h3><p>区块链目前最热门的应用前景是金融相关的服务，安全自然是讨论最多、挑战最大的话题。</p>\n<p>区块链在设计上基于现有的成熟的密码学算法。但这是否就能确保其安全呢？<br>世界上并没有绝对安全的系统。系统是由人设计的，系统也是由人来运营的，只要有人参与的系统，就容易出现漏洞。<br>可以参考，著名黑客米特尼克所著的《反欺骗的艺术——世界传奇黑客的经历分享》，介绍了大量的实际社交工程欺骗场景。</p>\n<p>有如下几个方面是很难逃避的:<br>首先是立法。对区块链系统如何进行监管？攻击区块链系统是否属于犯罪？攻击银行系统是要承担后果的。但是目前还没有任何法律保护区块链以及基于它的实现。</p>\n<p>其次是软件实现的潜在漏洞是无法避免的。考虑到使用了几十年的 openssl 还带着那么低级的漏洞（heart bleeding），而且是源代码就在大家眼皮底下。这背后曾经发生过啥，让人遐想连篇。对于金融系统来说，无论客户端还是平台侧，即便是很小的漏洞都可能造成难以估计的损失。</p>\n<p>另外，公有区块链所有交易记录都是公开可见的。搞大数据的人听了是不是开始激动起来了，确实，这里面能分析的东西还真不少，而且规模够大、影响力够大……实际上，已有文献证明，比特币区块链的交易记录最终是能追踪到用户的。<br>还有就是作为一套完全的分布式系统，公有的区块链缺乏有效的调整机制，一旦运行起来，出现问题也难以修正。即使是让它变得更公平、更完善的修改，只要有部分既得利益者合起来反对，那就无法加入进去。这让比特币本身的价值也蒙上了一层阴影。</p>\n<p>此外，运行在区块链上的智能合约应用可能是五花八门的，必须要有办法进行安全管控，在注册和运行前需要有机制进行探测，以规避恶意代码的破坏。2016年6月17日，发生 DAO 系统漏洞被利用 事件，直接导致价值 6000 万美元的数字货币被利用者获取。尽管对于这件事情的反思还在进行中，但事实再次证明，目前基于区块链技术进行生产应用时，务必要细心谨慎地进行设计和验证。</p>\n<h3 id=\"数据库和存储系统\"><a href=\"#数据库和存储系统\" class=\"headerlink\" title=\"数据库和存储系统\"></a>数据库和存储系统</h3><p>区块链网络中的块信息需要写到数据库中进行存储。观察区块链的应用，大量的写操作、hash 计算和验证操作，跟传统数据库的行为十分不同。当年，人们观察到互联网应用大量非事务性的查询操作，而设计了非关系型（NoSql）数据库。那么，针对区块链应用的这些特点，是否可以设计出一些特殊的针对性的数据库呢？</p>\n<p>levelDB、RocksDB 等键值数据库，具备很高的随机写和顺序读写性能，以及相对较差随机读的性能，被广泛应用到了区块链信息存储中。但目前来看，面向区块链的数据库技术仍然是需要突破的技术难点之一。笔者认为，未来将可能出现更具针对性的“块数据库（BlockDB）”，专门服务类似区块链这样的新型数据业务，其中每条记录将包括一个完整的区块信息，并天然地跟历史信息进行关联，一旦写入确认无法修改。所有操作的最小单位将是一个块。</p>\n<h3 id=\"可集成性\"><a href=\"#可集成性\" class=\"headerlink\" title=\"可集成性\"></a>可集成性</h3><p>在相当长的一段时间内，基于区块链的新业务系统将与已有的中心化系统共存。<br>两种系统如何共存，如何分工，彼此的业务交易如何进行传递？<br>这些都是很迫切的问题。这个问题解决不好，将是区块链技术落地的很大阻碍。</p>\n<h3 id=\"智能合约\"><a href=\"#智能合约\" class=\"headerlink\" title=\"智能合约\"></a>智能合约</h3><p>智能合约可视作一段部署在区块链上可自动运行的程序,其涵盖的范 围包括编程语言、编译器、虚拟机、事件、状态机、容错机制等。</p>\n<p>虚拟机是区块链中智能合约的运行环境。虚拟机不仅被沙箱封装起来, 事实上它被完全隔离。也就是说运行在虚拟机内部的代码不能接触到网络、文件系统或者其他进程。甚至智能合约之间也只能进行有限的调用。智能合约本质上是一段程序,存在出错的可能性,甚至会引发严重问 题或连锁反应。需要做好充分的容错机制,通过系统化的手段,结合运行 环境隔离,确保合约在有限时间内按预期执行。</p>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><p>区块链提供的新应用和新的业务场景，也带来了对很多具体的运营问题。<br>例如：</p>\n<ul>\n<li>智能合约的合法性、安全性和可执行性；</li>\n<li>如何将现实中的合约和条约对应为电子合约；</li>\n<li>分布式系统的伸缩可靠性和数据迁移；</li>\n<li>对存储系统新的挑战，特别是性能。</li>\n</ul>\n<p><a href=\"https://github.com/yeasy/blockchain_guide/blob/master/intro/tech.md\" target=\"_blank\" rel=\"external\">参考：yeasy</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjdejwiu200000x1xf1xqqw9h","category_id":"cjdejwiuh00040x1x0ojqnbnj","_id":"cjdejwiuz000g0x1xbgrgnk33"},{"post_id":"cjdejwiuc00020x1xd1ieko85","category_id":"cjdejwiuh00040x1x0ojqnbnj","_id":"cjdejwiv4000m0x1x5bnep8it"},{"post_id":"cjdejwiux000e0x1xc639ie82","category_id":"cjdejwiuh00040x1x0ojqnbnj","_id":"cjdejwiv6000r0x1xuo73u42v"},{"post_id":"cjdejwiv0000j0x1xlirub5e4","category_id":"cjdejwiuy000f0x1x8fve4fin","_id":"cjdejwiv9000u0x1xvgyo6749"},{"post_id":"cjdejwiul00060x1xwejkblig","category_id":"cjdejwiuy000f0x1x8fve4fin","_id":"cjdejwiva000y0x1x3ewzv35a"},{"post_id":"cjdejwiuo00080x1xdod37afr","category_id":"cjdejwiv4000n0x1xv7trkcia","_id":"cjdejwivc00110x1xqzbdl4ig"},{"post_id":"cjdejwiup00090x1xc1m88dtm","category_id":"cjdejwiv9000v0x1xdr4dizxs","_id":"cjdejwivi00160x1x6f8srjpj"},{"post_id":"cjdejwivg00150x1xtdc4i2ar","category_id":"cjdejwiv9000v0x1xdr4dizxs","_id":"cjdejwivn001e0x1x09mid44j"},{"post_id":"cjdejwiuu000d0x1xu80zedsp","category_id":"cjdejwivd00120x1xnx45rm4d","_id":"cjdejwivp001i0x1x1h0hingh"},{"post_id":"cjdejwivi00170x1xie4iglyc","category_id":"cjdejwiuh00040x1x0ojqnbnj","_id":"cjdejwivq001k0x1xqum3fx29"},{"post_id":"cjdejwiv3000l0x1xchghg0ps","category_id":"cjdejwivd00120x1xnx45rm4d","_id":"cjdejwivr001o0x1x0pjg1uwd"},{"post_id":"cjdejwivm001d0x1xumt7pbdk","category_id":"cjdejwiuy000f0x1x8fve4fin","_id":"cjdejwivs001q0x1xv3740rfn"},{"post_id":"cjdejwivo001h0x1x8anmn529","category_id":"cjdejwiuy000f0x1x8fve4fin","_id":"cjdejwivt001u0x1xaybc6duj"},{"post_id":"cjdejwiv5000q0x1xvmsguz7c","category_id":"cjdejwivn001f0x1x1nrjpz4a","_id":"cjdejwivt001w0x1xnthsek2x"},{"post_id":"cjdejwiv7000t0x1xdis2s4d3","category_id":"cjdejwivd00120x1xnx45rm4d","_id":"cjdejwivv00200x1xh4uoir3h"},{"post_id":"cjdejwiva000x0x1xuho4qfbh","category_id":"cjdejwivs001s0x1xkl65r8dk","_id":"cjdejwivw00240x1xcbvfzvz0"},{"post_id":"cjdejwivb00100x1x5fx6imsq","category_id":"cjdejwivd00120x1xnx45rm4d","_id":"cjdejwivy00290x1xxyi0202j"},{"post_id":"cjdejwive00140x1xxnwol92n","category_id":"cjdejwivs001s0x1xkl65r8dk","_id":"cjdejwiw0002c0x1x6f1024bi"},{"post_id":"cjdejwivk001b0x1x828eab20","category_id":"cjdejwivs001s0x1xkl65r8dk","_id":"cjdejwiw1002f0x1xofl0pgjm"}],"PostTag":[{"post_id":"cjdejwiu200000x1xf1xqqw9h","tag_id":"cjdejwiuk00050x1x969dxrui","_id":"cjdejwiuu000c0x1xin9g83b2"},{"post_id":"cjdejwiuc00020x1xd1ieko85","tag_id":"cjdejwiuk00050x1x969dxrui","_id":"cjdejwiv0000i0x1xhp4kh3gi"},{"post_id":"cjdejwiux000e0x1xc639ie82","tag_id":"cjdejwiuk00050x1x969dxrui","_id":"cjdejwiv2000k0x1x4g3ong4v"},{"post_id":"cjdejwiv0000j0x1xlirub5e4","tag_id":"cjdejwiuz000h0x1xldgwkk9h","_id":"cjdejwiv5000p0x1xl2qgca1l"},{"post_id":"cjdejwiul00060x1xwejkblig","tag_id":"cjdejwiuz000h0x1xldgwkk9h","_id":"cjdejwiv7000s0x1x61u6f10s"},{"post_id":"cjdejwiuo00080x1xdod37afr","tag_id":"cjdejwiv4000o0x1xxqs49kcg","_id":"cjdejwivb000z0x1xucs2a2fa"},{"post_id":"cjdejwivg00150x1xtdc4i2ar","tag_id":"cjdejwiv9000w0x1xgpdhifxw","_id":"cjdejwivk001a0x1x8ahxh4ei"},{"post_id":"cjdejwivi00170x1xie4iglyc","tag_id":"cjdejwiuk00050x1x969dxrui","_id":"cjdejwivm001c0x1xrdyh2opw"},{"post_id":"cjdejwiup00090x1xc1m88dtm","tag_id":"cjdejwiv9000w0x1xgpdhifxw","_id":"cjdejwivp001j0x1xktg6t9nc"},{"post_id":"cjdejwiup00090x1xc1m88dtm","tag_id":"cjdejwive00130x1x7pie0oaf","_id":"cjdejwivq001l0x1xl7ojb8ay"},{"post_id":"cjdejwiup00090x1xc1m88dtm","tag_id":"cjdejwivj00190x1xbyga42ub","_id":"cjdejwivr001p0x1xurky24n9"},{"post_id":"cjdejwivm001d0x1xumt7pbdk","tag_id":"cjdejwiuz000h0x1xldgwkk9h","_id":"cjdejwivs001r0x1xvcptwhm0"},{"post_id":"cjdejwivo001h0x1x8anmn529","tag_id":"cjdejwiuz000h0x1xldgwkk9h","_id":"cjdejwivt001v0x1xi4p2wetp"},{"post_id":"cjdejwiuu000d0x1xu80zedsp","tag_id":"cjdejwivn001g0x1xobhxbieg","_id":"cjdejwivt001x0x1xqene5yoc"},{"post_id":"cjdejwiv3000l0x1xchghg0ps","tag_id":"cjdejwiuk00050x1x969dxrui","_id":"cjdejwivv00210x1x1i5v0pmg"},{"post_id":"cjdejwiv3000l0x1xchghg0ps","tag_id":"cjdejwivn001g0x1xobhxbieg","_id":"cjdejwivv00220x1xj9lzsurl"},{"post_id":"cjdejwiv5000q0x1xvmsguz7c","tag_id":"cjdejwive00130x1x7pie0oaf","_id":"cjdejwivx00260x1x0pgy1u9c"},{"post_id":"cjdejwiv7000t0x1xdis2s4d3","tag_id":"cjdejwivn001g0x1xobhxbieg","_id":"cjdejwivy00270x1xmrhoc6fq"},{"post_id":"cjdejwiva000x0x1xuho4qfbh","tag_id":"cjdejwivw00250x1xlt8xee2l","_id":"cjdejwivz002b0x1xjfce0n7j"},{"post_id":"cjdejwivb00100x1x5fx6imsq","tag_id":"cjdejwivn001g0x1xobhxbieg","_id":"cjdejwiw0002e0x1xkspk0b6k"},{"post_id":"cjdejwive00140x1xxnwol92n","tag_id":"cjdejwiw0002d0x1xhp69zbh1","_id":"cjdejwiw1002h0x1x4n70m20k"},{"post_id":"cjdejwivk001b0x1x828eab20","tag_id":"cjdejwiw1002g0x1x4oz9icx4","_id":"cjdejwiw2002i0x1xtq75pzm8"}],"Tag":[{"name":"website dev","_id":"cjdejwiuk00050x1x969dxrui"},{"name":"blockchain","_id":"cjdejwiuz000h0x1xldgwkk9h"},{"name":"web scraping","_id":"cjdejwiv4000o0x1xxqs49kcg"},{"name":"spark","_id":"cjdejwiv9000w0x1xgpdhifxw"},{"name":"hadoop","_id":"cjdejwive00130x1x7pie0oaf"},{"name":"python","_id":"cjdejwivj00190x1xbyga42ub"},{"name":"hexo","_id":"cjdejwivn001g0x1xobhxbieg"},{"name":"git","_id":"cjdejwivw00250x1xlt8xee2l"},{"name":"shell","_id":"cjdejwiw0002d0x1xhp69zbh1"},{"name":"network","_id":"cjdejwiw1002g0x1x4oz9icx4"}]}}